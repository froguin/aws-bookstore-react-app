{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nexport default function dispatch(element, eventType, evtName, init_dict) {\n  if (evtName === void 0) {\n    evtName = 'Event';\n  }\n\n  if (init_dict === void 0) {\n    init_dict = {};\n  }\n\n  var event;\n  var isCustom;\n  var initDict = init_dict;\n  var eventName = evtName; // eventName is optional\n\n  if (typeof eventName === 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict['bubbles'] = initDict['bubbles'] || false;\n  initDict['cancelable'] = initDict['cancelable'] || false;\n  initDict['composed'] = initDict['composed'] || false; // If a detail property is passed, this is a custom event.\n\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName; // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch (err) {\n    event = document.createEvent(eventName);\n    var initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict['bubbles'], initDict['cancelable'], initDict['detail']);\n  }\n\n  return element.dispatchEvent(event);\n}","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;;;;;;;AAaA,eAAc,SAAUA,QAAV,CACbC,OADa,EAEbC,SAFa,EAGbC,OAHa,EAIbC,SAJa,EAIC;AADd;AAAAD;AAAiB;;AACjB;AAAAC;AAAc;;AAEd,MAAIC,KAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,QAAQ,GAAGH,SAAf;AACA,MAAII,SAAS,GAAGL,OAAhB,CALc,CAOd;;AACA,MAAI,OAAOK,SAAP,KAAqB,QAAzB,EAAmC;AAClCD,YAAQ,GAAGC,SAAX;AACAA,aAAS,GAAG,OAAZ;AACA;;AAEDD,UAAQ,CAAC,SAAD,CAAR,GAAsBA,QAAQ,CAAC,SAAD,CAAR,IAAuB,KAA7C;AACAA,UAAQ,CAAC,YAAD,CAAR,GAAyBA,QAAQ,CAAC,YAAD,CAAR,IAA0B,KAAnD;AACAA,UAAQ,CAAC,UAAD,CAAR,GAAuBA,QAAQ,CAAC,UAAD,CAAR,IAAwB,KAA/C,CAfc,CAiBd;;AACA,MAAI,YAAYA,QAAhB,EAA0BD,QAAQ,GAAG,IAAX;AAC1BE,WAAS,GAAGF,QAAQ,GAAG,aAAH,GAAmBE,SAAvC,CAnBc,CAqBd;AACA;;AACA,MAAI;AACHH,SAAK,GAAG,IAAII,MAAM,CAACD,SAAD,CAAV,CAAsBN,SAAtB,EAAiCK,QAAjC,CAAR;AACA,GAFD,CAEE,OAAOG,GAAP,EAAY;AACbL,SAAK,GAAGM,QAAQ,CAACC,WAAT,CAAqBJ,SAArB,CAAR;AACA,QAAMK,UAAU,GAAG,UAAUP,QAAQ,GAAG,QAAH,GAAc,EAAhC,IAAsC,OAAzD;AACAD,SAAK,CAACQ,UAAD,CAAL,CACCX,SADD,EAECK,QAAQ,CAAC,SAAD,CAFT,EAGCA,QAAQ,CAAC,YAAD,CAHT,EAICA,QAAQ,CAAC,QAAD,CAJT;AAMA;;AAED,SAAON,OAAO,CAACa,aAAR,CAAsBT,KAAtB,CAAP;AACA","names":["dispatch","element","eventType","evtName","init_dict","event","isCustom","initDict","eventName","window","err","document","createEvent","initMethod","dispatchEvent"],"sourceRoot":"","sources":["../../../src/vendor/dom-utils/dispatch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}