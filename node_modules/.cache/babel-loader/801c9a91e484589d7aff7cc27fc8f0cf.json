{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar buffer_1 = require(\"buffer\");\n\nvar is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\n\nfunction fromArrayBuffer(input, offset, length) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (length === void 0) {\n    length = input.byteLength - offset;\n  }\n\n  if (!is_array_buffer_1.isArrayBuffer(input)) {\n    throw new Error(\"argument passed to fromArrayBuffer was not an ArrayBuffer\");\n  }\n\n  if (typeof buffer_1.Buffer.from === \"function\" && buffer_1.Buffer.from !== Uint8Array.from) {\n    return buffer_1.Buffer.from(input, offset, length);\n  } // Any version of node that supports the optional offset and length\n  // parameters, which were added in Node 6.0.0, will support Buffer.from and\n  // have already returned. Throw if offset is not 0 or if length differs from\n  // the underlying buffer's length.\n\n\n  if (offset !== 0 || length !== input.byteLength) {\n    throw new Error(\"Unable to convert TypedArray to Buffer in Node \" + process.version);\n  }\n\n  return new buffer_1.Buffer(input);\n}\n\nexports.fromArrayBuffer = fromArrayBuffer;\n\nfunction fromString(input, encoding) {\n  if (typeof input !== \"string\") {\n    throw new Error(\"argument passed to fromString was not a string\");\n  }\n\n  if (typeof buffer_1.Buffer.from === \"function\" && buffer_1.Buffer.from !== Uint8Array.from) {\n    return buffer_1.Buffer.from(input, encoding);\n  }\n\n  return new buffer_1.Buffer(input, encoding);\n}\n\nexports.fromString = fromString;","map":{"version":3,"mappings":";;;;;;AAAA;;AACA;;AAEA,SAAgBA,eAAhB,CACEC,KADF,EAEEC,MAFF,EAGEC,MAHF,EAG4C;AAD1C;AAAAD;AAAkB;;AAClB;AAAAC,aAAiBF,KAAK,CAACG,UAAN,GAAmBF,MAApC;AAA0C;;AAE1C,MAAI,CAACG,gCAAcJ,KAAd,CAAL,EAA2B;AACzB,UAAM,IAAIK,KAAJ,CACJ,2DADI,CAAN;AAGD;;AAED,MAAI,OAAOC,gBAAOC,IAAd,KAAuB,UAAvB,IAAqCD,gBAAOC,IAAP,KAAgBC,UAAU,CAACD,IAApE,EAA0E;AACxE,WAAOD,gBAAOC,IAAP,CAAYP,KAAZ,EAAmBC,MAAnB,EAA2BC,MAA3B,CAAP;AACD,GAVyC,CAY1C;AACA;AACA;AACA;;;AACA,MAAID,MAAM,KAAK,CAAX,IAAgBC,MAAM,KAAKF,KAAK,CAACG,UAArC,EAAiD;AAC/C,UAAM,IAAIE,KAAJ,CACJ,oDAAkDI,OAAO,CAACC,OADtD,CAAN;AAGD;;AACD,SAAO,IAAIJ,eAAJ,CAAWN,KAAX,CAAP;AACD;;AAzBDW;;AA2BA,SAAgBC,UAAhB,CACEZ,KADF,EAEEa,QAFF,EAWY;AAEV,MAAI,OAAOb,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAM,IAAIK,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,MAAI,OAAOC,gBAAOC,IAAd,KAAuB,UAAvB,IAAqCD,gBAAOC,IAAP,KAAgBC,UAAU,CAACD,IAApE,EAA0E;AACxE,WAAOD,gBAAOC,IAAP,CAAYP,KAAZ,EAAmBa,QAAnB,CAAP;AACD;;AAED,SAAO,IAAIP,eAAJ,CAAWN,KAAX,EAAkBa,QAAlB,CAAP;AACD;;AAtBDF","names":["fromArrayBuffer","input","offset","length","byteLength","is_array_buffer_1","Error","buffer_1","from","Uint8Array","process","version","exports","fromString","encoding"],"sourceRoot":"./src/","sources":["index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}