{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ConsoleLogger as Logger, ClientDevice, Platform, Credentials, Signer, JS, Hub } from '@aws-amplify/core';\nimport * as MobileAnalytics from 'aws-sdk/clients/mobileanalytics';\nimport * as Pinpoint from 'aws-sdk/clients/pinpoint';\nimport Cache from '@aws-amplify/cache';\nimport { v1 as uuid } from 'uuid';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAnalyticsEvent = function dispatchAnalyticsEvent(event, data) {\n  Hub.dispatch('analytics', {\n    event: event,\n    data: data\n  }, 'Analytics', AMPLIFY_SYMBOL);\n};\n\nvar logger = new Logger('AWSPinpointProvider');\nvar RETRYABLE_CODES = [429, 500];\nvar ACCEPTED_CODES = [202];\nvar MOBILE_SERVICE_NAME = 'mobiletargeting';\nvar BEACON_SUPPORTED = navigator && typeof navigator.sendBeacon === 'function'; // events buffer\n\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\n\nvar RESEND_LIMIT = 5; // params: { event: {name: , .... }, timeStamp, config, resendLimit }\n\nvar AWSPinpointProvider =\n/** @class */\nfunction () {\n  function AWSPinpointProvider(config) {\n    this._endpointGenerating = true;\n    this._buffer = [];\n    this._config = config ? config : {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n    this._clientInfo = ClientDevice.clientInfo();\n  }\n\n  AWSPinpointProvider.prototype._setupTimer = function () {\n    var _this = this;\n\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n\n    var _a = this._config,\n        flushSize = _a.flushSize,\n        flushInterval = _a.flushInterval;\n    var that = this;\n    this._timer = setInterval(function () {\n      var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n\n      for (var i = 0; i < size; i += 1) {\n        var _a = _this._buffer.shift(),\n            params = _a.params,\n            handlers = _a.handlers;\n\n        that._send(params, handlers); // If this is the first request sent by Analytics module, we should stop sending remaining requests\n        // to prevent race condition of updating one endpoint when it's being created in the backend\n\n\n        if (_this._endpointGenerating) break;\n      }\n    }, flushInterval);\n  };\n  /**\n   * @private\n   * @param params - params for the event recording\n   * Put events into buffer\n   */\n\n\n  AWSPinpointProvider.prototype._putToBuffer = function (params, handlers) {\n    var bufferSize = this._config.bufferSize;\n\n    if (this._buffer.length < bufferSize) {\n      this._buffer.push({\n        params: params,\n        handlers: handlers\n      });\n    } else {\n      logger.debug('exceed analytics events buffer size');\n      return handlers.reject(new Error('Exceed the size of analytics events buffer'));\n    }\n  };\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSPinpointProvider.prototype.getCategory = function () {\n    return AWSPinpointProvider.category;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSPinpointProvider.prototype.getProviderName = function () {\n    return AWSPinpointProvider.providerName;\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n\n\n  AWSPinpointProvider.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Analytics', config);\n    var conf = config ? config : {};\n    this._config = Object.assign({}, this._config, conf);\n\n    if (this._config['appId'] && !this._config['disabled']) {\n      if (!this._config['endpointId']) {\n        var cacheKey = this.getProviderName() + '_' + this._config['appId'];\n\n        this._getEndpointId(cacheKey).then(function (endpointId) {\n          logger.debug('setting endpoint id from the cache', endpointId);\n          _this._config['endpointId'] = endpointId;\n          dispatchAnalyticsEvent('pinpointProvider_configured', null);\n        }).catch(function (e) {\n          logger.debug('Failed to generate endpointId', e);\n        });\n      } else {\n        dispatchAnalyticsEvent('pinpointProvider_configured', null);\n      }\n\n      this._setupTimer();\n    } else {\n      if (this._timer) {\n        clearInterval(this._timer);\n      }\n    }\n\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n\n\n  AWSPinpointProvider.prototype.record = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, timestamp;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._getCredentials()];\n\n          case 1:\n            credentials = _a.sent();\n\n            if (!credentials || !this._config['appId'] || !this._config['region']) {\n              logger.debug('cannot send events without credentials, applicationId or region');\n              return [2\n              /*return*/\n              , handlers.reject(new Error('No credentials, applicationId or region'))];\n            }\n\n            timestamp = new Date().getTime(); // attach the session and eventId\n\n            this._generateSession(params);\n\n            params.event.eventId = uuid();\n            Object.assign(params, {\n              timestamp: timestamp,\n              config: this._config,\n              credentials: credentials\n            });\n\n            if (params.event.immediate) {\n              return [2\n              /*return*/\n              , this._send(params, handlers)];\n            } else {\n              this._putToBuffer(params, handlers);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._generateSession = function (params) {\n    this._sessionId = this._sessionId || uuid();\n    var event = params.event;\n\n    switch (event.name) {\n      case '_session.start':\n        // refresh the session id and session start time\n        this._sessionStartTimestamp = new Date().getTime();\n        this._sessionId = uuid();\n        event.session = {\n          Id: this._sessionId,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString()\n        };\n        break;\n\n      case '_session.stop':\n        var stopTimestamp = new Date().getTime();\n        this._sessionStartTimestamp = this._sessionStartTimestamp || new Date().getTime();\n        this._sessionId = this._sessionId || uuid();\n        event.session = {\n          Id: this._sessionId,\n          Duration: stopTimestamp - this._sessionStartTimestamp,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString(),\n          StopTimestamp: new Date(stopTimestamp).toISOString()\n        };\n        this._sessionId = undefined;\n        this._sessionStartTimestamp = undefined;\n        break;\n\n      default:\n        this._sessionStartTimestamp = this._sessionStartTimestamp || new Date().getTime();\n        this._sessionId = this._sessionId || uuid();\n        event.session = {\n          Id: this._sessionId,\n          StartTimestamp: new Date(this._sessionStartTimestamp).toISOString()\n        };\n        break;\n    }\n  };\n\n  AWSPinpointProvider.prototype._send = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, config;\n      return __generator(this, function (_a) {\n        event = params.event, config = params.config;\n\n        switch (event.name) {\n          case '_update_endpoint':\n            return [2\n            /*return*/\n            , this._updateEndpoint(params, handlers)];\n\n          case '_session.stop':\n            return [2\n            /*return*/\n            , this._pinpointSendStopSession(params, handlers)];\n\n          default:\n            return [2\n            /*return*/\n            , this._record(params, handlers)];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._generateBatchItemContext = function (params) {\n    var event = params.event,\n        timestamp = params.timestamp,\n        config = params.config,\n        credentials = params.credentials;\n    var name = event.name,\n        attributes = event.attributes,\n        metrics = event.metrics,\n        eventId = event.eventId,\n        session = event.session;\n    var appId = config.appId,\n        endpointId = config.endpointId;\n    var endpointContext = {};\n    var eventParams = {\n      ApplicationId: appId,\n      EventsRequest: {\n        BatchItem: {}\n      }\n    };\n    eventParams.EventsRequest.BatchItem[endpointId] = {};\n    var endpointObj = eventParams.EventsRequest.BatchItem[endpointId];\n    endpointObj['Endpoint'] = endpointContext;\n    endpointObj['Events'] = {};\n    endpointObj['Events'][eventId] = {\n      EventType: name,\n      Timestamp: new Date(timestamp).toISOString(),\n      Attributes: attributes,\n      Metrics: metrics,\n      Session: session\n    };\n    return eventParams;\n  };\n\n  AWSPinpointProvider.prototype._pinpointPutEvents = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var eventId, endpointId, eventParams, request;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        eventId = params.event.eventId, endpointId = params.config.endpointId;\n        eventParams = this._generateBatchItemContext(params);\n        request = this.pinpointClient.putEvents(eventParams); // in order to keep backward compatiblity\n        // we are using a legacy api: /apps/{appid}/events/legacy\n        // so that users don't need to update their IAM Policy\n        // will use the formal one in the next break release\n\n        request.on('build', function () {\n          request.httpRequest.path = request.httpRequest.path + '/legacy';\n        });\n        request.send(function (err, data) {\n          if (err) {\n            logger.error('record event failed. ', err);\n            logger.warn('If you have not updated your Pinpoint IAM Policy' + ' with the Action: \"mobiletargeting:PutEvents\" yet, please do it.' + ' This action is not necessary for now' + ' but in order to avoid breaking changes in the future,' + ' please update it as soon as possible.');\n            return handlers.reject(err);\n          } else {\n            var _a = endpointId,\n                _b = eventId,\n                _c = data.EventsResponse.Results[_a].EventsItemResponse[_b],\n                StatusCode = _c.StatusCode,\n                Message = _c.Message;\n\n            if (ACCEPTED_CODES.includes(StatusCode)) {\n              _this._endpointGenerating = false;\n              logger.debug('record event success. ', data);\n              return handlers.resolve(data);\n            } else {\n              if (RETRYABLE_CODES.includes(StatusCode)) {\n                _this._retry(params, handlers);\n              } else {\n                logger.error(\"Event \" + eventId + \" is not accepted, the error is \" + Message);\n                return handlers.reject(data);\n              }\n            }\n          }\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._pinpointSendStopSession = function (params, handlers) {\n    if (!BEACON_SUPPORTED) {\n      this._record(params, handlers);\n\n      return;\n    }\n\n    var eventParams = this._generateBatchItemContext(params);\n\n    var region = this._config.region;\n    var ApplicationId = eventParams.ApplicationId,\n        EventsRequest = eventParams.EventsRequest;\n    var accessInfo = {\n      secret_key: this._config.credentials.secretAccessKey,\n      access_key: this._config.credentials.accessKeyId,\n      session_token: this._config.credentials.sessionToken\n    };\n    var url = \"https://pinpoint.\" + region + \".amazonaws.com/v1/apps/\" + ApplicationId + \"/events\";\n    var body = JSON.stringify(EventsRequest);\n    var method = 'POST';\n    var request = {\n      url: url,\n      body: body,\n      method: method\n    };\n    var serviceInfo = {\n      region: region,\n      service: MOBILE_SERVICE_NAME\n    };\n    var requestUrl = Signer.signUrl(request, accessInfo, serviceInfo, null);\n    var success = navigator.sendBeacon(requestUrl, body);\n\n    if (success) {\n      return handlers.resolve('sendBeacon success');\n    }\n\n    return handlers.reject('sendBeacon failure');\n  };\n\n  AWSPinpointProvider.prototype._retry = function (params, handlers) {\n    var resendLimit = params.config.resendLimit; // For backward compatibility\n\n    params.resendLimit = typeof params.resendLimit === 'number' ? params.resendLimit : resendLimit;\n\n    if (params.resendLimit-- > 0) {\n      logger.debug(\"resending event \" + params.eventName + \" with \" + params.resendLimit + \" retry times left\");\n\n      this._putToBuffer(params, handlers);\n    } else {\n      logger.debug(\"retry times used up for event \" + params.eventName);\n    }\n  };\n\n  AWSPinpointProvider.prototype._record = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event, timestamp, config, credentials;\n      return __generator(this, function (_a) {\n        event = params.event, timestamp = params.timestamp, config = params.config, credentials = params.credentials;\n\n        this._initClients(config, credentials);\n\n        return [2\n        /*return*/\n        , this._pinpointPutEvents(params, handlers)];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._updateEndpoint = function (params, handlers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var timestamp, config, credentials, event, appId, region, endpointId, request, update_params, that;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        timestamp = params.timestamp, config = params.config, credentials = params.credentials, event = params.event;\n        appId = config.appId, region = config.region, endpointId = config.endpointId;\n\n        this._initClients(config, credentials);\n\n        request = this._endpointRequest(config, JS.transferKeyToLowerCase(event, [], ['attributes', 'userAttributes', 'Attributes', 'UserAttributes']));\n        update_params = {\n          ApplicationId: appId,\n          EndpointId: endpointId,\n          EndpointRequest: request\n        };\n        that = this;\n        logger.debug('updateEndpoint with params: ', update_params);\n        that.pinpointClient.updateEndpoint(update_params, function (err, data) {\n          if (err) {\n            logger.debug('updateEndpoint failed', err);\n\n            if (err.message.startsWith('Exceeded maximum endpoint per user count')) {\n              _this._removeUnusedEndpoints(appId, request.User.UserId).then(function () {\n                logger.debug('Remove the unused endpoints successfully');\n\n                _this._retry(params, handlers);\n              }).catch(function (e) {\n                logger.warn(\"Failed to remove unused endpoints with error: \" + e);\n                logger.warn(\"Please ensure you have updated your Pinpoint IAM Policy \" + \"with the Action: \\\"mobiletargeting:GetUserEndpoints\\\" \" + \"in order to get endpoints info of the user\");\n                return handlers.reject(err);\n              });\n            } else return handlers.reject(err);\n          } else {\n            logger.debug('updateEndpoint success', data);\n            _this._endpointGenerating = false;\n            return handlers.resolve(data);\n          }\n        });\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._removeUnusedEndpoints = function (appId, userId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (res, rej) {\n          _this.pinpointClient.getUserEndpoints({\n            ApplicationId: appId,\n            UserId: userId\n          }, function (err, data) {\n            if (err) {\n              logger.debug(\"Failed to get endpoints associated with the userId: \" + userId + \" with error\", err);\n              return rej(err);\n            }\n\n            var endpoints = data.EndpointsResponse.Item;\n            logger.debug(\"get endpoints associated with the userId: \" + userId + \" with data\", endpoints);\n            var endpointToBeDeleted = endpoints[0];\n\n            for (var i = 1; i < endpoints.length; i++) {\n              var timeStamp1 = Date.parse(endpointToBeDeleted['EffectiveDate']);\n              var timeStamp2 = Date.parse(endpoints[i]['EffectiveDate']); // delete the one with invalid effective date\n\n              if (isNaN(timeStamp1)) break;\n\n              if (isNaN(timeStamp2)) {\n                endpointToBeDeleted = endpoints[i];\n                break;\n              }\n\n              if (timeStamp2 < timeStamp1) {\n                endpointToBeDeleted = endpoints[i];\n              }\n            } // update the endpoint's user id with an empty string\n\n\n            var update_params = {\n              ApplicationId: appId,\n              EndpointId: endpointToBeDeleted['Id'],\n              EndpointRequest: {\n                User: {\n                  UserId: ''\n                }\n              }\n            };\n\n            _this.pinpointClient.updateEndpoint(update_params, function (err, data) {\n              if (err) {\n                logger.debug('Failed to update the endpoint', err);\n                return rej(err);\n              }\n\n              logger.debug('The old endpoint is updated with an empty string for user id');\n              return res(data);\n            });\n          });\n        })];\n      });\n    });\n  };\n  /**\n   * @private\n   * @param config\n   * Init the clients\n   */\n\n\n  AWSPinpointProvider.prototype._initClients = function (config, credentials) {\n    return __awaiter(this, void 0, void 0, function () {\n      var region;\n      return __generator(this, function (_a) {\n        logger.debug('init clients');\n\n        if (this.mobileAnalytics && this.pinpointClient && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n          logger.debug('no change for aws credentials, directly return from init');\n          return [2\n          /*return*/\n          ];\n        }\n\n        this._config.credentials = credentials;\n        region = config.region;\n        logger.debug('init clients with credentials', credentials);\n        this.mobileAnalytics = new MobileAnalytics({\n          credentials: credentials,\n          region: region\n        });\n        this.pinpointClient = new Pinpoint({\n          region: region,\n          credentials: credentials\n        });\n\n        if (Platform.isReactNative) {\n          this.pinpointClient.customizeRequests(function (request) {\n            request.on('build', function (req) {\n              req.httpRequest.headers['user-agent'] = Platform.userAgent;\n            });\n          });\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  AWSPinpointProvider.prototype._getEndpointId = function (cacheKey) {\n    return __awaiter(this, void 0, void 0, function () {\n      var endpointId;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Cache.getItem(cacheKey)];\n\n          case 1:\n            endpointId = _a.sent();\n            logger.debug('endpointId from cache', endpointId, 'type', typeof endpointId);\n\n            if (!endpointId) {\n              endpointId = uuid();\n              Cache.setItem(cacheKey, endpointId);\n            }\n\n            return [2\n            /*return*/\n            , endpointId];\n        }\n      });\n    });\n  };\n  /**\n   * EndPoint request\n   * @return {Object} - The request of updating endpoint\n   */\n\n\n  AWSPinpointProvider.prototype._endpointRequest = function (config, event) {\n    var credentials = config.credentials;\n    var clientInfo = this._clientInfo || {};\n    var clientContext = config.clientContext || {}; // for now we have three different ways for default endpoint configurations\n    // clientInfo\n    // clientContext (deprecated)\n    // config.endpoint\n\n    var defaultEndpointConfig = config.endpoint || {};\n    var demographicByClientInfo = {\n      appVersion: clientInfo.appVersion,\n      make: clientInfo.make,\n      model: clientInfo.model,\n      modelVersion: clientInfo.version,\n      platform: clientInfo.platform\n    }; // for backward compatibility\n\n    var clientId = clientContext.clientId,\n        appTitle = clientContext.appTitle,\n        appVersionName = clientContext.appVersionName,\n        appVersionCode = clientContext.appVersionCode,\n        appPackageName = clientContext.appPackageName,\n        demographicByClientContext = __rest(clientContext, [\"clientId\", \"appTitle\", \"appVersionName\", \"appVersionCode\", \"appPackageName\"]);\n\n    var channelType = event.address ? clientInfo.platform === 'android' ? 'GCM' : 'APNS' : undefined;\n\n    var tmp = __assign(__assign(__assign({\n      channelType: channelType,\n      requestId: uuid(),\n      effectiveDate: new Date().toISOString()\n    }, defaultEndpointConfig), event), {\n      attributes: __assign(__assign({}, defaultEndpointConfig.attributes), event.attributes),\n      demographic: __assign(__assign(__assign(__assign({}, demographicByClientInfo), demographicByClientContext), defaultEndpointConfig.demographic), event.demographic),\n      location: __assign(__assign({}, defaultEndpointConfig.location), event.location),\n      metrics: __assign(__assign({}, defaultEndpointConfig.metrics), event.metrics),\n      user: {\n        userId: event.userId || defaultEndpointConfig.userId || credentials.identityId,\n        userAttributes: __assign(__assign({}, defaultEndpointConfig.userAttributes), event.userAttributes)\n      }\n    }); // eliminate unnecessary params\n\n\n    var userId = tmp.userId,\n        userAttributes = tmp.userAttributes,\n        name = tmp.name,\n        session = tmp.session,\n        eventId = tmp.eventId,\n        immediate = tmp.immediate,\n        ret = __rest(tmp, [\"userId\", \"userAttributes\", \"name\", \"session\", \"eventId\", \"immediate\"]);\n\n    return JS.transferKeyToUpperCase(ret, [], ['metrics', 'userAttributes', 'attributes']);\n  };\n  /**\n   * @private\n   * check if current credentials exists\n   */\n\n\n  AWSPinpointProvider.prototype._getCredentials = function () {\n    var that = this;\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n\n  AWSPinpointProvider.category = 'Analytics';\n  AWSPinpointProvider.providerName = 'AWSPinpoint';\n  return AWSPinpointProvider;\n}();\n\nexport default AWSPinpointProvider;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","ClientDevice","Platform","Credentials","Signer","JS","Hub","MobileAnalytics","Pinpoint","Cache","v1","uuid","AMPLIFY_SYMBOL","Symbol","for","dispatchAnalyticsEvent","event","data","dispatch","logger","RETRYABLE_CODES","ACCEPTED_CODES","MOBILE_SERVICE_NAME","BEACON_SUPPORTED","navigator","sendBeacon","BUFFER_SIZE","FLUSH_SIZE","FLUSH_INTERVAL","RESEND_LIMIT","config","_buffer","_config","bufferSize","flushSize","flushInterval","resendLimit","_clientInfo","clientInfo","AWSPinpointProvider","_timer","clearInterval","that","setInterval","size","_this","length","i","params","handlers","_send","_endpointGenerating","push","debug","reject","Error","category","providerName","conf","Object","assign","cacheKey","getProviderName","_getEndpointId","then","endpointId","catch","e","_setupTimer","_getCredentials","credentials","_a","timestamp","Date","getTime","_generateSession","eventId","immediate","_putToBuffer","_sessionId","name","_sessionStartTimestamp","session","Id","StartTimestamp","toISOString","stopTimestamp","Duration","StopTimestamp","undefined","_updateEndpoint","_pinpointSendStopSession","_record","attributes","metrics","endpointContext","eventParams","ApplicationId","appId","EventsRequest","BatchItem","endpointObj","EventType","Timestamp","Attributes","Metrics","Session","_generateBatchItemContext","request","pinpointClient","putEvents","on","httpRequest","path","send","err","error","warn","_b","_c","StatusCode","Message","includes","resolve","_retry","accessInfo","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","url","region","body","JSON","stringify","method","serviceInfo","service","requestUrl","signUrl","success","eventName","_initClients","_pinpointPutEvents","_endpointRequest","transferKeyToLowerCase","update_params","EndpointId","EndpointRequest","updateEndpoint","message","startsWith","_removeUnusedEndpoints","User","UserId","userId","Promise","res","rej","getUserEndpoints","endpoints","EndpointsResponse","Item","endpointToBeDeleted","timeStamp1","parse","timeStamp2","isNaN","mobileAnalytics","identityId","isReactNative","customizeRequests","req","headers","userAgent","getItem","setItem","clientContext","defaultEndpointConfig","endpoint","demographicByClientInfo","appVersion","make","model","modelVersion","version","platform","appTitle","appVersionName","appVersionCode","appPackageName","demographicByClientContext","channelType","address","tmp","requestId","effectiveDate","demographic","location","user","userAttributes","ret","transferKeyToUpperCase","get","shear"],"sourceRoot":"","sources":["../../src/Providers/AWSPinpointProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}