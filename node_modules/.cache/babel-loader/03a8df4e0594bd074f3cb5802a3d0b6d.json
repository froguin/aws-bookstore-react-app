{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ConsoleLogger as Logger } from './Logger';\nimport { AWS } from './Facet';\n\nvar logger = new Logger('Signer'),\n    url = require('url'),\n    crypto = AWS['util'].crypto;\n\nvar DEFAULT_ALGORITHM = 'AWS4-HMAC-SHA256';\nvar IOT_SERVICE_NAME = 'iotdevicegateway';\n\nvar encrypt = function encrypt(key, src, encoding) {\n  return crypto.lib.createHmac('sha256', key).update(src, 'utf8').digest(encoding);\n};\n\nvar hash = function hash(src) {\n  var arg = src || '';\n  return crypto.createHash('sha256').update(arg, 'utf8').digest('hex');\n};\n/**\n * @private\n * RFC 3986 compliant version of encodeURIComponent\n */\n\n\nvar escape_RFC3986 = function escape_RFC3986(component) {\n  return component.replace(/[!'()*]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n};\n/**\n * @private\n * Create canonical query string\n *\n */\n\n\nvar canonical_query = function canonical_query(query) {\n  if (!query || query.length === 0) {\n    return '';\n  }\n\n  return query.split('&').map(function (e) {\n    var key_val = e.split('=');\n\n    if (key_val.length === 1) {\n      return e;\n    } else {\n      var reencoded_val = escape_RFC3986(key_val[1]);\n      return key_val[0] + '=' + reencoded_val;\n    }\n  }).sort(function (a, b) {\n    var key_a = a.split('=')[0];\n    var key_b = b.split('=')[0];\n\n    if (key_a === key_b) {\n      return a < b ? -1 : 1;\n    } else {\n      return key_a < key_b ? -1 : 1;\n    }\n  }).join('&');\n};\n/**\n* @private\n* Create canonical headers\n*\n<pre>\nCanonicalHeaders =\n    CanonicalHeadersEntry0 + CanonicalHeadersEntry1 + ... + CanonicalHeadersEntryN\nCanonicalHeadersEntry =\n    Lowercase(HeaderName) + ':' + Trimall(HeaderValue) + '\\n'\n</pre>\n*/\n\n\nvar canonical_headers = function canonical_headers(headers) {\n  if (!headers || Object.keys(headers).length === 0) {\n    return '';\n  }\n\n  return Object.keys(headers).map(function (key) {\n    return {\n      key: key.toLowerCase(),\n      value: headers[key] ? headers[key].trim().replace(/\\s+/g, ' ') : ''\n    };\n  }).sort(function (a, b) {\n    return a.key < b.key ? -1 : 1;\n  }).map(function (item) {\n    return item.key + ':' + item.value;\n  }).join('\\n') + '\\n';\n};\n/**\n * List of header keys included in the canonical headers.\n * @access private\n */\n\n\nvar signed_headers = function signed_headers(headers) {\n  return Object.keys(headers).map(function (key) {\n    return key.toLowerCase();\n  }).sort().join(';');\n};\n/**\n* @private\n* Create canonical request\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html|Create a Canonical Request}\n*\n<pre>\nCanonicalRequest =\n    HTTPRequestMethod + '\\n' +\n    CanonicalURI + '\\n' +\n    CanonicalQueryString + '\\n' +\n    CanonicalHeaders + '\\n' +\n    SignedHeaders + '\\n' +\n    HexEncode(Hash(RequestPayload))\n</pre>\n*/\n\n\nvar canonical_request = function canonical_request(request) {\n  var url_info = url.parse(request.url);\n  return [request.method || '/', encodeURIComponent(url_info.pathname).replace(/%2F/gi, '/'), canonical_query(url_info.query), canonical_headers(request.headers), signed_headers(request.headers), hash(request.data)].join('\\n');\n};\n\nvar parse_service_info = function parse_service_info(request) {\n  var url_info = url.parse(request.url),\n      host = url_info.host;\n  var matched = host.match(/([^\\.]+)\\.(?:([^\\.]*)\\.)?amazonaws\\.com$/);\n  var parsed = (matched || []).slice(1, 3);\n\n  if (parsed[1] === 'es') {\n    // Elastic Search\n    parsed = parsed.reverse();\n  }\n\n  return {\n    service: request.service || parsed[0],\n    region: request.region || parsed[1]\n  };\n};\n\nvar credential_scope = function credential_scope(d_str, region, service) {\n  return [d_str, region, service, 'aws4_request'].join('/');\n};\n/**\n* @private\n* Create a string to sign\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html|Create String to Sign}\n*\n<pre>\nStringToSign =\n    Algorithm + \\n +\n    RequestDateTime + \\n +\n    CredentialScope + \\n +\n    HashedCanonicalRequest\n</pre>\n*/\n\n\nvar string_to_sign = function string_to_sign(algorithm, canonical_request, dt_str, scope) {\n  return [algorithm, dt_str, scope, hash(canonical_request)].join('\\n');\n};\n/**\n* @private\n* Create signing key\n* Refer to\n* {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html|Calculate Signature}\n*\n<pre>\nkSecret = your secret access key\nkDate = HMAC(\"AWS4\" + kSecret, Date)\nkRegion = HMAC(kDate, Region)\nkService = HMAC(kRegion, Service)\nkSigning = HMAC(kService, \"aws4_request\")\n</pre>\n*/\n\n\nvar get_signing_key = function get_signing_key(secret_key, d_str, service_info) {\n  logger.debug(service_info);\n  var k = 'AWS4' + secret_key,\n      k_date = encrypt(k, d_str),\n      k_region = encrypt(k_date, service_info.region),\n      k_service = encrypt(k_region, service_info.service),\n      k_signing = encrypt(k_service, 'aws4_request');\n  return k_signing;\n};\n\nvar get_signature = function get_signature(signing_key, str_to_sign) {\n  return encrypt(signing_key, str_to_sign, 'hex');\n};\n/**\n * @private\n * Create authorization header\n * Refer to\n * {@link http://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html|Add the Signing Information}\n */\n\n\nvar get_authorization_header = function get_authorization_header(algorithm, access_key, scope, signed_headers, signature) {\n  return [algorithm + ' ' + 'Credential=' + access_key + '/' + scope, 'SignedHeaders=' + signed_headers, 'Signature=' + signature].join(', ');\n};\n/**\n * AWS request signer.\n * Refer to {@link http://docs.aws.amazon.com/general/latest/gr/sigv4_signing.html|Signature Version 4}\n *\n * @class Signer\n */\n\n\nvar Signer =\n/** @class */\nfunction () {\n  function Signer() {}\n  /**\n  * Sign a HTTP request, add 'Authorization' header to request param\n  * @method sign\n  * @memberof Signer\n  * @static\n  *\n  * @param {object} request - HTTP request object\n  <pre>\n  request: {\n      method: GET | POST | PUT ...\n      url: ...,\n      headers: {\n          header1: ...\n      },\n      data: data\n  }\n  </pre>\n  * @param {object} access_info - AWS access credential info\n  <pre>\n  access_info: {\n      access_key: ...,\n      secret_key: ...,\n      session_token: ...\n  }\n  </pre>\n  * @param {object} [service_info] - AWS service type and region, optional,\n  *                                  if not provided then parse out from url\n  <pre>\n  service_info: {\n      service: ...,\n      region: ...\n  }\n  </pre>\n  *\n  * @returns {object} Signed HTTP request\n  */\n\n\n  Signer.sign = function (request, access_info, service_info) {\n    if (service_info === void 0) {\n      service_info = null;\n    }\n\n    request.headers = request.headers || {}; // datetime string and date string\n\n    var dt = new Date(),\n        dt_str = dt.toISOString().replace(/[:\\-]|\\.\\d{3}/g, ''),\n        d_str = dt_str.substr(0, 8);\n    var url_info = url.parse(request.url);\n    request.headers['host'] = url_info.host;\n    request.headers['x-amz-date'] = dt_str;\n\n    if (access_info.session_token) {\n      request.headers['X-Amz-Security-Token'] = access_info.session_token;\n    } // Task 1: Create a Canonical Request\n\n\n    var request_str = canonical_request(request);\n    logger.debug(request_str); // Task 2: Create a String to Sign\n\n    var serviceInfo = service_info || parse_service_info(request),\n        scope = credential_scope(d_str, serviceInfo.region, serviceInfo.service),\n        str_to_sign = string_to_sign(DEFAULT_ALGORITHM, request_str, dt_str, scope); // Task 3: Calculate the Signature\n\n    var signing_key = get_signing_key(access_info.secret_key, d_str, serviceInfo),\n        signature = get_signature(signing_key, str_to_sign); // Task 4: Adding the Signing information to the Request\n\n    var authorization_header = get_authorization_header(DEFAULT_ALGORITHM, access_info.access_key, scope, signed_headers(request.headers), signature);\n    request.headers['Authorization'] = authorization_header;\n    return request;\n  };\n\n  Signer.signUrl = function (urlOrRequest, accessInfo, serviceInfo, expiration) {\n    var urlToSign = typeof urlOrRequest === 'object' ? urlOrRequest.url : urlOrRequest;\n    var method = typeof urlOrRequest === 'object' ? urlOrRequest.method : 'GET';\n    var body = typeof urlOrRequest === 'object' ? urlOrRequest.body : undefined;\n    var now = new Date().toISOString().replace(/[:\\-]|\\.\\d{3}/g, '');\n    var today = now.substr(0, 8); // Intentionally discarding search\n\n    var _a = url.parse(urlToSign, true, true),\n        search = _a.search,\n        parsedUrl = __rest(_a, [\"search\"]);\n\n    var host = parsedUrl.host;\n    var signedHeaders = {\n      host: host\n    };\n\n    var _b = serviceInfo || parse_service_info({\n      url: url.format(parsedUrl)\n    }),\n        region = _b.region,\n        service = _b.service;\n\n    var credentialScope = credential_scope(today, region, service); // IoT service does not allow the session token in the canonical request\n    // https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n\n    var sessionTokenRequired = accessInfo.session_token && service !== IOT_SERVICE_NAME;\n\n    var queryParams = __assign(__assign(__assign({\n      'X-Amz-Algorithm': DEFAULT_ALGORITHM,\n      'X-Amz-Credential': [accessInfo.access_key, credentialScope].join('/'),\n      'X-Amz-Date': now.substr(0, 16)\n    }, sessionTokenRequired ? {\n      'X-Amz-Security-Token': \"\" + accessInfo.session_token\n    } : {}), expiration ? {\n      'X-Amz-Expires': \"\" + expiration\n    } : {}), {\n      'X-Amz-SignedHeaders': Object.keys(signedHeaders).join(',')\n    });\n\n    var canonicalRequest = canonical_request({\n      method: method,\n      url: url.format(__assign(__assign({}, parsedUrl), {\n        query: __assign(__assign({}, parsedUrl.query), queryParams)\n      })),\n      headers: signedHeaders,\n      data: body\n    });\n    var stringToSign = string_to_sign(DEFAULT_ALGORITHM, canonicalRequest, now, credentialScope);\n    var signing_key = get_signing_key(accessInfo.secret_key, today, {\n      region: region,\n      service: service\n    });\n    var signature = get_signature(signing_key, stringToSign);\n\n    var additionalQueryParams = __assign({\n      'X-Amz-Signature': signature\n    }, accessInfo.session_token && {\n      'X-Amz-Security-Token': accessInfo.session_token\n    });\n\n    var result = url.format({\n      protocol: parsedUrl.protocol,\n      slashes: true,\n      hostname: parsedUrl.hostname,\n      port: parsedUrl.port,\n      pathname: parsedUrl.pathname,\n      query: __assign(__assign(__assign({}, parsedUrl.query), queryParams), additionalQueryParams)\n    });\n    return result;\n  };\n\n  return Signer;\n}();\n\nexport default Signer;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,UAAxC;AACA,SAASC,GAAT,QAAoB,SAApB;;AAEA,IAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAW,QAAX,CAAf;AAAA,IACCG,GAAG,GAAGC,OAAO,CAAC,KAAD,CADd;AAAA,IAECC,MAAM,GAAGJ,GAAG,CAAC,MAAD,CAAH,CAAYI,MAFtB;;AAIA,IAAMC,iBAAiB,GAAG,kBAA1B;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAASC,GAAT,EAAcC,GAAd,EAAmBC,QAAnB,EAA4B;AAC3C,SAAON,MAAM,CAACO,GAAP,CACLC,UADK,CACM,QADN,EACgBJ,GADhB,EAELK,MAFK,CAEEJ,GAFF,EAEO,MAFP,EAGLK,MAHK,CAGEJ,QAHF,CAAP;AAIA,CALD;;AAOA,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAASN,GAAT,EAAY;AACxB,MAAMO,GAAG,GAAGP,GAAG,IAAI,EAAnB;AACA,SAAOL,MAAM,CACXa,UADK,CACM,QADN,EAELJ,MAFK,CAEEG,GAFF,EAEO,MAFP,EAGLF,MAHK,CAGE,KAHF,CAAP;AAIA,CAND;AAQA;;;;;;AAIA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAASC,SAAT,EAAkB;AACxC,SAAOA,SAAS,CAACC,OAAV,CAAkB,UAAlB,EAA8B,UAASC,CAAT,EAAU;AAC9C,WACC,MACAA,CAAC,CACCC,UADF,CACa,CADb,EAEEC,QAFF,CAEW,EAFX,EAGEC,WAHF,EAFD;AAOA,GARM,CAAP;AASA,CAVD;AAYA;;;;;;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAASC,KAAT,EAAc;AACrC,MAAI,CAACA,KAAD,IAAUA,KAAK,CAACC,MAAN,KAAiB,CAA/B,EAAkC;AACjC,WAAO,EAAP;AACA;;AAED,SAAOD,KAAK,CACVE,KADK,CACC,GADD,EAELC,GAFK,CAED,aAAC;AACL,QAAMC,OAAO,GAAGC,CAAC,CAACH,KAAF,CAAQ,GAAR,CAAhB;;AAEA,QAAIE,OAAO,CAACH,MAAR,KAAmB,CAAvB,EAA0B;AACzB,aAAOI,CAAP;AACA,KAFD,MAEO;AACN,UAAMC,aAAa,GAAGd,cAAc,CAACY,OAAO,CAAC,CAAD,CAAR,CAApC;AACA,aAAOA,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,GAAmBE,aAA1B;AACA;AACD,GAXK,EAYLC,IAZK,CAYA,UAACC,CAAD,EAAIC,CAAJ,EAAK;AACV,QAAMC,KAAK,GAAGF,CAAC,CAACN,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAd;AACA,QAAMS,KAAK,GAAGF,CAAC,CAACP,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAd;;AACA,QAAIQ,KAAK,KAAKC,KAAd,EAAqB;AACpB,aAAOH,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAa,CAApB;AACA,KAFD,MAEO;AACN,aAAOC,KAAK,GAAGC,KAAR,GAAgB,CAAC,CAAjB,GAAqB,CAA5B;AACA;AACD,GApBK,EAqBLC,IArBK,CAqBA,GArBA,CAAP;AAsBA,CA3BD;AA6BA;;;;;;;;;;;;;AAWA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAASC,OAAT,EAAgB;AACzC,MAAI,CAACA,OAAD,IAAYC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBb,MAArB,KAAgC,CAAhD,EAAmD;AAClD,WAAO,EAAP;AACA;;AAED,SACCc,MAAM,CAACC,IAAP,CAAYF,OAAZ,EACEX,GADF,CACM,UAASrB,GAAT,EAAY;AAChB,WAAO;AACNA,SAAG,EAAEA,GAAG,CAACmC,WAAJ,EADC;AAENC,WAAK,EAAEJ,OAAO,CAAChC,GAAD,CAAP,GAAegC,OAAO,CAAChC,GAAD,CAAP,CAAaqC,IAAb,GAAoBzB,OAApB,CAA4B,MAA5B,EAAoC,GAApC,CAAf,GAA0D;AAF3D,KAAP;AAIA,GANF,EAOEa,IAPF,CAOO,UAASC,CAAT,EAAYC,CAAZ,EAAa;AAClB,WAAOD,CAAC,CAAC1B,GAAF,GAAQ2B,CAAC,CAAC3B,GAAV,GAAgB,CAAC,CAAjB,GAAqB,CAA5B;AACA,GATF,EAUEqB,GAVF,CAUM,UAASiB,IAAT,EAAa;AACjB,WAAOA,IAAI,CAACtC,GAAL,GAAW,GAAX,GAAiBsC,IAAI,CAACF,KAA7B;AACA,GAZF,EAaEN,IAbF,CAaO,IAbP,IAae,IAdhB;AAgBA,CArBD;AAuBA;;;;;;AAIA,IAAMS,cAAc,GAAG,SAAjBA,cAAiB,CAASP,OAAT,EAAgB;AACtC,SAAOC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EACLX,GADK,CACD,UAASrB,GAAT,EAAY;AAChB,WAAOA,GAAG,CAACmC,WAAJ,EAAP;AACA,GAHK,EAILV,IAJK,GAKLK,IALK,CAKA,GALA,CAAP;AAMA,CAPD;AASA;;;;;;;;;;;;;;;;;;AAgBA,IAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,CAASC,OAAT,EAAgB;AACzC,MAAMC,QAAQ,GAAGhD,GAAG,CAACiD,KAAJ,CAAUF,OAAO,CAAC/C,GAAlB,CAAjB;AAEA,SAAO,CACN+C,OAAO,CAACG,MAAR,IAAkB,GADZ,EAENC,kBAAkB,CAACH,QAAQ,CAACI,QAAV,CAAlB,CAAsClC,OAAtC,CAA8C,OAA9C,EAAuD,GAAvD,CAFM,EAGNK,eAAe,CAACyB,QAAQ,CAACxB,KAAV,CAHT,EAINa,iBAAiB,CAACU,OAAO,CAACT,OAAT,CAJX,EAKNO,cAAc,CAACE,OAAO,CAACT,OAAT,CALR,EAMNzB,IAAI,CAACkC,OAAO,CAACM,IAAT,CANE,EAOLjB,IAPK,CAOA,IAPA,CAAP;AAQA,CAXD;;AAaA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAASP,OAAT,EAAgB;AAC1C,MAAMC,QAAQ,GAAGhD,GAAG,CAACiD,KAAJ,CAAUF,OAAO,CAAC/C,GAAlB,CAAjB;AAAA,MACCuD,IAAI,GAAGP,QAAQ,CAACO,IADjB;AAGA,MAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,0CAAX,CAAhB;AACA,MAAIC,MAAM,GAAG,CAACF,OAAO,IAAI,EAAZ,EAAgBG,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAb;;AAEA,MAAID,MAAM,CAAC,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACvB;AACAA,UAAM,GAAGA,MAAM,CAACE,OAAP,EAAT;AACA;;AAED,SAAO;AACNC,WAAO,EAAEd,OAAO,CAACc,OAAR,IAAmBH,MAAM,CAAC,CAAD,CAD5B;AAENI,UAAM,EAAEf,OAAO,CAACe,MAAR,IAAkBJ,MAAM,CAAC,CAAD;AAF1B,GAAP;AAIA,CAhBD;;AAkBA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAASC,KAAT,EAAgBF,MAAhB,EAAwBD,OAAxB,EAA+B;AACvD,SAAO,CAACG,KAAD,EAAQF,MAAR,EAAgBD,OAAhB,EAAyB,cAAzB,EAAyCzB,IAAzC,CAA8C,GAA9C,CAAP;AACA,CAFD;AAIA;;;;;;;;;;;;;;;;AAcA,IAAM6B,cAAc,GAAG,SAAjBA,cAAiB,CAASC,SAAT,EAAoBpB,iBAApB,EAAuCqB,MAAvC,EAA+CC,KAA/C,EAAoD;AAC1E,SAAO,CAACF,SAAD,EAAYC,MAAZ,EAAoBC,KAApB,EAA2BvD,IAAI,CAACiC,iBAAD,CAA/B,EAAoDV,IAApD,CAAyD,IAAzD,CAAP;AACA,CAFD;AAIA;;;;;;;;;;;;;;;;AAcA,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAASC,UAAT,EAAqBN,KAArB,EAA4BO,YAA5B,EAAwC;AAC/DxE,QAAM,CAACyE,KAAP,CAAaD,YAAb;AACA,MAAME,CAAC,GAAG,SAASH,UAAnB;AAAA,MACCI,MAAM,GAAGrE,OAAO,CAACoE,CAAD,EAAIT,KAAJ,CADjB;AAAA,MAECW,QAAQ,GAAGtE,OAAO,CAACqE,MAAD,EAASH,YAAY,CAACT,MAAtB,CAFnB;AAAA,MAGCc,SAAS,GAAGvE,OAAO,CAACsE,QAAD,EAAWJ,YAAY,CAACV,OAAxB,CAHpB;AAAA,MAICgB,SAAS,GAAGxE,OAAO,CAACuE,SAAD,EAAY,cAAZ,CAJpB;AAMA,SAAOC,SAAP;AACA,CATD;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAASC,WAAT,EAAsBC,WAAtB,EAAiC;AACtD,SAAO3E,OAAO,CAAC0E,WAAD,EAAcC,WAAd,EAA2B,KAA3B,CAAd;AACA,CAFD;AAIA;;;;;;;;AAMA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAChCf,SADgC,EAEhCgB,UAFgC,EAGhCd,KAHgC,EAIhCvB,cAJgC,EAKhCsC,SALgC,EAKvB;AAET,SAAO,CACNjB,SAAS,GAAG,GAAZ,GAAkB,aAAlB,GAAkCgB,UAAlC,GAA+C,GAA/C,GAAqDd,KAD/C,EAEN,mBAAmBvB,cAFb,EAGN,eAAesC,SAHT,EAIL/C,IAJK,CAIA,IAJA,CAAP;AAKA,CAZD;AAcA;;;;;;;;AAOA;AAAA;AAAA;AAAA,qBA0LC;AAzLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCOgD,gBAAP,UAAYrC,OAAZ,EAAqBsC,WAArB,EAAkCd,YAAlC,EAAqD;AAAnB;AAAAA;AAAmB;;AACpDxB,WAAO,CAACT,OAAR,GAAkBS,OAAO,CAACT,OAAR,IAAmB,EAArC,CADoD,CAGpD;;AACA,QAAMgD,EAAE,GAAG,IAAIC,IAAJ,EAAX;AAAA,QACCpB,MAAM,GAAGmB,EAAE,CAACE,WAAH,GAAiBtE,OAAjB,CAAyB,gBAAzB,EAA2C,EAA3C,CADV;AAAA,QAEC8C,KAAK,GAAGG,MAAM,CAACsB,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAFT;AAIA,QAAMzC,QAAQ,GAAGhD,GAAG,CAACiD,KAAJ,CAAUF,OAAO,CAAC/C,GAAlB,CAAjB;AACA+C,WAAO,CAACT,OAAR,CAAgB,MAAhB,IAA0BU,QAAQ,CAACO,IAAnC;AACAR,WAAO,CAACT,OAAR,CAAgB,YAAhB,IAAgC6B,MAAhC;;AACA,QAAIkB,WAAW,CAACK,aAAhB,EAA+B;AAC9B3C,aAAO,CAACT,OAAR,CAAgB,sBAAhB,IAA0C+C,WAAW,CAACK,aAAtD;AACA,KAbmD,CAepD;;;AACA,QAAMC,WAAW,GAAG7C,iBAAiB,CAACC,OAAD,CAArC;AACAhD,UAAM,CAACyE,KAAP,CAAamB,WAAb,EAjBoD,CAmBpD;;AACA,QAAMC,WAAW,GAAGrB,YAAY,IAAIjB,kBAAkB,CAACP,OAAD,CAAtD;AAAA,QACCqB,KAAK,GAAGL,gBAAgB,CAACC,KAAD,EAAQ4B,WAAW,CAAC9B,MAApB,EAA4B8B,WAAW,CAAC/B,OAAxC,CADzB;AAAA,QAECmB,WAAW,GAAGf,cAAc,CAC3B9D,iBAD2B,EAE3BwF,WAF2B,EAG3BxB,MAH2B,EAI3BC,KAJ2B,CAF7B,CApBoD,CA6BpD;;AACA,QAAMW,WAAW,GAAGV,eAAe,CACjCgB,WAAW,CAACf,UADqB,EAEjCN,KAFiC,EAGjC4B,WAHiC,CAAnC;AAAA,QAKCT,SAAS,GAAGL,aAAa,CAACC,WAAD,EAAcC,WAAd,CAL1B,CA9BoD,CAqCpD;;AACA,QAAMa,oBAAoB,GAAGZ,wBAAwB,CACpD9E,iBADoD,EAEpDkF,WAAW,CAACH,UAFwC,EAGpDd,KAHoD,EAIpDvB,cAAc,CAACE,OAAO,CAACT,OAAT,CAJsC,EAKpD6C,SALoD,CAArD;AAOApC,WAAO,CAACT,OAAR,CAAgB,eAAhB,IAAmCuD,oBAAnC;AAEA,WAAO9C,OAAP;AACA,GAhDM;;AA8DAqC,mBAAP,UACCU,YADD,EAECC,UAFD,EAGCH,WAHD,EAICI,UAJD,EAIoB;AAEnB,QAAMC,SAAS,GACd,OAAOH,YAAP,KAAwB,QAAxB,GAAmCA,YAAY,CAAC9F,GAAhD,GAAsD8F,YADvD;AAEA,QAAM5C,MAAM,GACX,OAAO4C,YAAP,KAAwB,QAAxB,GAAmCA,YAAY,CAAC5C,MAAhD,GAAyD,KAD1D;AAEA,QAAMgD,IAAI,GACT,OAAOJ,YAAP,KAAwB,QAAxB,GAAmCA,YAAY,CAACI,IAAhD,GAAuDC,SADxD;AAGA,QAAMC,GAAG,GAAG,IAAIb,IAAJ,GAAWC,WAAX,GAAyBtE,OAAzB,CAAiC,gBAAjC,EAAmD,EAAnD,CAAZ;AACA,QAAMmF,KAAK,GAAGD,GAAG,CAACX,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAd,CAVmB,CAWnB;;AACA,QAAMa,qCAAN;AAAA,QAAQC,kBAAR;AAAA,QAAgBC,kCAAhB;;AACQ;AACR,QAAMC,aAAa,GAAG;AAAElD,UAAI;AAAN,KAAtB;;AAEM;AAAAvD;AAAA;AAAA,QAAE8D,kBAAF;AAAA,QAAUD,oBAAV;;AAEN,QAAM6C,eAAe,GAAG3C,gBAAgB,CAACsC,KAAD,EAAQvC,MAAR,EAAgBD,OAAhB,CAAxC,CAlBmB,CAoBnB;AACA;;AACA,QAAM8C,oBAAoB,GACzBZ,UAAU,CAACL,aAAX,IAA4B7B,OAAO,KAAKzD,gBADzC;;AAEA,QAAMwG,WAAW;AAChB,yBAAmBzG,iBADH;AAEhB,0BAAoB,CAAC4F,UAAU,CAACb,UAAZ,EAAwBwB,eAAxB,EAAyCtE,IAAzC,CAA8C,GAA9C,CAFJ;AAGhB,oBAAcgE,GAAG,CAACX,MAAJ,CAAW,CAAX,EAAc,EAAd;AAHE,OAIZkB,oBAAoB,GACrB;AAAE,8BAAwB,KAAGZ,UAAU,CAACL;AAAxC,KADqB,GAErB,EANa,GAOZM,UAAU,GAAG;AAAE,uBAAiB,KAAGA;AAAtB,KAAH,GAA0C,EAPxC,GAO2C;AAC3D,6BAAuBzD,MAAM,CAACC,IAAP,CAAYiE,aAAZ,EAA2BrE,IAA3B,CAAgC,GAAhC;AADoC,KAP3C,CAAjB;;AAWA,QAAMyE,gBAAgB,GAAG/D,iBAAiB,CAAC;AAC1CI,YAAM,QADoC;AAE1ClD,SAAG,EAAEA,GAAG,CAAC8G,MAAJ,CAAUC,sBACXP,SADW,GACF;AACZhF,aAAK,wBACDgF,SAAS,CAAChF,KADT,GAEDoF,WAFC;AADO,OADE,CAAV,CAFqC;AAS1CtE,aAAO,EAAEmE,aATiC;AAU1CpD,UAAI,EAAE6C;AAVoC,KAAD,CAA1C;AAaA,QAAMc,YAAY,GAAG/C,cAAc,CAClC9D,iBADkC,EAElC0G,gBAFkC,EAGlCT,GAHkC,EAIlCM,eAJkC,CAAnC;AAOA,QAAM3B,WAAW,GAAGV,eAAe,CAAC0B,UAAU,CAACzB,UAAZ,EAAwB+B,KAAxB,EAA+B;AACjEvC,YAAM,QAD2D;AAEjED,aAAO;AAF0D,KAA/B,CAAnC;AAIA,QAAMsB,SAAS,GAAGL,aAAa,CAACC,WAAD,EAAciC,YAAd,CAA/B;;AAEA,QAAMC,qBAAqB;AAC1B,yBAAmB9B;AADO,OAEtBY,UAAU,CAACL,aAAX,IAA4B;AAC/B,8BAAwBK,UAAU,CAACL;AADJ,KAFN,CAA3B;;AAOA,QAAMwB,MAAM,GAAGlH,GAAG,CAAC8G,MAAJ,CAAW;AACzBK,cAAQ,EAAEX,SAAS,CAACW,QADK;AAEzBC,aAAO,EAAE,IAFgB;AAGzBC,cAAQ,EAAEb,SAAS,CAACa,QAHK;AAIzBC,UAAI,EAAEd,SAAS,CAACc,IAJS;AAKzBlE,cAAQ,EAAEoD,SAAS,CAACpD,QALK;AAMzB5B,WAAK,iCACDgF,SAAS,CAAChF,KADT,GAEDoF,WAFC,GAGDK,qBAHC;AANoB,KAAX,CAAf;AAaA,WAAOC,MAAP;AACA,GAtFM;;AAuFR;AAAC,CA1LD","names":["ConsoleLogger","Logger","AWS","logger","url","require","crypto","DEFAULT_ALGORITHM","IOT_SERVICE_NAME","encrypt","key","src","encoding","lib","createHmac","update","digest","hash","arg","createHash","escape_RFC3986","component","replace","c","charCodeAt","toString","toUpperCase","canonical_query","query","length","split","map","key_val","e","reencoded_val","sort","a","b","key_a","key_b","join","canonical_headers","headers","Object","keys","toLowerCase","value","trim","item","signed_headers","canonical_request","request","url_info","parse","method","encodeURIComponent","pathname","data","parse_service_info","host","matched","match","parsed","slice","reverse","service","region","credential_scope","d_str","string_to_sign","algorithm","dt_str","scope","get_signing_key","secret_key","service_info","debug","k","k_date","k_region","k_service","k_signing","get_signature","signing_key","str_to_sign","get_authorization_header","access_key","signature","Signer","access_info","dt","Date","toISOString","substr","session_token","request_str","serviceInfo","authorization_header","urlOrRequest","accessInfo","expiration","urlToSign","body","undefined","now","today","_a","search","parsedUrl","signedHeaders","credentialScope","sessionTokenRequired","queryParams","canonicalRequest","format","__assign","stringToSign","additionalQueryParams","result","protocol","slashes","hostname","port"],"sourceRoot":"","sources":["../src/Signer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}