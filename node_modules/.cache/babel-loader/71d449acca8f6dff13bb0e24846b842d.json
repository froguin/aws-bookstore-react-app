{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { SumerianProvider } from './Providers/SumerianProvider';\nimport { XRProviderNotConfigured } from './Errors';\nvar logger = new Logger('XR');\nvar DEFAULT_PROVIDER_NAME = 'SumerianProvider';\n\nvar XR =\n/** @class */\nfunction () {\n  /**\n   * Initialize XR with AWS configurations\n   *\n   * @param {XROptions} options - Configuration object for XR\n   */\n  function XR(options) {\n    this._options = options;\n    logger.debug('XR Options', this._options);\n    this._defaultProvider = DEFAULT_PROVIDER_NAME;\n    this._pluggables = {}; // Add default provider\n\n    this.addPluggable(new SumerianProvider());\n  }\n  /**\n   * Configure XR part with configurations\n   *\n   * @param {XROptions} config - Configuration for XR\n   * @return {Object} - The current configuration\n   */\n\n\n  XR.prototype.configure = function (options) {\n    var _this = this;\n\n    var opt = options ? options.XR || options : {};\n    logger.debug('configure XR', {\n      opt: opt\n    });\n    this._options = Object.assign({}, this._options, opt);\n    Object.entries(this._pluggables).map(function (_a) {\n      var name = _a[0],\n          provider = _a[1];\n\n      if (name === _this._defaultProvider && !opt[_this._defaultProvider]) {\n        provider.configure(_this._options);\n      } else {\n        provider.configure(_this._options[name]);\n      }\n    });\n    return this._options;\n  };\n  /**\n   * add plugin into XR category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  XR.prototype.addPluggable = function (pluggable) {\n    return __awaiter(this, void 0, void 0, function () {\n      var config;\n      return __generator(this, function (_a) {\n        if (pluggable && pluggable.getCategory() === 'XR') {\n          this._pluggables[pluggable.getProviderName()] = pluggable;\n          config = pluggable.configure(this._options);\n          return [2\n          /*return*/\n          , config];\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  XR.prototype.loadScene = function (sceneName, domElementId, sceneOptions, provider) {\n    if (sceneOptions === void 0) {\n      sceneOptions = {};\n    }\n\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n            return [4\n            /*yield*/\n            , this._pluggables[provider].loadScene(sceneName, domElementId, sceneOptions)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  XR.prototype.isSceneLoaded = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].isSceneLoaded(sceneName);\n  };\n\n  XR.prototype.getSceneController = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].getSceneController(sceneName);\n  };\n\n  XR.prototype.isVRCapable = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].isVRCapable(sceneName);\n  };\n\n  XR.prototype.isVRPresentationActive = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].isVRPresentationActive(sceneName);\n  };\n\n  XR.prototype.start = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].start(sceneName);\n  };\n\n  XR.prototype.enterVR = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].enterVR(sceneName);\n  };\n\n  XR.prototype.exitVR = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].exitVR(sceneName);\n  };\n\n  XR.prototype.isMuted = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].isMuted(sceneName);\n  };\n\n  XR.prototype.setMuted = function (sceneName, muted, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].setMuted(sceneName, muted);\n  };\n\n  XR.prototype.onSceneEvent = function (sceneName, eventName, eventHandler, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].onSceneEvent(sceneName, eventName, eventHandler);\n  };\n\n  XR.prototype.enableAudio = function (sceneName, provider) {\n    if (provider === void 0) {\n      provider = this._defaultProvider;\n    }\n\n    if (!this._pluggables[provider]) throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n    return this._pluggables[provider].enableAudio(sceneName);\n  };\n\n  return XR;\n}();\n\nexport default XR;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","SumerianProvider","XRProviderNotConfigured","logger","DEFAULT_PROVIDER_NAME","options","_options","debug","_defaultProvider","_pluggables","addPluggable","XR","opt","Object","assign","entries","map","_a","name","provider","_this","configure","pluggable","getCategory","getProviderName","config","sceneName","domElementId","sceneOptions","loadScene","isSceneLoaded","getSceneController","isVRCapable","isVRPresentationActive","start","enterVR","exitVR","isMuted","muted","setMuted","eventName","eventHandler","onSceneEvent","enableAudio"],"sourceRoot":"","sources":["../src/XR.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}