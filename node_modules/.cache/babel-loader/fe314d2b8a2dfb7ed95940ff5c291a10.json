{"ast":null,"code":"/**\n * Convert types\n */\nexport var InterpretTextCategories;\n\n(function (InterpretTextCategories) {\n  InterpretTextCategories[\"ALL\"] = \"ALL\";\n  InterpretTextCategories[\"LANGUAGE\"] = \"LANGUAGE\";\n  InterpretTextCategories[\"ENTITIES\"] = \"ENTITIES\";\n  InterpretTextCategories[\"SENTIMENT\"] = \"SENTIMENT\";\n  InterpretTextCategories[\"SYNTAX\"] = \"SYNTAX\";\n  InterpretTextCategories[\"KEY_PHRASES\"] = \"KEY_PHRASES\";\n})(InterpretTextCategories || (InterpretTextCategories = {}));\n\nexport function isIdentifyFromCollection(obj) {\n  var key = 'collection';\n  var keyId = 'collectionId';\n  return obj && (obj.hasOwnProperty(key) || obj.hasOwnProperty(keyId));\n}\nexport function isIdentifyCelebrities(obj) {\n  var key = 'celebrityDetection';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isTranslateTextInput(obj) {\n  var key = 'translateText';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isTextToSpeechInput(obj) {\n  var key = 'textToSpeech';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isSpeechToTextInput(obj) {\n  var key = 'transcription';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isStorageSource(obj) {\n  var key = 'key';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isFileSource(obj) {\n  var key = 'file';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isBytesSource(obj) {\n  var key = 'bytes';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isIdentifyTextInput(obj) {\n  var key = 'text';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isIdentifyLabelsInput(obj) {\n  var key = 'labels';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isIdentifyEntitiesInput(obj) {\n  var key = 'entities';\n  return obj && obj.hasOwnProperty(key);\n}\nexport function isInterpretTextInput(obj) {\n  var key = 'text';\n  return obj && obj.hasOwnProperty(key);\n}","map":{"version":3,"mappings":"AAWA;;;AAIA,WAAYA,uBAAZ;;AAAA,WAAYA,uBAAZ,EAAmC;AAClCA;AACAA;AACAA;AACAA;AACAA;AACAA;AACA,CAPD,EAAYA,uBAAuB,KAAvBA,uBAAuB,MAAnC;;AAmRA,OAAM,SAAUC,wBAAV,CACLC,GADK,EACG;AAER,MAAMC,GAAG,GAAiC,YAA1C;AACA,MAAMC,KAAK,GAAiC,cAA5C;AACA,SAAOF,GAAG,KAAKA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,KAA2BD,GAAG,CAACG,cAAJ,CAAmBD,KAAnB,CAAhC,CAAV;AACA;AAED,OAAM,SAAUE,qBAAV,CAAgCJ,GAAhC,EAAwC;AAC7C,MAAMC,GAAG,GAA8B,oBAAvC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUI,oBAAV,CAA+BL,GAA/B,EAAuC;AAC5C,MAAMC,GAAG,GAA6B,eAAtC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUK,mBAAV,CAA8BN,GAA9B,EAAsC;AAC3C,MAAMC,GAAG,GAA4B,cAArC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUM,mBAAV,CAA8BP,GAA9B,EAAsC;AAC3C,MAAMC,GAAG,GAA4B,eAArC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUO,eAAV,CAA0BR,GAA1B,EAAkC;AACvC,MAAMC,GAAG,GAAwB,KAAjC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUQ,YAAV,CAAuBT,GAAvB,EAA+B;AACpC,MAAMC,GAAG,GAAqB,MAA9B;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUS,aAAV,CAAwBV,GAAxB,EAAgC;AACrC,MAAMC,GAAG,GAAsB,OAA/B;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUU,mBAAV,CAA8BX,GAA9B,EAAsC;AAC3C,MAAMC,GAAG,GAA4B,MAArC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUW,qBAAV,CAAgCZ,GAAhC,EAAwC;AAC7C,MAAMC,GAAG,GAA8B,QAAvC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUY,uBAAV,CACLb,GADK,EACG;AAER,MAAMC,GAAG,GAAgC,UAAzC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA;AAED,OAAM,SAAUa,oBAAV,CAA+Bd,GAA/B,EAAuC;AAC5C,MAAMC,GAAG,GAA6B,MAAtC;AACA,SAAOD,GAAG,IAAIA,GAAG,CAACG,cAAJ,CAAmBF,GAAnB,CAAd;AACA","names":["InterpretTextCategories","isIdentifyFromCollection","obj","key","keyId","hasOwnProperty","isIdentifyCelebrities","isTranslateTextInput","isTextToSpeechInput","isSpeechToTextInput","isStorageSource","isFileSource","isBytesSource","isIdentifyTextInput","isIdentifyLabelsInput","isIdentifyEntitiesInput","isInterpretTextInput"],"sourceRoot":"","sources":["../../src/types/Predictions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}