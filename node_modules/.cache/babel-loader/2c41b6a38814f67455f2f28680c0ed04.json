{"ast":null,"code":"/**\n * Changes object keys to camel case. If optional parameter `keys` is given, then we extract only the\n * keys specified in `keys`.\n */\nexport function makeCamelCase(obj, keys) {\n  if (!obj) return undefined;\n  var newObj = {};\n  var keysToRename = keys ? keys : Object.keys(obj);\n  keysToRename.forEach(function (key) {\n    var _a;\n\n    if (obj.hasOwnProperty(key)) {\n      // change the key to camelcase.\n      var camelCaseKey = key.charAt(0).toLowerCase() + key.substr(1);\n      Object.assign(newObj, (_a = {}, _a[camelCaseKey] = obj[key], _a));\n    }\n  });\n  return newObj;\n}\n/**\n * Given an array of object, call makeCamelCase(...) on each option.\n */\n\nexport function makeCamelCaseArray(objArr, keys) {\n  if (!objArr) return undefined;\n  return objArr.map(function (obj) {\n    return makeCamelCase(obj, keys);\n  });\n}\n/**\n * Converts blob to array buffer\n */\n\nexport function blobToArrayBuffer(blob) {\n  return new Promise(function (res, rej) {\n    var reader = new FileReader();\n\n    reader.onload = function (_event) {\n      res(reader.result);\n    };\n\n    reader.onerror = function (err) {\n      rej(err);\n    };\n\n    try {\n      reader.readAsArrayBuffer(blob);\n    } catch (err) {\n      rej(err); // in case user gives invalid type\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA;;;;AAIA,OAAM,SAAUA,aAAV,CAAwBC,GAAxB,EAAqCC,IAArC,EAAoD;AACzD,MAAI,CAACD,GAAL,EAAU,OAAOE,SAAP;AACV,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,YAAY,GAAGH,IAAI,GAAGA,IAAH,GAAUI,MAAM,CAACJ,IAAP,CAAYD,GAAZ,CAAnC;AACAI,cAAY,CAACE,OAAb,CAAqB,eAAG;;;AACvB,QAAIN,GAAG,CAACO,cAAJ,CAAmBC,GAAnB,CAAJ,EAA6B;AAC5B;AACA,UAAMC,YAAY,GAAGD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BH,GAAG,CAACI,MAAJ,CAAW,CAAX,CAAnD;AACAP,YAAM,CAACQ,MAAP,CAAcV,MAAd,GAAoBW,SAAIA,GAACL,YAAD,IAAgBT,GAAG,CAACQ,GAAD,CAAvB,EAA4BM,EAAhD;AACA;AACD,GAND;AAOA,SAAOX,MAAP;AACA;AAED;;;;AAGA,OAAM,SAAUY,kBAAV,CAA6BC,MAA7B,EAA+Cf,IAA/C,EAA8D;AACnE,MAAI,CAACe,MAAL,EAAa,OAAOd,SAAP;AACb,SAAOc,MAAM,CAACC,GAAP,CAAW,eAAG;AAAI,wBAAa,CAACjB,GAAD,EAAMC,IAAN,CAAb;AAAwB,GAA1C,CAAP;AACA;AAED;;;;AAGA,OAAM,SAAUiB,iBAAV,CAA4BC,IAA5B,EAAsC;AAC3C,SAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAS;AAC3B,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,UAAM,CAACE,MAAP,GAAgB,kBAAM;AACrBJ,SAAG,CAACE,MAAM,CAACG,MAAR,CAAH;AACA,KAFD;;AAGAH,UAAM,CAACI,OAAP,GAAiB,eAAG;AACnBL,SAAG,CAACM,GAAD,CAAH;AACA,KAFD;;AAGA,QAAI;AACHL,YAAM,CAACM,iBAAP,CAAyBV,IAAzB;AACA,KAFD,CAEE,OAAOS,GAAP,EAAY;AACbN,SAAG,CAACM,GAAD,CAAH,CADa,CACH;AACV;AACD,GAbM,CAAP;AAcA","names":["makeCamelCase","obj","keys","undefined","newObj","keysToRename","Object","forEach","hasOwnProperty","key","camelCaseKey","charAt","toLowerCase","substr","assign","_a","makeCamelCaseArray","objArr","map","blobToArrayBuffer","blob","Promise","res","rej","reader","FileReader","onload","result","onerror","err","readAsArrayBuffer"],"sourceRoot":"","sources":["../../src/Providers/Utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}