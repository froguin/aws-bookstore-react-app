{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\n\nvar Int64_1 = require(\"./Int64\");\n/**\n * @internal\n */\n\n\nvar HeaderMarshaller =\n/** @class */\nfunction () {\n  function HeaderMarshaller(toUtf8, fromUtf8) {\n    this.toUtf8 = toUtf8;\n    this.fromUtf8 = fromUtf8;\n  }\n\n  HeaderMarshaller.prototype.format = function (headers) {\n    var e_1, _a, e_2, _b;\n\n    var chunks = [];\n\n    try {\n      for (var _c = tslib_1.__values(Object.keys(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var headerName = _d.value;\n        var bytes = this.fromUtf8(headerName);\n        chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var out = new Uint8Array(chunks.reduce(function (carry, bytes) {\n      return carry + bytes.byteLength;\n    }, 0));\n    var position = 0;\n\n    try {\n      for (var chunks_1 = tslib_1.__values(chunks), chunks_1_1 = chunks_1.next(); !chunks_1_1.done; chunks_1_1 = chunks_1.next()) {\n        var chunk = chunks_1_1.value;\n        out.set(chunk, position);\n        position += chunk.byteLength;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (chunks_1_1 && !chunks_1_1.done && (_b = chunks_1.return)) _b.call(chunks_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return out;\n  };\n\n  HeaderMarshaller.prototype.formatHeaderValue = function (header) {\n    switch (header.type) {\n      case 'boolean':\n        return Uint8Array.from([header.value ? 0\n        /* boolTrue */\n        : 1\n        /* boolFalse */\n        ]);\n\n      case 'byte':\n        return Uint8Array.from([2\n        /* byte */\n        , header.value]);\n\n      case 'short':\n        var shortView = new DataView(new ArrayBuffer(3));\n        shortView.setUint8(0, 3\n        /* short */\n        );\n        shortView.setInt16(1, header.value, false);\n        return new Uint8Array(shortView.buffer);\n\n      case 'integer':\n        var intView = new DataView(new ArrayBuffer(5));\n        intView.setUint8(0, 4\n        /* integer */\n        );\n        intView.setInt32(1, header.value, false);\n        return new Uint8Array(intView.buffer);\n\n      case 'long':\n        var longBytes = new Uint8Array(9);\n        longBytes[0] = 5\n        /* long */\n        ;\n        longBytes.set(header.value.bytes, 1);\n        return longBytes;\n\n      case 'binary':\n        var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n        binView.setUint8(0, 6\n        /* byteArray */\n        );\n        binView.setUint16(1, header.value.byteLength, false);\n        var binBytes = new Uint8Array(binView.buffer);\n        binBytes.set(header.value, 3);\n        return binBytes;\n\n      case 'string':\n        var utf8Bytes = this.fromUtf8(header.value);\n        var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n        strView.setUint8(0, 7\n        /* string */\n        );\n        strView.setUint16(1, utf8Bytes.byteLength, false);\n        var strBytes = new Uint8Array(strView.buffer);\n        strBytes.set(utf8Bytes, 3);\n        return strBytes;\n\n      case 'timestamp':\n        var tsBytes = new Uint8Array(9);\n        tsBytes[0] = 8\n        /* timestamp */\n        ;\n        tsBytes.set(Int64_1.Int64.fromNumber(header.value.valueOf()).bytes, 1);\n        return tsBytes;\n\n      case 'uuid':\n        if (!UUID_PATTERN.test(header.value)) {\n          throw new Error(\"Invalid UUID received: \" + header.value);\n        }\n\n        var uuidBytes = new Uint8Array(17);\n        uuidBytes[0] = 9\n        /* uuid */\n        ;\n        uuidBytes.set(util_hex_encoding_1.fromHex(header.value.replace(/\\-/g, '')), 1);\n        return uuidBytes;\n    }\n  };\n\n  HeaderMarshaller.prototype.parse = function (headers) {\n    var out = {};\n    var position = 0;\n\n    while (position < headers.byteLength) {\n      var nameLength = headers.getUint8(position++);\n      var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n      position += nameLength;\n\n      switch (headers.getUint8(position++)) {\n        case 0\n        /* boolTrue */\n        :\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: true\n          };\n          break;\n\n        case 1\n        /* boolFalse */\n        :\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: false\n          };\n          break;\n\n        case 2\n        /* byte */\n        :\n          out[name] = {\n            type: BYTE_TAG,\n            value: headers.getInt8(position++)\n          };\n          break;\n\n        case 3\n        /* short */\n        :\n          out[name] = {\n            type: SHORT_TAG,\n            value: headers.getInt16(position, false)\n          };\n          position += 2;\n          break;\n\n        case 4\n        /* integer */\n        :\n          out[name] = {\n            type: INT_TAG,\n            value: headers.getInt32(position, false)\n          };\n          position += 4;\n          break;\n\n        case 5\n        /* long */\n        :\n          out[name] = {\n            type: LONG_TAG,\n            value: new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))\n          };\n          position += 8;\n          break;\n\n        case 6\n        /* byteArray */\n        :\n          var binaryLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: BINARY_TAG,\n            value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)\n          };\n          position += binaryLength;\n          break;\n\n        case 7\n        /* string */\n        :\n          var stringLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: STRING_TAG,\n            value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))\n          };\n          position += stringLength;\n          break;\n\n        case 8\n        /* timestamp */\n        :\n          out[name] = {\n            type: TIMESTAMP_TAG,\n            value: new Date(new Int64_1.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())\n          };\n          position += 8;\n          break;\n\n        case 9\n        /* uuid */\n        :\n          var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n          position += 16;\n          out[name] = {\n            type: UUID_TAG,\n            value: util_hex_encoding_1.toHex(uuidBytes.subarray(0, 4)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(4, 6)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(6, 8)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(8, 10)) + \"-\" + util_hex_encoding_1.toHex(uuidBytes.subarray(10))\n          };\n          break;\n\n        default:\n          throw new Error(\"Unrecognized header type tag\");\n      }\n    }\n\n    return out;\n  };\n\n  return HeaderMarshaller;\n}();\n\nexports.HeaderMarshaller = HeaderMarshaller;\n;\nvar BOOLEAN_TAG = 'boolean';\nvar BYTE_TAG = 'byte';\nvar SHORT_TAG = 'short';\nvar INT_TAG = 'integer';\nvar LONG_TAG = 'long';\nvar BINARY_TAG = 'binary';\nvar STRING_TAG = 'string';\nvar TIMESTAMP_TAG = 'timestamp';\nvar UUID_TAG = 'uuid';\nvar UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;","map":{"version":3,"mappings":"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","names":["toUtf8","fromUtf8","HeaderMarshaller","headers","chunks","keys","_d","headerName","bytes","push","Uint8Array","from","byteLength","formatHeaderValue","out","reduce","carry","position","chunks_1_1","chunk","set","header","type","value","shortView","DataView","ArrayBuffer","setUint8","setInt16","buffer","intView","setInt32","longBytes","binView","setUint16","binBytes","utf8Bytes","strView","strBytes","tsBytes","Int64_1","fromNumber","valueOf","UUID_PATTERN","test","Error","uuidBytes","util_hex_encoding_1","replace","nameLength","getUint8","name","byteOffset","BOOLEAN_TAG","BYTE_TAG","getInt8","SHORT_TAG","getInt16","INT_TAG","getInt32","LONG_TAG","binaryLength","getUint16","BINARY_TAG","stringLength","STRING_TAG","TIMESTAMP_TAG","Date","UUID_TAG","subarray","exports"],"sourceRoot":"","sources":["../src/HeaderMarshaller.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}