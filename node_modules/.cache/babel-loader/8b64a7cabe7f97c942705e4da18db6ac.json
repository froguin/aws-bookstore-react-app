{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractXRProvider');\n\nvar AbstractXRProvider =\n/** @class */\nfunction () {\n  function AbstractXRProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this._config = options;\n  }\n\n  AbstractXRProvider.prototype.configure = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    this._config = __assign(__assign({}, config), this._config);\n    logger.debug(\"configure \" + this.getProviderName(), this._config);\n    return this.options;\n  };\n\n  AbstractXRProvider.prototype.getCategory = function () {\n    return 'XR';\n  };\n\n  Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\n    get: function get() {\n      return __assign({}, this._config);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AbstractXRProvider;\n}();\n\nexport { AbstractXRProvider };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAaA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AAEA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,oBAAX,CAAf;;AAEA;AAAA;AAAA;AAGC,8BAAYE,OAAZ,EAAyC;AAA7B;AAAAA;AAA6B;;AACxC,SAAKC,OAAL,GAAeD,OAAf;AACA;;AAEDE,qDAAUC,MAAV,EAAsC;AAA5B;AAAAA;AAA4B;;AACrC,SAAKF,OAAL,GAAYG,sBAAQD,MAAR,GAAmB,KAAKF,OAAxB,CAAZ;AAEAF,UAAM,CAACM,KAAP,CAAa,eAAa,KAAKC,eAAL,EAA1B,EAAoD,KAAKL,OAAzD;AAEA,WAAO,KAAKD,OAAZ;AACA,GAND;;AAQAE;AACC,WAAO,IAAP;AACA,GAFD;;AAMAK,wBAAcL,4BAAd,EAAc,SAAd,EAAqB;SAArB;AACC,0BAAY,KAAKD,OAAjB;AACA,KAFoB;oBAAA;;AAAA,GAArB;AAwBD;AAAC,CA7CD","names":["ConsoleLogger","Logger","logger","options","_config","AbstractXRProvider","config","__assign","debug","getProviderName","Object"],"sourceRoot":"","sources":["../../src/Providers/XRProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}