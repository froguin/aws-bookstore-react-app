{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport * as Observable from 'zen-observable';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { MqttOverWSProvider } from './MqttOverWSProvider';\nvar logger = new Logger('AWSAppSyncProvider');\n\nvar AWSAppSyncProvider =\n/** @class */\nfunction (_super) {\n  __extends(AWSAppSyncProvider, _super);\n\n  function AWSAppSyncProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._topicClient = new Map();\n    _this._topicAlias = new Map();\n    return _this;\n  }\n\n  Object.defineProperty(AWSAppSyncProvider.prototype, \"endpoint\", {\n    get: function get() {\n      throw new Error('Not supported');\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  AWSAppSyncProvider.prototype.getProviderName = function () {\n    return 'AWSAppSyncProvider';\n  };\n\n  AWSAppSyncProvider.prototype.publish = function (topics, msg, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error('Operation not supported');\n      });\n    });\n  };\n\n  AWSAppSyncProvider.prototype._cleanUp = function (clientId) {\n    var _this = this;\n\n    var topicsForClient = Array.from(this._topicClient.entries()).filter(function (_a) {\n      var c = _a[1];\n      return c.clientId === clientId;\n    }).map(function (_a) {\n      var t = _a[0];\n      return t;\n    });\n    topicsForClient.forEach(function (t) {\n      return _this._cleanUpForTopic(t);\n    });\n  };\n\n  AWSAppSyncProvider.prototype._cleanUpForTopic = function (topic) {\n    this._topicClient.delete(topic);\n\n    this._topicAlias.delete(topic);\n  };\n\n  AWSAppSyncProvider.prototype.onDisconnect = function (_a) {\n    var _this = this;\n\n    var clientId = _a.clientId,\n        errorCode = _a.errorCode,\n        args = __rest(_a, [\"clientId\", \"errorCode\"]);\n\n    if (errorCode !== 0) {\n      var topicsForClient = Array.from(this._topicClient.entries()).filter(function (_a) {\n        var c = _a[1];\n        return c.clientId === clientId;\n      }).map(function (_a) {\n        var t = _a[0];\n        return t;\n      });\n      topicsForClient.forEach(function (topic) {\n        if (_this._topicObservers.has(topic)) {\n          _this._topicObservers.get(topic).forEach(function (obs) {\n            if (!obs.closed) {\n              obs.error(args);\n            }\n          });\n\n          _this._topicObservers.delete(topic);\n        }\n      });\n\n      this._cleanUp(clientId);\n    }\n  };\n\n  AWSAppSyncProvider.prototype.disconnect = function (clientId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var client;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.clientsQueue.get(clientId, function () {\n              return null;\n            })];\n\n          case 1:\n            client = _a.sent();\n            return [4\n            /*yield*/\n            , _super.prototype.disconnect.call(this, clientId)];\n\n          case 2:\n            _a.sent();\n\n            this._cleanUp(clientId);\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSAppSyncProvider.prototype.subscribe = function (topics, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var result = new Observable(function (observer) {\n      var targetTopics = [].concat(topics);\n      logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n\n      (function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, mqttConnections, newSubscriptions, newAliases, map;\n\n          var _this = this;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                // Add these topics to map\n                targetTopics.forEach(function (t) {\n                  if (!_this._topicObservers.has(t)) {\n                    _this._topicObservers.set(t, new Set());\n                  }\n\n                  _this._topicObservers.get(t).add(observer);\n                });\n                _a = options.mqttConnections, mqttConnections = _a === void 0 ? [] : _a, newSubscriptions = options.newSubscriptions;\n                newAliases = Object.entries(newSubscriptions).map(function (_a) {\n                  var alias = _a[0],\n                      v = _a[1];\n                  return [v.topic, alias];\n                }); // Merge new aliases with old ones\n\n                this._topicAlias = new Map(__spreadArrays(Array.from(this._topicAlias.entries()), newAliases));\n                map = Object.entries(targetTopics.reduce(function (acc, elem) {\n                  var connectionInfoForTopic = mqttConnections.find(function (c) {\n                    return c.topics.indexOf(elem) > -1;\n                  });\n\n                  if (connectionInfoForTopic) {\n                    var clientId = connectionInfoForTopic.client,\n                        url = connectionInfoForTopic.url;\n\n                    if (!acc[clientId]) {\n                      acc[clientId] = {\n                        url: url,\n                        topics: new Set()\n                      };\n                    }\n\n                    acc[clientId].topics.add(elem);\n                  }\n\n                  return acc;\n                }, {})); // reconnect everything we have in the map\n\n                return [4\n                /*yield*/\n                , Promise.all(map.map(function (_a) {\n                  var clientId = _a[0],\n                      _b = _a[1],\n                      url = _b.url,\n                      topics = _b.topics;\n                  return __awaiter(_this, void 0, void 0, function () {\n                    var client, err_1;\n\n                    var _this = this;\n\n                    return __generator(this, function (_c) {\n                      switch (_c.label) {\n                        case 0:\n                          client = null;\n                          _c.label = 1;\n\n                        case 1:\n                          _c.trys.push([1, 3,, 4]);\n\n                          return [4\n                          /*yield*/\n                          , this.connect(clientId, {\n                            clientId: clientId,\n                            url: url\n                          })];\n\n                        case 2:\n                          client = _c.sent();\n                          return [3\n                          /*break*/\n                          , 4];\n\n                        case 3:\n                          err_1 = _c.sent();\n                          observer.error({\n                            message: 'Failed to connect',\n                            error: err_1\n                          });\n                          observer.complete();\n                          return [2\n                          /*return*/\n                          , undefined];\n\n                        case 4:\n                          // subscribe to all topics for this client\n                          // store topic-client mapping\n                          topics.forEach(function (topic) {\n                            if (client.isConnected()) {\n                              client.subscribe(topic);\n\n                              _this._topicClient.set(topic, client);\n                            }\n                          });\n                          return [2\n                          /*return*/\n                          , client];\n                      }\n                    });\n                  });\n                }))];\n\n              case 1:\n                // reconnect everything we have in the map\n                _b.sent();\n\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      })();\n\n      return function () {\n        logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n        targetTopics.forEach(function (t) {\n          var client = _this._topicClient.get(t);\n\n          if (client && client.isConnected()) {\n            client.unsubscribe(t);\n\n            _this._topicClient.delete(t);\n\n            if (!Array.from(_this._topicClient.values()).some(function (c) {\n              return c === client;\n            })) {\n              _this.disconnect(client.clientId);\n            }\n          }\n\n          _this._topicObservers.delete(t);\n        });\n      };\n    });\n    return Observable.from(result).map(function (value) {\n      var topic = _this.getTopicForValue(value);\n\n      var alias = _this._topicAlias.get(topic);\n\n      value.data = Object.entries(value.data).reduce(function (obj, _a) {\n        var origKey = _a[0],\n            val = _a[1];\n        return obj[alias || origKey] = val, obj;\n      }, {});\n      return value;\n    });\n  };\n\n  return AWSAppSyncProvider;\n}(MqttOverWSProvider);\n\nexport { AWSAppSyncProvider };","map":{"version":3,"mappings":"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","names":["Observable","ConsoleLogger","Logger","MqttOverWSProvider","logger","__extends","_this","Map","Object","AWSAppSyncProvider","Error","topics","msg","options","clientId","topicsForClient","Array","from","_topicClient","entries","filter","_a","c","map","t","forEach","_cleanUpForTopic","topic","delete","_topicAlias","errorCode","args","_topicObservers","has","get","obs","closed","error","_cleanUp","clientsQueue","client","_super","disconnect","call","result","targetTopics","concat","debug","join","set","Set","add","observer","newSubscriptions","newAliases","alias","v","__spreadArrays","reduce","acc","elem","connectionInfoForTopic","mqttConnections","find","indexOf","url","Promise","all","_b","connect","_c","message","err_1","complete","undefined","isConnected","subscribe","unsubscribe","values","some","getTopicForValue","value","data","obj","origKey","val"],"sourceRoot":"","sources":["../../src/Providers/AWSAppSyncProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}