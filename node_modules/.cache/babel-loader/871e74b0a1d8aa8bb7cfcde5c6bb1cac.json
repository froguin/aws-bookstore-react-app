{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport closest from './closest';\nimport matches from './matches';\n/**\n * Delegates the handling of events for an element matching a selector to an\n * ancestor of the matching element.\n * @param {!Node} ancestor The ancestor element to add the listener to.\n * @param {string} eventType The event type to listen to.\n * @param {string} selector A CSS selector to match against child elements.\n * @param {!Function} callback A function to run any time the event happens.\n * @param {Object=} opts A configuration options object. The available options:\n *     - useCapture<boolean>: If true, bind to the event capture phase.\n *     - deep<boolean>: If true, delegate into shadow trees.\n * @return {Object} The delegate object. It contains a destroy method.\n */\n\nexport default function delegate(ancestor, eventType, selector, callback, opts) {\n  if (opts === void 0) {\n    opts = {};\n  } // Defines the event listener.\n\n\n  var listener = function listener(event) {\n    var delegateTarget; // If opts.composed is true and the event originated from inside a Shadow\n    // tree, check the composed path nodes.\n\n    if (opts['composed'] && typeof event['composedPath'] === 'function') {\n      var composedPath = event.composedPath();\n\n      for (var i = 0, node = void 0; node = composedPath[i]; i++) {\n        if (node.nodeType === 1 && matches(node, selector)) {\n          delegateTarget = node;\n        }\n      }\n    } else {\n      // Otherwise check the parents.\n      delegateTarget = closest(event.target, selector, true);\n    }\n\n    if (delegateTarget) {\n      callback.call(delegateTarget, event, delegateTarget);\n    }\n  };\n\n  ancestor.addEventListener(eventType, listener, opts['useCapture']);\n  return {\n    destroy: function destroy() {\n      ancestor.removeEventListener(eventType, listener, opts['useCapture']);\n    }\n  };\n}","map":{"version":3,"mappings":"AAAA;;;AAIA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;;;;;;;;AAYA,eAAc,SAAUC,QAAV,CACbC,QADa,EAEbC,SAFa,EAGbC,QAHa,EAIbC,QAJa,EAKbC,IALa,EAKJ;AAAT;AAAAA;AAAS,IAET;;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAASC,KAAT,EAAc;AAC9B,QAAIC,cAAJ,CAD8B,CAG9B;AACA;;AACA,QAAIH,IAAI,CAAC,UAAD,CAAJ,IAAoB,OAAOE,KAAK,CAAC,cAAD,CAAZ,KAAiC,UAAzD,EAAqE;AACpE,UAAME,YAAY,GAAGF,KAAK,CAACE,YAAN,EAArB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,IAAI,SAApB,EAAuBA,IAAI,GAAGF,YAAY,CAACC,CAAD,CAA1C,EAAgDA,CAAC,EAAjD,EAAqD;AACpD,YAAIC,IAAI,CAACC,QAAL,KAAkB,CAAlB,IAAuBb,OAAO,CAACY,IAAD,EAAOR,QAAP,CAAlC,EAAoD;AACnDK,wBAAc,GAAGG,IAAjB;AACA;AACD;AACD,KAPD,MAOO;AACN;AACAH,oBAAc,GAAGV,OAAO,CAACS,KAAK,CAACM,MAAP,EAAeV,QAAf,EAAyB,IAAzB,CAAxB;AACA;;AAED,QAAIK,cAAJ,EAAoB;AACnBJ,cAAQ,CAACU,IAAT,CAAcN,cAAd,EAA8BD,KAA9B,EAAqCC,cAArC;AACA;AACD,GApBD;;AAsBAP,UAAQ,CAACc,gBAAT,CAA0Bb,SAA1B,EAAqCI,QAArC,EAA+CD,IAAI,CAAC,YAAD,CAAnD;AAEA,SAAO;AACNW,WAAO,EAAE;AACRf,cAAQ,CAACgB,mBAAT,CAA6Bf,SAA7B,EAAwCI,QAAxC,EAAkDD,IAAI,CAAC,YAAD,CAAtD;AACA;AAHK,GAAP;AAKA","names":["closest","matches","delegate","ancestor","eventType","selector","callback","opts","listener","event","delegateTarget","composedPath","i","node","nodeType","target","call","addEventListener","destroy","removeEventListener"],"sourceRoot":"","sources":["../../../src/vendor/dom-utils/delegate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}