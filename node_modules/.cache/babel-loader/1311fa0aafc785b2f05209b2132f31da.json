{"ast":null,"code":"import { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Parser');\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser() {}\n\n  Parser.parseMobilehubConfig = function (config) {\n    var amplifyConfig = {}; // Analytics\n\n    if (config['aws_mobile_analytics_app_id']) {\n      var Analytics = {\n        AWSPinpoint: {\n          appId: config['aws_mobile_analytics_app_id'],\n          region: config['aws_mobile_analytics_app_region']\n        }\n      };\n      amplifyConfig.Analytics = Analytics;\n    } // Auth\n\n\n    if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n      var Auth = {\n        userPoolId: config['aws_user_pools_id'],\n        userPoolWebClientId: config['aws_user_pools_web_client_id'],\n        region: config['aws_cognito_region'],\n        identityPoolId: config['aws_cognito_identity_pool_id'],\n        mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable' ? true : false\n      };\n      amplifyConfig.Auth = Auth;\n    } // Storage\n\n\n    var storageConfig;\n\n    if (config['aws_user_files_s3_bucket']) {\n      storageConfig = {\n        AWSS3: {\n          bucket: config['aws_user_files_s3_bucket'],\n          region: config['aws_user_files_s3_bucket_region'],\n          dangerouslyConnectToHttpEndpointForTesting: config['aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing']\n        }\n      };\n    } else {\n      storageConfig = config ? config.Storage || config : {};\n    }\n\n    amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n    amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n    amplifyConfig.Storage = Object.assign({}, storageConfig);\n    logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n    return amplifyConfig;\n  };\n\n  return Parser;\n}();\n\nexport default Parser;","map":{"version":3,"mappings":"AACA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,UAAxC;AAEA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,QAAX,CAAf;;AAEA;AAAA;AAAA;AAAA,qBAqDC;;AApDOE,gCAAP,UAA4BC,MAA5B,EAAkC;AACjC,QAAMC,aAAa,GAAkB,EAArC,CADiC,CAEjC;;AACA,QAAID,MAAM,CAAC,6BAAD,CAAV,EAA2C;AAC1C,UAAME,SAAS,GAAG;AACjBC,mBAAW,EAAE;AACZC,eAAK,EAAEJ,MAAM,CAAC,6BAAD,CADD;AAEZK,gBAAM,EAAEL,MAAM,CAAC,iCAAD;AAFF;AADI,OAAlB;AAMAC,mBAAa,CAACC,SAAd,GAA0BA,SAA1B;AACA,KAXgC,CAajC;;;AACA,QAAIF,MAAM,CAAC,8BAAD,CAAN,IAA0CA,MAAM,CAAC,mBAAD,CAApD,EAA2E;AAC1E,UAAMM,IAAI,GAAG;AACZC,kBAAU,EAAEP,MAAM,CAAC,mBAAD,CADN;AAEZQ,2BAAmB,EAAER,MAAM,CAAC,8BAAD,CAFf;AAGZK,cAAM,EAAEL,MAAM,CAAC,oBAAD,CAHF;AAIZS,sBAAc,EAAET,MAAM,CAAC,8BAAD,CAJV;AAKZU,uBAAe,EACdV,MAAM,CAAC,uBAAD,CAAN,KAAoC,QAApC,GAA+C,IAA/C,GAAsD;AAN3C,OAAb;AAQAC,mBAAa,CAACK,IAAd,GAAqBA,IAArB;AACA,KAxBgC,CA0BjC;;;AACA,QAAIK,aAAJ;;AACA,QAAIX,MAAM,CAAC,0BAAD,CAAV,EAAwC;AACvCW,mBAAa,GAAG;AACfC,aAAK,EAAE;AACNC,gBAAM,EAAEb,MAAM,CAAC,0BAAD,CADR;AAENK,gBAAM,EAAEL,MAAM,CAAC,iCAAD,CAFR;AAGNc,oDAA0C,EACzCd,MAAM,CACL,oEADK;AAJD;AADQ,OAAhB;AAUA,KAXD,MAWO;AACNW,mBAAa,GAAGX,MAAM,GAAGA,MAAM,CAACe,OAAP,IAAkBf,MAArB,GAA8B,EAApD;AACA;;AACDC,iBAAa,CAACC,SAAd,GAA0Bc,MAAM,CAACC,MAAP,CACzB,EADyB,EAEzBhB,aAAa,CAACC,SAFW,EAGzBF,MAAM,CAACE,SAHkB,CAA1B;AAKAD,iBAAa,CAACK,IAAd,GAAqBU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,aAAa,CAACK,IAAhC,EAAsCN,MAAM,CAACM,IAA7C,CAArB;AACAL,iBAAa,CAACc,OAAd,GAAwBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,aAAlB,CAAxB;AACAb,UAAM,CAACoB,KAAP,CAAa,cAAb,EAA6BlB,MAA7B,EAAqC,kBAArC,EAAyDC,aAAzD;AACA,WAAOA,aAAP;AACA,GAnDM;;AAoDR;AAAC,CArDD","names":["ConsoleLogger","Logger","logger","Parser","config","amplifyConfig","Analytics","AWSPinpoint","appId","region","Auth","userPoolId","userPoolWebClientId","identityPoolId","mandatorySignIn","storageConfig","AWSS3","bucket","dangerouslyConnectToHttpEndpointForTesting","Storage","Object","assign","debug"],"sourceRoot":"","sources":["../src/Parser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}