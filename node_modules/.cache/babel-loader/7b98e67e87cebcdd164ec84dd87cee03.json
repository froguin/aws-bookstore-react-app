{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { defaultConfig, getCurrTime } from './Utils';\nimport StorageCache from './StorageCache';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Cache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\n\nvar BrowserStorageCache =\n/** @class */\nfunction (_super) {\n  __extends(BrowserStorageCache, _super);\n  /**\n   * initialize the cache\n   * @param config - the configuration of the cache\n   */\n\n\n  function BrowserStorageCache(config) {\n    var _this = this;\n\n    var cacheConfig = config ? Object.assign({}, defaultConfig, config) : defaultConfig;\n    _this = _super.call(this, cacheConfig) || this;\n    _this.config.storage = cacheConfig.storage;\n    _this.getItem = _this.getItem.bind(_this);\n    _this.setItem = _this.setItem.bind(_this);\n    _this.removeItem = _this.removeItem.bind(_this);\n    return _this;\n  }\n  /**\n   * decrease current size of the cache\n   *\n   * @private\n   * @param amount - the amount of the cache size which needs to be decreased\n   */\n\n\n  BrowserStorageCache.prototype._decreaseCurSizeInBytes = function (amount) {\n    var curSize = this.getCacheCurSize();\n    this.config.storage.setItem(this.cacheCurSizeKey, (curSize - amount).toString());\n  };\n  /**\n   * increase current size of the cache\n   *\n   * @private\n   * @param amount - the amount of the cache szie which need to be increased\n   */\n\n\n  BrowserStorageCache.prototype._increaseCurSizeInBytes = function (amount) {\n    var curSize = this.getCacheCurSize();\n    this.config.storage.setItem(this.cacheCurSizeKey, (curSize + amount).toString());\n  };\n  /**\n   * update the visited time if item has been visited\n   *\n   * @private\n   * @param item - the item which need to be refreshed\n   * @param prefixedKey - the key of the item\n   *\n   * @return the refreshed item\n   */\n\n\n  BrowserStorageCache.prototype._refreshItem = function (item, prefixedKey) {\n    item.visitedTime = getCurrTime();\n    this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n    return item;\n  };\n  /**\n   * check wether item is expired\n   *\n   * @private\n   * @param key - the key of the item\n   *\n   * @return true if the item is expired.\n   */\n\n\n  BrowserStorageCache.prototype._isExpired = function (key) {\n    var text = this.config.storage.getItem(key);\n    var item = JSON.parse(text);\n\n    if (getCurrTime() >= item.expires) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * delete item from cache\n   *\n   * @private\n   * @param prefixedKey - the key of the item\n   * @param size - optional, the byte size of the item\n   */\n\n\n  BrowserStorageCache.prototype._removeItem = function (prefixedKey, size) {\n    var itemSize = size ? size : JSON.parse(this.config.storage.getItem(prefixedKey)).byteSize;\n\n    this._decreaseCurSizeInBytes(itemSize); // remove the cache item\n\n\n    this.config.storage.removeItem(prefixedKey);\n  };\n  /**\n   * put item into cache\n   *\n   * @private\n   * @param prefixedKey - the key of the item\n   * @param itemData - the value of the item\n   * @param itemSizeInBytes - the byte size of the item\n   */\n\n\n  BrowserStorageCache.prototype._setItem = function (prefixedKey, item) {\n    // update the cache size\n    this._increaseCurSizeInBytes(item.byteSize);\n\n    try {\n      this.config.storage.setItem(prefixedKey, JSON.stringify(item));\n    } catch (setItemErr) {\n      // if failed, we need to rollback the cache size\n      this._decreaseCurSizeInBytes(item.byteSize);\n\n      logger.error(\"Failed to set item \" + setItemErr);\n    }\n  };\n  /**\n   * total space needed when poping out items\n   *\n   * @private\n   * @param itemSize\n   *\n   * @return total space needed\n   */\n\n\n  BrowserStorageCache.prototype._sizeToPop = function (itemSize) {\n    var spaceItemNeed = this.getCacheCurSize() + itemSize - this.config.capacityInBytes;\n    var cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n    return spaceItemNeed > cacheThresholdSpace ? spaceItemNeed : cacheThresholdSpace;\n  };\n  /**\n   * see whether cache is full\n   *\n   * @private\n   * @param itemSize\n   *\n   * @return true if cache is full\n   */\n\n\n  BrowserStorageCache.prototype._isCacheFull = function (itemSize) {\n    return itemSize + this.getCacheCurSize() > this.config.capacityInBytes;\n  };\n  /**\n   * scan the storage and find out all the keys owned by this cache\n   * also clean the expired keys while scanning\n   *\n   * @private\n   *\n   * @return array of keys\n   */\n\n\n  BrowserStorageCache.prototype._findValidKeys = function () {\n    var keys = [];\n    var keyInCache = []; // get all keys in Storage\n\n    for (var i = 0; i < this.config.storage.length; i += 1) {\n      keyInCache.push(this.config.storage.key(i));\n    } // find those items which belong to our cache and also clean those expired items\n\n\n    for (var i = 0; i < keyInCache.length; i += 1) {\n      var key = keyInCache[i];\n\n      if (key.indexOf(this.config.keyPrefix) === 0 && key !== this.cacheCurSizeKey) {\n        if (this._isExpired(key)) {\n          this._removeItem(key);\n        } else {\n          keys.push(key);\n        }\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * get all the items we have, sort them by their priority,\n   * if priority is same, sort them by their last visited time\n   * pop out items from the low priority (5 is the lowest)\n   *\n   * @private\n   * @param keys - all the keys in this cache\n   * @param sizeToPop - the total size of the items which needed to be poped out\n   */\n\n\n  BrowserStorageCache.prototype._popOutItems = function (keys, sizeToPop) {\n    var items = [];\n    var remainedSize = sizeToPop; // get the items from Storage\n\n    for (var i = 0; i < keys.length; i += 1) {\n      var val = this.config.storage.getItem(keys[i]);\n\n      if (val != null) {\n        var item = JSON.parse(val);\n        items.push(item);\n      }\n    } // first compare priority\n    // then compare visited time\n\n\n    items.sort(function (a, b) {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else {\n        if (a.visitedTime < b.visitedTime) {\n          return -1;\n        } else return 1;\n      }\n    });\n\n    for (var i = 0; i < items.length; i += 1) {\n      // pop out items until we have enough room for new item\n      this._removeItem(items[i].key, items[i].byteSize);\n\n      remainedSize -= items[i].byteSize;\n\n      if (remainedSize <= 0) {\n        return;\n      }\n    }\n  };\n  /**\n   * Set item into cache. You can put number, string, boolean or object.\n   * The cache will first check whether has the same key.\n   * If it has, it will delete the old item and then put the new item in\n   * The cache will pop out items if it is full\n   * You can specify the cache item options. The cache will abort and output a warning:\n   * If the key is invalid\n   * If the size of the item exceeds itemMaxSize.\n   * If the value is undefined\n   * If incorrect cache item configuration\n   * If error happened with browser storage\n   *\n   * @param key - the key of the item\n   * @param value - the value of the item\n   * @param {Object} [options] - optional, the specified meta-data\n   */\n\n\n  BrowserStorageCache.prototype.setItem = function (key, value, options) {\n    logger.log(\"Set item: key is \" + key + \", value is \" + value + \" with options: \" + options);\n    var prefixedKey = this.config.keyPrefix + key; // invalid keys\n\n    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {\n      logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n      return;\n    }\n\n    if (typeof value === 'undefined') {\n      logger.warn(\"The value of item should not be undefined!\");\n      return;\n    }\n\n    var cacheItemOptions = {\n      priority: options && options.priority !== undefined ? options.priority : this.config.defaultPriority,\n      expires: options && options.expires !== undefined ? options.expires : this.config.defaultTTL + getCurrTime()\n    };\n\n    if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n      logger.warn(\"Invalid parameter: priority due to out or range. It should be within 1 and 5.\");\n      return;\n    }\n\n    var item = this.fillCacheItem(prefixedKey, value, cacheItemOptions); // check wether this item is too big;\n\n    if (item.byteSize > this.config.itemMaxSize) {\n      logger.warn(\"Item with key: \" + key + \" you are trying to put into is too big!\");\n      return;\n    }\n\n    try {\n      // first look into the storage, if it exists, delete it.\n      var val = this.config.storage.getItem(prefixedKey);\n\n      if (val) {\n        this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n      } // check whether the cache is full\n\n\n      if (this._isCacheFull(item.byteSize)) {\n        var validKeys = this._findValidKeys(); // check again and then pop out items\n\n\n        if (this._isCacheFull(item.byteSize)) {\n          var sizeToPop = this._sizeToPop(item.byteSize);\n\n          this._popOutItems(validKeys, sizeToPop);\n        }\n      } // put item in the cache\n      // may failed due to storage full\n\n\n      this._setItem(prefixedKey, item);\n    } catch (e) {\n      logger.warn(\"setItem failed! \" + e);\n    }\n  };\n  /**\n   * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n   * If you specified callback function in the options,\n   * then the function will be executed if no such item in the cache\n   * and finally put the return value into cache.\n   * Please make sure the callback function will return the value you want to put into the cache.\n   * The cache will abort output a warning:\n   * If the key is invalid\n   * If error happened with browser storage\n   *\n   * @param key - the key of the item\n   * @param {Object} [options] - the options of callback function\n   *\n   * @return - return the value of the item\n   */\n\n\n  BrowserStorageCache.prototype.getItem = function (key, options) {\n    logger.log(\"Get item: key is \" + key + \" with options \" + options);\n    var ret = null;\n    var prefixedKey = this.config.keyPrefix + key;\n\n    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {\n      logger.warn(\"Invalid key: should not be empty or 'CurSize'\");\n      return null;\n    }\n\n    try {\n      ret = this.config.storage.getItem(prefixedKey);\n\n      if (ret != null) {\n        if (this._isExpired(prefixedKey)) {\n          // if expired, remove that item and return null\n          this._removeItem(prefixedKey, JSON.parse(ret).byteSize);\n\n          ret = null;\n        } else {\n          // if not expired, great, return the value and refresh it\n          var item = JSON.parse(ret);\n          item = this._refreshItem(item, prefixedKey);\n          return item.data;\n        }\n      }\n\n      if (options && options.callback !== undefined) {\n        var val = options.callback();\n\n        if (val !== null) {\n          this.setItem(key, val, options);\n        }\n\n        return val;\n      }\n\n      return null;\n    } catch (e) {\n      logger.warn(\"getItem failed! \" + e);\n      return null;\n    }\n  };\n  /**\n   * remove item from the cache\n   * The cache will abort output a warning:\n   * If error happened with browser storage\n   * @param key - the key of the item\n   */\n\n\n  BrowserStorageCache.prototype.removeItem = function (key) {\n    logger.log(\"Remove item: key is \" + key);\n    var prefixedKey = this.config.keyPrefix + key;\n\n    if (prefixedKey === this.config.keyPrefix || prefixedKey === this.cacheCurSizeKey) {\n      return;\n    }\n\n    try {\n      var val = this.config.storage.getItem(prefixedKey);\n\n      if (val) {\n        this._removeItem(prefixedKey, JSON.parse(val).byteSize);\n      }\n    } catch (e) {\n      logger.warn(\"removeItem failed! \" + e);\n    }\n  };\n  /**\n   * clear the entire cache\n   * The cache will abort output a warning:\n   * If error happened with browser storage\n   */\n\n\n  BrowserStorageCache.prototype.clear = function () {\n    logger.log(\"Clear Cache\");\n    var keysToRemove = [];\n\n    for (var i = 0; i < this.config.storage.length; i += 1) {\n      var key = this.config.storage.key(i);\n\n      if (key.indexOf(this.config.keyPrefix) === 0) {\n        keysToRemove.push(key);\n      }\n    }\n\n    try {\n      for (var i = 0; i < keysToRemove.length; i += 1) {\n        this.config.storage.removeItem(keysToRemove[i]);\n      }\n    } catch (e) {\n      logger.warn(\"clear failed! \" + e);\n    }\n  };\n  /**\n   * Return all the keys in the cache.\n   *\n   * @return - all keys in the cache\n   */\n\n\n  BrowserStorageCache.prototype.getAllKeys = function () {\n    var keys = [];\n\n    for (var i = 0; i < this.config.storage.length; i += 1) {\n      var key = this.config.storage.key(i);\n\n      if (key.indexOf(this.config.keyPrefix) === 0 && key !== this.cacheCurSizeKey) {\n        keys.push(key.substring(this.config.keyPrefix.length));\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * return the current size of the cache\n   *\n   * @return - current size of the cache\n   */\n\n\n  BrowserStorageCache.prototype.getCacheCurSize = function () {\n    var ret = this.config.storage.getItem(this.cacheCurSizeKey);\n\n    if (!ret) {\n      this.config.storage.setItem(this.cacheCurSizeKey, '0');\n      ret = '0';\n    }\n\n    return Number(ret);\n  };\n  /**\n   * Return a new instance of cache with customized configuration.\n   * @param config - the customized configuration\n   *\n   * @return - new instance of Cache\n   */\n\n\n  BrowserStorageCache.prototype.createInstance = function (config) {\n    if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n      logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n      config.keyPrefix = getCurrTime.toString();\n    }\n\n    return new BrowserStorageCache(config);\n  };\n\n  return BrowserStorageCache;\n}(StorageCache);\n\nexport { BrowserStorageCache };\nvar instance = new BrowserStorageCache();\nexport default instance;","map":{"version":3,"mappings":"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","names":["defaultConfig","getCurrTime","StorageCache","ConsoleLogger","Logger","logger","__extends","config","cacheConfig","Object","assign","_this","storage","getItem","bind","setItem","removeItem","BrowserStorageCache","amount","curSize","getCacheCurSize","cacheCurSizeKey","toString","item","prefixedKey","visitedTime","JSON","stringify","key","text","parse","expires","size","itemSize","byteSize","_decreaseCurSizeInBytes","_increaseCurSizeInBytes","setItemErr","error","spaceItemNeed","capacityInBytes","cacheThresholdSpace","warningThreshold","keys","keyInCache","i","length","push","indexOf","keyPrefix","_isExpired","_removeItem","sizeToPop","items","remainedSize","val","sort","a","b","priority","value","options","log","warn","cacheItemOptions","undefined","defaultPriority","defaultTTL","fillCacheItem","itemMaxSize","_isCacheFull","validKeys","_findValidKeys","_sizeToPop","_popOutItems","_setItem","e","ret","_refreshItem","data","callback","keysToRemove","substring","Number","instance"],"sourceRoot":"","sources":["../src/BrowserStorageCache.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}