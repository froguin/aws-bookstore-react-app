{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { GraphQLError } from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport * as Observable from 'zen-observable';\nimport { RestClient as RestClass } from './RestClient';\nimport Amplify, { ConsoleLogger as Logger, Credentials, Constants } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport Cache from '@aws-amplify/cache';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { v4 as uuid } from 'uuid';\nvar USER_AGENT_HEADER = 'x-amz-user-agent';\nvar logger = new Logger('API');\nexport var graphqlOperation = function graphqlOperation(query, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return {\n    query: query,\n    variables: variables\n  };\n};\n/**\n * Export Cloud Logic APIs\n */\n\nvar APIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configuration\n   * @param {Object} options - Configuration object for storage\n   */\n  function APIClass(options) {\n    this._api = null;\n    this._pubSub = Amplify.PubSub;\n    this.clientIdentifier = uuid();\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  APIClass.prototype.getModuleName = function () {\n    return 'API';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  APIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (!Array.isArray(opt.endpoints)) {\n      opt.endpoints = [];\n    } // Check if endpoints has custom_headers and validate if is a function\n\n\n    opt.endpoints.forEach(function (endpoint) {\n      if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n        logger.warn('API ' + endpoint.name + ', custom_header should be a function');\n        endpoint.custom_header = undefined;\n      }\n    });\n\n    if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n      logger.warn('graphql_headers should be a function');\n      opt.graphql_headers = undefined;\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  APIClass.prototype.createInstance = function () {\n    logger.debug('create API instance');\n\n    if (this._options) {\n      this._api = new RestClass(this._options);\n      return true;\n    } else {\n      return Promise.reject('API not configured');\n    }\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.get = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_1 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_1)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.get(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.post = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_2 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_2)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.post(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.put = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_3, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_3 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_3)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.put(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.patch = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_4, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_4 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_4)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.patch(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.del = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_5, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_5 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_5)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.del(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName  - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  APIClass.prototype.head = function (apiName, path, init) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_6, endpoint;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_6 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_6)];\n\n          case 4:\n            endpoint = this._api.endpoint(apiName);\n\n            if (endpoint.length === 0) {\n              return [2\n              /*return*/\n              , Promise.reject('API ' + apiName + ' does not exist')];\n            }\n\n            return [2\n            /*return*/\n            , this._api.head(endpoint + path, init)];\n        }\n      });\n    });\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  APIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 4];\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_7 = _a.sent();\n            return [2\n            /*return*/\n            , Promise.reject(error_7)];\n\n          case 4:\n            return [2\n            /*return*/\n            , this._api.endpoint(apiName)];\n        }\n      });\n    });\n  };\n\n  APIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n            authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || 'AWS_IAM';\n            headers = {};\n            _b = authenticationType;\n\n            switch (_b) {\n              case 'API_KEY':\n                return [3\n                /*break*/\n                , 1];\n\n              case 'AWS_IAM':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'OPENID_CONNECT':\n                return [3\n                /*break*/\n                , 4];\n\n              case 'AMAZON_COGNITO_USER_POOLS':\n                return [3\n                /*break*/\n                , 6];\n            }\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 1:\n            if (!apiKey) {\n              throw new Error('No api-key configured');\n            }\n\n            headers = {\n              Authorization: null,\n              'X-Api-Key': apiKey\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 3:\n            credentialsOK = _c.sent();\n\n            if (!credentialsOK) {\n              throw new Error('No credentials');\n            }\n\n            return [3\n            /*break*/\n            , 9];\n\n          case 4:\n            return [4\n            /*yield*/\n            , Cache.getItem('federatedInfo')];\n\n          case 5:\n            federatedInfo = _c.sent();\n\n            if (!federatedInfo || !federatedInfo.token) {\n              throw new Error('No federated jwt');\n            }\n\n            headers = {\n              Authorization: federatedInfo.token\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 6:\n            return [4\n            /*yield*/\n            , Auth.currentSession()];\n\n          case 7:\n            session = _c.sent();\n            headers = {\n              Authorization: session.getAccessToken().getJwtToken()\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            headers = {\n              Authorization: null\n            };\n            return [3\n            /*break*/\n            , 9];\n\n          case 9:\n            return [2\n            /*return*/\n            , headers];\n        }\n      });\n    });\n  };\n  /**\n   * to get the operation type\n   * @param operation\n   */\n\n\n  APIClass.prototype.getGraphqlOperationType = function (operation) {\n    var doc = parse(operation);\n    var operationType = doc.definitions[0].operation;\n    return operationType;\n  };\n  /**\n   * Executes a GraphQL operation\n   *\n   * @param {GraphQLOptions} GraphQL Options\n   * @returns {Promise<GraphQLResult> | Observable<object>}\n   */\n\n\n  APIClass.prototype.graphql = function (_a) {\n    var paramQuery = _a.query,\n        _b = _a.variables,\n        variables = _b === void 0 ? {} : _b,\n        authMode = _a.authMode;\n    var query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n    var _c = query.definitions.filter(function (def) {\n      return def.kind === 'OperationDefinition';\n    })[0],\n        operationDef = _c === void 0 ? {} : _c;\n    var operationType = operationDef.operation;\n\n    switch (operationType) {\n      case 'query':\n      case 'mutation':\n        return this._graphql({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        });\n\n      case 'subscription':\n        return this._graphqlSubscribe({\n          query: query,\n          variables: variables,\n          authMode: authMode\n        });\n    }\n\n    throw new Error(\"invalid operation type: \" + operationType);\n  };\n\n  APIClass.prototype._graphql = function (_a, additionalHeaders) {\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode;\n\n    if (additionalHeaders === void 0) {\n      additionalHeaders = {};\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, _h, _j, body, init, endpoint, error, response, err_1, errors;\n\n      var _k;\n\n      return __generator(this, function (_l) {\n        switch (_l.label) {\n          case 0:\n            if (!!this._api) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.createInstance()];\n\n          case 1:\n            _l.sent();\n\n            _l.label = 2;\n\n          case 2:\n            _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () {\n              return {};\n            } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n            _d = [{}];\n            _e = !customGraphqlEndpoint;\n            if (!_e) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode)];\n\n          case 3:\n            _e = _l.sent();\n            _l.label = 4;\n\n          case 4:\n            _f = [__assign.apply(void 0, _d.concat([_e]))];\n            _g = customGraphqlEndpoint;\n            if (!_g) return [3\n            /*break*/\n            , 8];\n            if (!customEndpointRegion) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._headerBasedAuth(authMode)];\n\n          case 5:\n            _h = _l.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            _h = {\n              Authorization: null\n            };\n            _l.label = 7;\n\n          case 7:\n            _g = _h;\n            _l.label = 8;\n\n          case 8:\n            _j = [__assign.apply(void 0, _f.concat([_g]))];\n            return [4\n            /*yield*/\n            , graphql_headers({\n              query: query,\n              variables: variables\n            })];\n\n          case 9:\n            headers = __assign.apply(void 0, [__assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), additionalHeaders]), !customGraphqlEndpoint && (_k = {}, _k[USER_AGENT_HEADER] = Constants.userAgent, _k)]);\n            body = {\n              query: print(query),\n              variables: variables\n            };\n            init = {\n              headers: headers,\n              body: body,\n              signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n              }\n            };\n            endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n            if (!endpoint) {\n              error = new GraphQLError('No graphql endpoint provided.');\n              throw {\n                data: {},\n                errors: [error]\n              };\n            }\n\n            _l.label = 10;\n\n          case 10:\n            _l.trys.push([10, 12,, 13]);\n\n            return [4\n            /*yield*/\n            , this._api.post(endpoint, init)];\n\n          case 11:\n            response = _l.sent();\n            return [3\n            /*break*/\n            , 13];\n\n          case 12:\n            err_1 = _l.sent();\n            response = {\n              data: {},\n              errors: [new GraphQLError(err_1.message)]\n            };\n            return [3\n            /*break*/\n            , 13];\n\n          case 13:\n            errors = response.errors;\n\n            if (errors && errors.length) {\n              throw response;\n            }\n\n            return [2\n            /*return*/\n            , response];\n        }\n      });\n    });\n  };\n\n  APIClass.prototype._graphqlSubscribe = function (_a) {\n    var _this = this;\n\n    var query = _a.query,\n        variables = _a.variables,\n        authMode = _a.authMode;\n\n    if (Amplify.PubSub && typeof Amplify.PubSub.subscribe === 'function') {\n      return new Observable(function (observer) {\n        var handle = null;\n\n        (function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var aws_appsync_authenticationType, authenticationType, additionalheaders, subscription, newSubscriptions_1, newTopics, observable, error_8;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  aws_appsync_authenticationType = this._options.aws_appsync_authenticationType;\n                  authenticationType = authMode || aws_appsync_authenticationType;\n                  additionalheaders = __assign({}, authenticationType === 'API_KEY' ? {\n                    'x-amz-subscriber-id': this.clientIdentifier\n                  } : {});\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 3,, 4]);\n\n                  return [4\n                  /*yield*/\n                  , this._graphql({\n                    query: query,\n                    variables: variables,\n                    authMode: authMode\n                  }, additionalheaders)];\n\n                case 2:\n                  subscription = _a.sent().extensions.subscription;\n                  newSubscriptions_1 = subscription.newSubscriptions;\n                  newTopics = Object.getOwnPropertyNames(newSubscriptions_1).map(function (p) {\n                    return newSubscriptions_1[p].topic;\n                  });\n                  observable = Amplify.PubSub.subscribe(newTopics, __assign(__assign({}, subscription), {\n                    provider: INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER\n                  }));\n                  handle = observable.subscribe({\n                    next: function next(data) {\n                      return observer.next(data);\n                    },\n                    complete: function complete() {\n                      return observer.complete();\n                    },\n                    error: function error(data) {\n                      var error = __assign({}, data);\n\n                      if (!error.errors) {\n                        error.errors = [__assign({}, new GraphQLError('Network Error'))];\n                      }\n\n                      observer.error(error);\n                    }\n                  });\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case 3:\n                  error_8 = _a.sent();\n                  observer.error(error_8);\n                  return [3\n                  /*break*/\n                  , 4];\n\n                case 4:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        })();\n\n        return function () {\n          if (handle) {\n            handle.unsubscribe();\n          }\n        };\n      });\n    } else {\n      logger.debug('No pubsub module applied for subscription');\n      throw new Error('No pubsub module applied for subscription');\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  APIClass.prototype._ensureCredentials = function () {\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for api', cred);\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n\n  return APIClass;\n}();\n\nexport default APIClass;","map":{"version":3,"mappings":"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","names":["GraphQLError","print","parse","Observable","RestClient","RestClass","Amplify","ConsoleLogger","Logger","Credentials","Constants","Auth","Cache","INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER","v4","uuid","USER_AGENT_HEADER","logger","graphqlOperation","query","variables","options","PubSub","_options","debug","APIClass","_a","_b","API","otherOptions","opt","custom","endpoints","JSON","Object","assign","region","header","Array","isArray","forEach","endpoint","custom_header","warn","name","undefined","graphql_headers","createInstance","_api","Promise","reject","apiName","path","init","error_1","length","get","error_2","post","error_3","put","error_4","patch","error_5","del","error_6","head","error_7","defaultAuthenticationType","aws_appsync_authenticationType","apiKey","authenticationType","headers","Error","Authorization","_ensureCredentials","credentialsOK","_c","getItem","federatedInfo","token","currentSession","session","getAccessToken","getJwtToken","operation","doc","operationType","paramQuery","authMode","_graphql","_graphqlSubscribe","additionalHeaders","_l","appSyncGraphqlEndpoint","customGraphqlEndpoint","customEndpointRegion","_e","_headerBasedAuth","_g","_h","_k","userAgent","body","signerServiceInfo","service","error","data","errors","response","err_1","message","subscribe","handle","additionalheaders","clientIdentifier","subscription","extensions","newSubscriptions_1","newTopics","getOwnPropertyNames","map","p","topic","observable","__assign","provider","next","complete","observer","error_8","unsubscribe","then","credentials","cred","shear","catch","err"],"sourceRoot":"","sources":["../src/API.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}