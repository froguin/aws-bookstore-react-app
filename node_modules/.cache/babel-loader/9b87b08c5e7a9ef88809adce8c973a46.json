{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbstractPredictionsProvider } from '.';\nimport { isInterpretTextInput } from '../Predictions';\n\nvar AbstractInterpretPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AbstractInterpretPredictionsProvider, _super);\n\n  function AbstractInterpretPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractInterpretPredictionsProvider.prototype.getCategory = function () {\n    return 'Interpret';\n  };\n\n  AbstractInterpretPredictionsProvider.prototype.interpret = function (input) {\n    if (isInterpretTextInput(input)) {\n      return this.interpretText(input);\n    }\n  };\n\n  AbstractInterpretPredictionsProvider.prototype.interpretText = function (input) {\n    throw new Error('interpretText is not implement by this provider');\n  };\n\n  return AbstractInterpretPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AbstractInterpretPredictionsProvider };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,2BAAT,QAA4C,GAA5C;AACA,SAGCC,oBAHD,QAIO,gBAJP;;AAMA;AAAA;AAAA;AAAmEC;;AAAnE;;AAgBC;;AAfAC;AACC,WAAO,WAAP;AACA,GAFD;;AAIAA,uEAAUC,KAAV,EAAmC;AAClC,QAAIH,oBAAoB,CAACG,KAAD,CAAxB,EAAiC;AAChC,aAAO,KAAKC,aAAL,CAAmBD,KAAnB,CAAP;AACA;AACD,GAJD;;AAMUD,iEAAV,UACCC,KADD,EAC0B;AAEzB,UAAM,IAAIE,KAAJ,CAAU,iDAAV,CAAN;AACA,GAJS;;AAKX;AAhBA,EAAmEN,2BAAnE","names":["AbstractPredictionsProvider","isInterpretTextInput","__extends","AbstractInterpretPredictionsProvider","input","interpretText","Error"],"sourceRoot":"","sources":["../../../src/types/Providers/AbstractInterpretPredictionsProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}