{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar lists = [];\n\nvar MethodEmbed =\n/** @class */\nfunction () {\n  function MethodEmbed(context, methodName) {\n    this.context = context;\n    this.methodName = methodName;\n    this._originalMethod = context[methodName].bind(context);\n  }\n\n  MethodEmbed.add = function (context, methodName, methodOverride) {\n    getInstance(context, methodName).set(methodOverride);\n  };\n\n  MethodEmbed.remove = function (context, methodName) {\n    getInstance(context, methodName).remove();\n  };\n\n  MethodEmbed.prototype.set = function (methodOverride) {\n    var _this = this;\n\n    this.context[this.methodName] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodOverride(_this._originalMethod.apply(_this, args));\n    };\n  };\n\n  MethodEmbed.prototype.remove = function () {\n    this.context[this.methodName] = this._originalMethod;\n  };\n\n  return MethodEmbed;\n}();\n\nexport default MethodEmbed;\n\nfunction getInstance(context, methodName) {\n  var instance = lists.filter(function (h) {\n    return h.context === context && h.methodName === methodName;\n  })[0];\n\n  if (!instance) {\n    instance = new MethodEmbed(context, methodName);\n    lists.push(instance);\n  }\n\n  return instance;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;AAaA,IAAMA,KAAK,GAAkB,EAA7B;;AAEA;AAAA;AAAA;AAcC,uBAAYC,OAAZ,EAAqBC,UAArB,EAA+B;AAC9B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AAEA,SAAKC,eAAL,GAAuBF,OAAO,CAACC,UAAD,CAAP,CAAoBE,IAApB,CAAyBH,OAAzB,CAAvB;AACA;;AAbMI,oBAAP,UAAWJ,OAAX,EAAoBC,UAApB,EAAgCI,cAAhC,EAA8C;AAC7CC,eAAW,CAACN,OAAD,EAAUC,UAAV,CAAX,CAAiCM,GAAjC,CAAqCF,cAArC;AACA,GAFM;;AAIAD,uBAAP,UAAcJ,OAAd,EAAuBC,UAAvB,EAAiC;AAChCK,eAAW,CAACN,OAAD,EAAUC,UAAV,CAAX,CAAiCO,MAAjC;AACA,GAFM;;AAWAJ,8BAAP,UAAWC,cAAX,EAAyB;AAAzB;;AACC,SAAKL,OAAL,CAAa,KAAKC,UAAlB,IAAgC;AAAC;;WAAA,yCAAO;AAAPQ;;;AAChC,aAAOJ,cAAc,CAACK,KAAI,CAACR,eAAL,CAAoBS,KAApB,QAAwBF,IAAxB,CAAD,CAArB;AACA,KAFD;AAGA,GAJM;;AAMAL,iCAAP;AACC,SAAKJ,OAAL,CAAa,KAAKC,UAAlB,IAAgC,KAAKC,eAArC;AACA,GAFM;;AAGR;AAAC,CA9BD;;;;AAgCA,SAASI,WAAT,CAAqBN,OAArB,EAA8BC,UAA9B,EAAwC;AACvC,MAAIW,QAAQ,GAAGb,KAAK,CAACc,MAAN,CACd,aAAC;AAAI,YAAC,CAACb,OAAF,KAAcA,OAAd,IAAyBc,CAAC,CAACb,UAAF,KAAiBA,UAA1C;AAAoD,GAD3C,EAEb,CAFa,CAAf;;AAIA,MAAI,CAACW,QAAL,EAAe;AACdA,YAAQ,GAAG,IAAIR,WAAJ,CAAgBJ,OAAhB,EAAyBC,UAAzB,CAAX;AACAF,SAAK,CAACgB,IAAN,CAAWH,QAAX;AACA;;AAED,SAAOA,QAAP;AACA","names":["lists","context","methodName","_originalMethod","bind","MethodEmbed","methodOverride","getInstance","set","remove","args","_this","apply","instance","filter","h","push"],"sourceRoot":"","sources":["../../src/utils/MethodEmbed.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}