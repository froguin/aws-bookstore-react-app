{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser } from '@aws-amplify/core';\nimport * as S3 from 'aws-sdk/clients/s3';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchStorageEvent = function dispatchStorageEvent(track, event, attrs, metrics, message) {\n  if (track) {\n    Hub.dispatch('storage', {\n      event: event,\n      data: {\n        attrs: attrs,\n        metrics: metrics\n      },\n      message: message\n    }, 'Storage', AMPLIFY_SYMBOL);\n  }\n};\n\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    this._config = config ? config : {};\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n  /**\n   * Get a presigned URL of the file or the object data when download:true\n   *\n   * @param {String} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\n   * @return - A promise resolves to Amazon S3 presigned URL on success\n   */\n\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, track, expires, prefix, final_key, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, track = opt.track, expires = opt.expires;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n\n            if (download === true) {\n              return [2\n              /*return*/\n              , new Promise(function (res, rej) {\n                s3.getObject(params, function (err, data) {\n                  if (err) {\n                    dispatchStorageEvent(track, 'download', {\n                      method: 'get',\n                      result: 'failed'\n                    }, null, \"Download failed with \" + err.message);\n                    rej(err);\n                  } else {\n                    dispatchStorageEvent(track, 'download', {\n                      method: 'get',\n                      result: 'success'\n                    }, {\n                      fileSize: Number(data.Body['length'])\n                    }, \"Download success for \" + key);\n                    res(data);\n                  }\n                });\n              })];\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              try {\n                var url = s3.getSignedUrl('getObject', params);\n                dispatchStorageEvent(track, 'getSignedUrl', {\n                  method: 'get',\n                  result: 'success'\n                }, null, \"Signed URL: \" + url);\n                res(url);\n              } catch (e) {\n                logger.warn('get signed url error', e);\n                dispatchStorageEvent(track, 'getSignedUrl', {\n                  method: 'get',\n                  result: 'failed'\n                }, null, \"Could not get a signed URL for \" + key);\n                rej(e);\n              }\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param {String} key - key of the object\n   * @param {Object} object - File to be put in Amazon S3 bucket\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n   *  progressCallback: function }\n   * @return - promise resolves to object on success\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, cacheControl, expires, metadata, tagging, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, s3, params, upload, data, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n            contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging;\n            serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            type = contentType ? contentType : 'binary/octet-stream';\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('put ' + key + ' to ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key,\n              Body: object,\n              ContentType: type\n            };\n\n            if (cacheControl) {\n              params.CacheControl = cacheControl;\n            }\n\n            if (contentDisposition) {\n              params.ContentDisposition = contentDisposition;\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            if (metadata) {\n              params.Metadata = metadata;\n            }\n\n            if (tagging) {\n              params.Tagging = tagging;\n            }\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n\n              if (SSECustomerAlgorithm) {\n                params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n              }\n\n              if (SSECustomerKey) {\n                params.SSECustomerKey = SSECustomerKey;\n              }\n\n              if (SSECustomerKeyMD5) {\n                params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n              }\n\n              if (SSEKMSKeyId) {\n                params.SSEKMSKeyId = SSEKMSKeyId;\n              }\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            upload = s3.upload(params).on('httpUploadProgress', function (progress) {\n              if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                  progressCallback(progress);\n                } else {\n                  logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n                }\n              }\n            });\n            return [4\n            /*yield*/\n            , upload.promise()];\n\n          case 3:\n            data = _a.sent();\n            logger.debug('upload result', data);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'success'\n            }, null, \"Upload success for \" + key);\n            return [2\n            /*return*/\n            , {\n              key: data.Key.substr(prefix.length)\n            }];\n\n          case 4:\n            e_1 = _a.sent();\n            logger.warn('error uploading', e_1);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'failed'\n            }, null, \"Error uploading \" + key);\n            throw e_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Remove the object for specified key\n   * @param {String} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              s3.deleteObject(params, function (err, data) {\n                if (err) {\n                  dispatchStorageEvent(track, 'delete', {\n                    method: 'remove',\n                    result: 'failed'\n                  }, null, \"Deletion of \" + key + \" failed with \" + err);\n                  rej(err);\n                } else {\n                  dispatchStorageEvent(track, 'delete', {\n                    method: 'remove',\n                    result: 'success'\n                  }, null, \"Deleted \" + key + \" successfully\");\n                  res(data);\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {String} path - the path that contains objects\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves to list of keys for all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_path, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            s3 = this._createS3(opt);\n            logger.debug('list ' + path + ' from ' + final_path);\n            params = {\n              Bucket: bucket,\n              Prefix: final_path\n            };\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              s3.listObjects(params, function (err, data) {\n                if (err) {\n                  logger.warn('list error', err);\n                  dispatchStorageEvent(track, 'list', {\n                    method: 'list',\n                    result: 'failed'\n                  }, null, \"Listing items failed: \" + err.message);\n                  rej(err);\n                } else {\n                  var list = data.Contents.map(function (item) {\n                    return {\n                      key: item.Key.substr(prefix.length),\n                      eTag: item.ETag,\n                      lastModified: item.LastModified,\n                      size: item.Size\n                    };\n                  });\n                  dispatchStorageEvent(track, 'list', {\n                    method: 'list',\n                    result: 'success'\n                  }, null, list.length + \" items returned from list operation\");\n                  logger.debug('list', list);\n                  res(list);\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for storage', cred);\n      _this._config.credentials = cred;\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._createS3 = function (config) {\n    var bucket = config.bucket,\n        region = config.region,\n        credentials = config.credentials,\n        dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n    var localTestingConfig = {};\n\n    if (dangerouslyConnectToHttpEndpointForTesting) {\n      localTestingConfig = {\n        endpoint: localTestingStorageEndpoint,\n        s3BucketEndpoint: true,\n        s3ForcePathStyle: true\n      };\n    }\n\n    return new S3(__assign({\n      apiVersion: '2006-03-01',\n      params: {\n        Bucket: bucket\n      },\n      signatureVersion: 'v4',\n      region: region,\n      credentials: credentials\n    }, localTestingConfig));\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport default AWSS3Provider;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","Hub","Credentials","Parser","S3","logger","AMPLIFY_SYMBOL","Symbol","for","dispatchStorageEvent","track","event","attrs","metrics","message","dispatch","data","localTestingStorageEndpoint","config","_config","debug","AWSS3Provider","CATEGORY","PROVIDER_NAME","amplifyConfig","parseMobilehubConfig","Object","assign","Storage","bucket","key","_ensureCredentials","credentialsOK","_a","Promise","reject","opt","download","expires","prefix","_prefix","final_key","s3","_createS3","params","Bucket","Key","res","rej","getObject","err","method","result","fileSize","Number","Body","Expires","url","getSignedUrl","e","warn","object","progressCallback","contentType","contentDisposition","cacheControl","metadata","tagging","serverSideEncryption","SSECustomerAlgorithm","SSECustomerKey","SSECustomerKeyMD5","SSEKMSKeyId","type","ContentType","CacheControl","ContentDisposition","Metadata","Tagging","ServerSideEncryption","upload","on","progress","promise","substr","length","e_1","deleteObject","path","final_path","Prefix","listObjects","list","Contents","map","item","eTag","ETag","lastModified","LastModified","size","Size","get","then","credentials","cred","shear","_this","catch","level","customPrefix","identityId","privatePath","private","undefined","protectedPath","protected","publicPath","public","region","dangerouslyConnectToHttpEndpointForTesting","localTestingConfig","endpoint","s3BucketEndpoint","s3ForcePathStyle","__assign","apiVersion","signatureVersion"],"sourceRoot":"","sources":["../../src/Providers/AWSS3Provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}