{"ast":null,"code":"/*\n * Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AuthError');\nvar DEFAULT_MSG = 'Authentication Error';\n\nvar AuthError =\n/** @class */\nfunction (_super) {\n  __extends(AuthError, _super);\n\n  function AuthError(type) {\n    var _this = this;\n\n    var _a = authErrorMessages[type],\n        message = _a.message,\n        log = _a.log;\n    _this = _super.call(this, message) || this; // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n\n    _this.constructor = AuthError;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.name = 'AuthError';\n    _this.log = log || message;\n    logger.error(_this.log);\n    return _this;\n  }\n\n  return AuthError;\n}(Error);\n\nexport { AuthError };\n\nvar NoUserPoolError =\n/** @class */\nfunction (_super) {\n  __extends(NoUserPoolError, _super);\n\n  function NoUserPoolError(type) {\n    var _this = _super.call(this, type) || this; // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n\n\n    _this.constructor = NoUserPoolError;\n    Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n    _this.name = 'NoUserPoolError';\n    return _this;\n  }\n\n  return NoUserPoolError;\n}(AuthError);\n\nexport { NoUserPoolError };\nexport var authErrorMessages = {\n  noConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of aws-amplify or amplify packages in your node_modules.\\n                Try deleting your node_modules folder and reinstalling the dependencies with `yarn install`\\n        \"\n  },\n  missingAuthConfig: {\n    message: DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties. \\n            Did you run `amplify push` after adding auth via `amplify add auth`?\\n            See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n        \"\n  },\n  emptyUsername: {\n    message: 'Username cannot be empty'\n  },\n  // TODO: should include a list of valid sign-in types\n  invalidUsername: {\n    message: 'The username should either be a string or one of the sign in types'\n  },\n  emptyPassword: {\n    message: 'Password cannot be empty'\n  },\n  emptyCode: {\n    message: 'Confirmation code cannot be empty'\n  },\n  signUpError: {\n    message: 'Error creating account',\n    log: 'The first parameter should either be non-null string or object'\n  },\n  noMFA: {\n    message: 'No valid MFA method provided'\n  },\n  invalidMFA: {\n    message: 'Invalid MFA type'\n  },\n  emptyChallengeResponse: {\n    message: 'Challenge response cannot be empty'\n  },\n  noUserSession: {\n    message: 'Failed to get the session because the user is empty'\n  },\n  default: {\n    message: DEFAULT_MSG\n  }\n};","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,mBAAxC;AAEA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,WAAX,CAAf;AACA,IAAME,WAAW,GAAG,sBAApB;;AAEA;AAAA;AAAA;AAA+BC;;AAE9B,qBAAYC,IAAZ,EAAgC;AAAhC;;AACO;AAAA,QAAEC,oBAAF;AAAA,QAAWC,YAAX;AACNC,8BAAMF,OAAN,KAAc,IAAd,CAF+B,CAI/B;AACA;;AACAE,SAAI,CAACC,WAAL,GAAmBC,SAAnB;AACAC,UAAM,CAACC,cAAP,CAAsBJ,KAAtB,EAA4BE,SAAS,CAACG,SAAtC;AAEAL,SAAI,CAACM,IAAL,GAAY,WAAZ;AACAN,SAAI,CAACD,GAAL,GAAWA,GAAG,IAAID,OAAlB;AAEAJ,UAAM,CAACa,KAAP,CAAaP,KAAI,CAACD,GAAlB;;AACA;;AACF;AAhBA,EAA+BS,KAA/B;;;;AAkBA;AAAA;AAAA;AAAqCZ;;AACpC,2BAAYC,IAAZ,EAAgC;AAAhC,gBACCY,kBAAMZ,IAAN,KAAW,IADZ,CAAgC,CAG/B;AACA;;;AACAG,SAAI,CAACC,WAAL,GAAmBS,eAAnB;AACAP,UAAM,CAACC,cAAP,CAAsBJ,KAAtB,EAA4BU,eAAe,CAACL,SAA5C;AAEAL,SAAI,CAACM,IAAL,GAAY,iBAAZ;;AACA;;AACF;AAXA,EAAqCJ,SAArC;;;AAaA,OAAO,IAAMS,iBAAiB,GAAsB;AACnDC,UAAQ,EAAE;AACTd,WAAO,EAAEH,WADA;AAETI,OAAG,EAAE;AAFI,GADyC;AAcnDc,mBAAiB,EAAE;AAClBf,WAAO,EAAEH,WADS;AAElBI,OAAG,EAAE;AAFa,GAdgC;AAuBnDe,eAAa,EAAE;AACdhB,WAAO,EAAE;AADK,GAvBoC;AA0BnD;AACAiB,iBAAe,EAAE;AAChBjB,WAAO,EACN;AAFe,GA3BkC;AA+BnDkB,eAAa,EAAE;AACdlB,WAAO,EAAE;AADK,GA/BoC;AAkCnDmB,WAAS,EAAE;AACVnB,WAAO,EAAE;AADC,GAlCwC;AAqCnDoB,aAAW,EAAE;AACZpB,WAAO,EAAE,wBADG;AAEZC,OAAG,EAAE;AAFO,GArCsC;AAyCnDoB,OAAK,EAAE;AACNrB,WAAO,EAAE;AADH,GAzC4C;AA4CnDsB,YAAU,EAAE;AACXtB,WAAO,EAAE;AADE,GA5CuC;AA+CnDuB,wBAAsB,EAAE;AACvBvB,WAAO,EAAE;AADc,GA/C2B;AAkDnDwB,eAAa,EAAE;AACdxB,WAAO,EAAE;AADK,GAlDoC;AAqDnDyB,SAAO,EAAE;AACRzB,WAAO,EAAEH;AADD;AArD0C,CAA7C","names":["ConsoleLogger","Logger","logger","DEFAULT_MSG","__extends","type","message","log","_this","constructor","AuthError","Object","setPrototypeOf","prototype","name","error","Error","_super","NoUserPoolError","authErrorMessages","noConfig","missingAuthConfig","emptyUsername","invalidUsername","emptyPassword","emptyCode","signUpError","noMFA","invalidMFA","emptyChallengeResponse","noUserSession","default"],"sourceRoot":"","sources":["../src/Errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}