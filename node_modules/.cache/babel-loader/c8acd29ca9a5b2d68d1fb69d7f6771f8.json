{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\n\nvar SumerianProvider =\n/** @class */\nfunction (_super) {\n  __extends(SumerianProvider, _super);\n\n  function SumerianProvider(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _super.call(this, options) || this;\n  }\n\n  SumerianProvider.prototype.getProviderName = function () {\n    return 'SumerianProvider';\n  };\n\n  SumerianProvider.prototype.loadScript = function (url) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , new Promise(function (resolve, reject) {\n          var scriptElement = document.createElement('script');\n          scriptElement.src = url;\n          scriptElement.addEventListener('load', function (event) {\n            resolve();\n          });\n          scriptElement.addEventListener('error', function (event) {\n            reject(new Error(\"Failed to load script: \" + url));\n          });\n          document.head.appendChild(scriptElement);\n        })];\n      });\n    });\n  };\n\n  SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n    return __awaiter(this, void 0, void 0, function () {\n      var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _i, _a, warning;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!sceneName) {\n              errorMsg = 'No scene name passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            if (!domElementId) {\n              errorMsg = 'No dom element id passed into loadScene';\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n\n            element = document.getElementById(domElementId);\n\n            if (!element) {\n              errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n              logger.error(errorMsg);\n              throw new XRNoDomElement(errorMsg);\n            }\n\n            scene = this.getScene(sceneName);\n\n            if (!scene.sceneConfig) {\n              errorMsg = \"No scene config configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            sceneUrl = scene.sceneConfig.url;\n            sceneId = scene.sceneConfig.sceneId;\n\n            if (scene.sceneConfig.hasOwnProperty('region')) {\n              // Use the scene region on the Sumerian scene configuration\n              sceneRegion = scene.sceneConfig.region;\n            } else if (this.options.hasOwnProperty('region')) {\n              // Use the scene region on the XR category configuration\n              sceneRegion = this.options.region;\n            } else {\n              errorMsg = \"No region configured for scene: \" + sceneName;\n              logger.error(errorMsg);\n              throw new XRSceneLoadFailure(errorMsg);\n            }\n\n            awsSDKConfigOverride = {\n              region: sceneRegion,\n              // This is passed to the AWS clients created in\n              // Sumerian's AwsSystem\n              // This helps other services(like Lex and Polly) to track\n              // traffic coming from Sumerian scenes embedded with Amplify\n              customUserAgent: Constants.userAgent + \"-SumerianScene\"\n            };\n            fetchOptions = {\n              headers: {\n                // This sets the AWS user agent string\n                // So the Sumerian service knows this request is\n                // from Amplify\n                'X-Amz-User-Agent': Constants.userAgent\n              }\n            };\n            url = sceneUrl;\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Credentials.get()];\n\n          case 2:\n            credentials = _b.sent();\n            awsSDKConfigOverride['credentials'] = credentials;\n            accessInfo = {\n              secret_key: credentials.secretAccessKey,\n              access_key: credentials.accessKeyId,\n              session_token: credentials.sessionToken\n            };\n            serviceInfo = {\n              region: sceneRegion,\n              service: SUMERIAN_SERVICE_NAME\n            };\n            request = Signer.sign({\n              method: 'GET',\n              url: sceneUrl\n            }, accessInfo, serviceInfo);\n            fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n            url = request.url;\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _b.sent();\n            logger.debug('No credentials available, the request will be unsigned');\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [4\n            /*yield*/\n            , fetch(url, fetchOptions)];\n\n          case 5:\n            apiResponse = _b.sent();\n            return [4\n            /*yield*/\n            , apiResponse.json()];\n\n          case 6:\n            apiResponseJson = _b.sent();\n\n            if (apiResponse.status === 403) {\n              if (apiResponseJson.message) {\n                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n              } else {\n                logger.error(\"Failure to authenticate user\");\n                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n              }\n            }\n\n            sceneBundleData = apiResponseJson.bundleData[sceneId];\n            return [4\n            /*yield*/\n            , fetch(sceneBundleData.url, {\n              headers: sceneBundleData.headers\n            })];\n\n          case 7:\n            sceneBundle = _b.sent();\n            return [4\n            /*yield*/\n            , sceneBundle.json()];\n\n          case 8:\n            sceneBundleJson = _b.sent();\n            _b.label = 9;\n\n          case 9:\n            _b.trys.push([9, 11,, 12]); // Load the Sumerian bootstrapper script into the DOM\n\n\n            return [4\n            /*yield*/\n            , this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n\n          case 10:\n            // Load the Sumerian bootstrapper script into the DOM\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 12];\n\n          case 11:\n            error_1 = _b.sent();\n            logger.error(error_1);\n            throw new XRSceneLoadFailure(error_1);\n\n          case 12:\n            progressCallback = sceneOptions.progressCallback ? sceneOptions.progressCallback : undefined;\n            publishParamOverrides = scene.publishParamOverrides ? scene.publishParamOverrides : undefined;\n            sceneLoadParams = {\n              element: element,\n              sceneId: sceneId,\n              sceneBundle: sceneBundleJson,\n              apiResponse: apiResponseJson,\n              progressCallback: progressCallback,\n              publishParamOverrides: publishParamOverrides,\n              awsSDKConfigOverride: awsSDKConfigOverride\n            };\n            return [4\n            /*yield*/\n            , window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n\n          case 13:\n            sceneController = _b.sent();\n            scene.sceneController = sceneController;\n            scene.isLoaded = true; // Log scene warnings\n\n            for (_i = 0, _a = sceneController.sceneLoadWarnings; _i < _a.length; _i++) {\n              warning = _a[_i];\n              logger.warn(\"loadScene warning: \" + warning);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n    var scene = this.getScene(sceneName);\n    return scene.isLoaded || false;\n  };\n\n  SumerianProvider.prototype.getScene = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n\n    if (!sceneName) {\n      var errorMsg = 'No scene name was passed';\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    if (!this.options.scenes[sceneName]) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    return this.options.scenes[sceneName];\n  };\n\n  SumerianProvider.prototype.getSceneController = function (sceneName) {\n    if (!this.options.scenes) {\n      var errorMsg = 'No scenes were defined in the configuration';\n      logger.error(errorMsg);\n      throw new XRNoSceneConfiguredError(errorMsg);\n    }\n\n    var scene = this.options.scenes[sceneName];\n\n    if (!scene) {\n      var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n      logger.error(errorMsg);\n      throw new XRSceneNotFoundError(errorMsg);\n    }\n\n    var sceneController = scene.sceneController;\n\n    if (!sceneController) {\n      var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n      logger.error(errorMsg);\n      throw new XRSceneNotLoadedError(errorMsg);\n    }\n\n    return sceneController;\n  };\n\n  SumerianProvider.prototype.isVRCapable = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrCapable;\n  };\n\n  SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.vrPresentationActive;\n  };\n\n  SumerianProvider.prototype.start = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.start();\n  };\n\n  SumerianProvider.prototype.enterVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enterVR();\n  };\n\n  SumerianProvider.prototype.exitVR = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.exitVR();\n  };\n\n  SumerianProvider.prototype.isMuted = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    return sceneController.muted;\n  };\n\n  SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.muted = muted;\n  };\n\n  SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.on(eventName, eventHandler);\n  };\n\n  SumerianProvider.prototype.enableAudio = function (sceneName) {\n    var sceneController = this.getSceneController(sceneName);\n    sceneController.enableAudio();\n  };\n\n  return SumerianProvider;\n}(AbstractXRProvider);\n\nexport { SumerianProvider };","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","Signer","Credentials","Constants","AbstractXRProvider","XRNoSceneConfiguredError","XRSceneNotFoundError","XRSceneNotLoadedError","XRNoDomElement","XRSceneLoadFailure","SUMERIAN_SERVICE_NAME","logger","__extends","options","_super","SumerianProvider","url","Promise","resolve","reject","scriptElement","document","createElement","src","addEventListener","Error","head","appendChild","sceneName","domElementId","sceneOptions","errorMsg","error","element","getElementById","scene","getScene","sceneConfig","sceneUrl","sceneId","hasOwnProperty","sceneRegion","region","awsSDKConfigOverride","customUserAgent","userAgent","fetchOptions","headers","get","credentials","_b","accessInfo","secret_key","secretAccessKey","access_key","accessKeyId","session_token","sessionToken","serviceInfo","service","request","sign","method","__assign","debug","fetch","apiResponse","json","apiResponseJson","status","message","sceneBundleData","bundleData","sceneBundle","sceneBundleJson","loadScript","bootstrapperUrl","error_1","progressCallback","undefined","publishParamOverrides","sceneLoadParams","window","SumerianBootstrapper","loadScene","sceneController","isLoaded","_a","sceneLoadWarnings","_i","warning","warn","scenes","getSceneController","vrCapable","vrPresentationActive","start","enterVR","exitVR","muted","eventName","eventHandler","on","enableAudio"],"sourceRoot":"","sources":["../../src/Providers/SumerianProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}