{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { isUsernamePasswordOpts, isCognitoHostedOpts, isFederatedSignInOptions, isFederatedSignInOptionsCustom } from './types';\nimport { AWS, ConsoleLogger as Logger, Constants, Hub, JS, Parser, Credentials, StorageHelper } from '@aws-amplify/core';\nimport { CookieStorage, CognitoUserPool, AuthenticationDetails, CognitoUser, CognitoUserSession, CognitoUserAttribute, CognitoIdToken, CognitoRefreshToken, CognitoAccessToken } from 'amazon-cognito-identity-js';\nimport { parse } from 'url';\nimport OAuth from './OAuth/OAuth';\nimport { default as urlListener } from './urlListener';\nimport { AuthError, NoUserPoolError } from './Errors';\nimport { AuthErrorTypes } from './types/Auth';\nvar logger = new Logger('AuthClass');\nvar USER_ADMIN_SCOPE = 'aws.cognito.signin.user.admin';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchAuthEvent = function dispatchAuthEvent(event, data, message) {\n  Hub.dispatch('auth', {\n    event: event,\n    data: data,\n    message: message\n  }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport var CognitoHostedUIIdentityProvider;\n\n(function (CognitoHostedUIIdentityProvider) {\n  CognitoHostedUIIdentityProvider[\"Cognito\"] = \"COGNITO\";\n  CognitoHostedUIIdentityProvider[\"Google\"] = \"Google\";\n  CognitoHostedUIIdentityProvider[\"Facebook\"] = \"Facebook\";\n  CognitoHostedUIIdentityProvider[\"Amazon\"] = \"LoginWithAmazon\";\n})(CognitoHostedUIIdentityProvider || (CognitoHostedUIIdentityProvider = {}));\n/**\n * Provide authentication steps\n */\n\n\nvar AuthClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Auth with AWS configurations\n   * @param {Object} config - Configuration of the Auth\n   */\n  function AuthClass(config) {\n    var _this = this;\n\n    this.userPool = null;\n    this.user = null;\n    this.configure(config);\n    this.currentUserCredentials = this.currentUserCredentials.bind(this);\n\n    if (AWS.config) {\n      AWS.config.update({\n        customUserAgent: Constants.userAgent\n      });\n    } else {\n      logger.warn('No AWS.config');\n    }\n\n    Hub.listen('auth', function (_a) {\n      var payload = _a.payload;\n      var event = payload.event;\n\n      switch (event) {\n        case 'signIn':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'false');\n\n          break;\n\n        case 'signOut':\n          _this._storage.removeItem('amplify-signin-with-hostedUI');\n\n          break;\n\n        case 'cognitoHostedUI':\n          _this._storage.setItem('amplify-signin-with-hostedUI', 'true');\n\n          break;\n      }\n    });\n  }\n\n  AuthClass.prototype.getModuleName = function () {\n    return 'Auth';\n  };\n\n  AuthClass.prototype.configure = function (config) {\n    var _this = this;\n\n    if (!config) return this._config || {};\n    logger.debug('configure Auth');\n    var conf = Object.assign({}, this._config, Parser.parseMobilehubConfig(config).Auth, config);\n    this._config = conf;\n    var _a = this._config,\n        userPoolId = _a.userPoolId,\n        userPoolWebClientId = _a.userPoolWebClientId,\n        cookieStorage = _a.cookieStorage,\n        oauth = _a.oauth,\n        region = _a.region,\n        identityPoolId = _a.identityPoolId,\n        mandatorySignIn = _a.mandatorySignIn,\n        refreshHandlers = _a.refreshHandlers,\n        identityPoolRegion = _a.identityPoolRegion,\n        clientMetadata = _a.clientMetadata;\n\n    if (!this._config.storage) {\n      // backward compatbility\n      if (cookieStorage) this._storage = new CookieStorage(cookieStorage);else {\n        this._storage = new StorageHelper().getStorage();\n      }\n    } else {\n      if (!this._isValidAuthStorage(this._config.storage)) {\n        logger.error('The storage in the Auth config is not valid!');\n        throw new Error('Empty storage object');\n      }\n\n      this._storage = this._config.storage;\n    }\n\n    this._storageSync = Promise.resolve();\n\n    if (typeof this._storage['sync'] === 'function') {\n      this._storageSync = this._storage['sync']();\n    }\n\n    if (userPoolId) {\n      var userPoolData = {\n        UserPoolId: userPoolId,\n        ClientId: userPoolWebClientId\n      };\n      userPoolData.Storage = this._storage;\n      this.userPool = new CognitoUserPool(userPoolData);\n    }\n\n    Credentials.configure({\n      mandatorySignIn: mandatorySignIn,\n      region: identityPoolRegion || region,\n      userPoolId: userPoolId,\n      identityPoolId: identityPoolId,\n      refreshHandlers: refreshHandlers,\n      storage: this._storage\n    }); // initiailize cognitoauth client if hosted ui options provided\n    // to keep backward compatibility:\n\n    var cognitoHostedUIConfig = oauth ? isCognitoHostedOpts(this._config.oauth) ? oauth : oauth.awsCognito : undefined;\n\n    if (cognitoHostedUIConfig) {\n      var cognitoAuthParams = Object.assign({\n        cognitoClientId: userPoolWebClientId,\n        UserPoolId: userPoolId,\n        domain: cognitoHostedUIConfig['domain'],\n        scopes: cognitoHostedUIConfig['scope'],\n        redirectSignIn: cognitoHostedUIConfig['redirectSignIn'],\n        redirectSignOut: cognitoHostedUIConfig['redirectSignOut'],\n        responseType: cognitoHostedUIConfig['responseType'],\n        Storage: this._storage,\n        urlOpener: cognitoHostedUIConfig['urlOpener'],\n        clientMetadata: clientMetadata\n      }, cognitoHostedUIConfig['options']);\n      this._oAuthHandler = new OAuth({\n        scopes: cognitoAuthParams.scopes,\n        config: cognitoAuthParams,\n        cognitoClientId: cognitoAuthParams.cognitoClientId\n      }); // **NOTE** - Remove this in a future major release as it is a breaking change\n\n      urlListener(function (_a) {\n        var url = _a.url;\n\n        _this._handleAuthResponse(url);\n      });\n    }\n\n    dispatchAuthEvent('configured', null, \"The Auth category has been configured successfully\");\n    return this._config;\n  };\n  /**\n   * Sign up with username, password and other attrbutes like phone, email\n   * @param {String | object} params - The user attirbutes used for signin\n   * @param {String[]} restOfAttrs - for the backward compatability\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.signUp = function (params) {\n    var _this = this;\n\n    var restOfAttrs = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      restOfAttrs[_i - 1] = arguments[_i];\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var attributes = [];\n    var validationData = null;\n    var clientMetadata;\n\n    if (params && typeof params === 'string') {\n      username = params;\n      password = restOfAttrs ? restOfAttrs[0] : null;\n      var email = restOfAttrs ? restOfAttrs[1] : null;\n      var phone_number = restOfAttrs ? restOfAttrs[2] : null;\n      if (email) attributes.push({\n        Name: 'email',\n        Value: email\n      });\n      if (phone_number) attributes.push({\n        Name: 'phone_number',\n        Value: phone_number\n      });\n    } else if (params && typeof params === 'object') {\n      username = params['username'];\n      password = params['password'];\n\n      if (params && params.clientMetadata) {\n        clientMetadata = params.clientMetadata;\n      } else if (this._config.clientMetadata) {\n        clientMetadata = this._config.clientMetadata;\n      }\n\n      var attrs_1 = params['attributes'];\n\n      if (attrs_1) {\n        Object.keys(attrs_1).map(function (key) {\n          var ele = {\n            Name: key,\n            Value: attrs_1[key]\n          };\n          attributes.push(ele);\n        });\n      }\n\n      validationData = params['validationData'] || null;\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.SignUpError);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    logger.debug('signUp attrs:', attributes);\n    logger.debug('signUp validation data:', validationData);\n    return new Promise(function (resolve, reject) {\n      _this.userPool.signUp(username, password, attributes, validationData, function (err, data) {\n        if (err) {\n          dispatchAuthEvent('signUp_failure', err, username + \" failed to signup\");\n          reject(err);\n        } else {\n          dispatchAuthEvent('signUp', data, username + \" has signed up successfully\");\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the verfication code to confirm sign up\n   * @param {String} username - The username to be confirmed\n   * @param {String} code - The verification code\n   * @param {ConfirmSignUpOptions} options - other options for confirm signup\n   * @return - A promise resolves callback data if success\n   */\n\n\n  AuthClass.prototype.confirmSignUp = function (username, code, options) {\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var user = this.createCognitoUser(username);\n    var forceAliasCreation = options && typeof options.forceAliasCreation === 'boolean' ? options.forceAliasCreation : true;\n    var clientMetadata;\n\n    if (options && options.clientMetadata) {\n      clientMetadata = options.clientMetadata;\n    } else if (this._config.clientMetadata) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.confirmRegistration(code, forceAliasCreation, function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Resend the verification code\n   * @param {String} username - The username to be confirmed\n   * @param {ClientMetadata} clientMetadata - Metadata to be passed to Cognito Lambda triggers\n   * @return - A promise resolves data if success\n   */\n\n\n  AuthClass.prototype.resendSignUp = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.resendConfirmationCode(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Sign in\n   * @param {String | SignInOpts} usernameOrSignInOpts - The username to be signed in or the sign in options\n   * @param {String} password - The password of the username\n   * @return - A promise resolves the CognitoUser\n   */\n\n\n  AuthClass.prototype.signIn = function (usernameOrSignInOpts, pw, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var username = null;\n    var password = null;\n    var validationData = {}; // for backward compatibility\n\n    if (typeof usernameOrSignInOpts === 'string') {\n      username = usernameOrSignInOpts;\n      password = pw;\n    } else if (isUsernamePasswordOpts(usernameOrSignInOpts)) {\n      if (typeof pw !== 'undefined') {\n        logger.warn('The password should be defined under the first parameter object!');\n      }\n\n      username = usernameOrSignInOpts.username;\n      password = usernameOrSignInOpts.password;\n      validationData = usernameOrSignInOpts.validationData;\n    } else {\n      return this.rejectAuthError(AuthErrorTypes.InvalidUsername);\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var authDetails = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    });\n\n    if (password) {\n      return this.signInWithPassword(authDetails);\n    } else {\n      return this.signInWithoutPassword(authDetails);\n    }\n  };\n  /**\n   * Return an object with the authentication callbacks\n   * @param {CognitoUser} user - the cognito user object\n   * @param {} resolve - function called when resolving the current step\n   * @param {} reject - function called when rejecting the current step\n   * @return - an object with the callback methods for user authentication\n   */\n\n\n  AuthClass.prototype.authCallbacks = function (user, resolve, reject) {\n    var _this = this;\n\n    var that = this;\n    return {\n      onSuccess: function onSuccess(session) {\n        return __awaiter(_this, void 0, void 0, function () {\n          var cred, e_1, currentUser, e_2;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                logger.debug(session);\n                delete user['challengeName'];\n                delete user['challengeParam'];\n                _a.label = 1;\n\n              case 1:\n                _a.trys.push([1, 4, 5, 9]);\n\n                return [4\n                /*yield*/\n                , Credentials.clear()];\n\n              case 2:\n                _a.sent();\n\n                return [4\n                /*yield*/\n                , Credentials.set(session, 'session')];\n\n              case 3:\n                cred = _a.sent();\n                logger.debug('succeed to get cognito credentials', cred);\n                return [3\n                /*break*/\n                , 9];\n\n              case 4:\n                e_1 = _a.sent();\n                logger.debug('cannot get cognito credentials', e_1);\n                return [3\n                /*break*/\n                , 9];\n\n              case 5:\n                _a.trys.push([5, 7,, 8]);\n\n                return [4\n                /*yield*/\n                , this.currentUserPoolUser()];\n\n              case 6:\n                currentUser = _a.sent();\n                that.user = currentUser;\n                dispatchAuthEvent('signIn', currentUser, \"A user \" + user.getUsername() + \" has been signed in\");\n                resolve(currentUser);\n                return [3\n                /*break*/\n                , 8];\n\n              case 7:\n                e_2 = _a.sent();\n                logger.error('Failed to get the signed in user', e_2);\n                reject(e_2);\n                return [3\n                /*break*/\n                , 8];\n\n              case 8:\n                return [7\n                /*endfinally*/\n                ];\n\n              case 9:\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      },\n      onFailure: function onFailure(err) {\n        logger.debug('signIn failure', err);\n        dispatchAuthEvent('signIn_failure', err, user.getUsername() + \" failed to signin\");\n        reject(err);\n      },\n      customChallenge: function customChallenge(challengeParam) {\n        logger.debug('signIn custom challenge answer required');\n        user['challengeName'] = 'CUSTOM_CHALLENGE';\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaRequired: function mfaRequired(challengeName, challengeParam) {\n        logger.debug('signIn MFA required');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      mfaSetup: function mfaSetup(challengeName, challengeParam) {\n        logger.debug('signIn mfa setup', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      newPasswordRequired: function newPasswordRequired(userAttributes, requiredAttributes) {\n        logger.debug('signIn new password');\n        user['challengeName'] = 'NEW_PASSWORD_REQUIRED';\n        user['challengeParam'] = {\n          userAttributes: userAttributes,\n          requiredAttributes: requiredAttributes\n        };\n        resolve(user);\n      },\n      totpRequired: function totpRequired(challengeName, challengeParam) {\n        logger.debug('signIn totpRequired');\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      },\n      selectMFAType: function selectMFAType(challengeName, challengeParam) {\n        logger.debug('signIn selectMFAType', challengeName);\n        user['challengeName'] = challengeName;\n        user['challengeParam'] = challengeParam;\n        resolve(user);\n      }\n    };\n  };\n  /**\n   * Sign in with a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithPassword = function (authDetails) {\n    var _this = this;\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    return new Promise(function (resolve, reject) {\n      user.authenticateUser(authDetails, _this.authCallbacks(user, resolve, reject));\n    });\n  };\n  /**\n   * Sign in without a password\n   * @private\n   * @param {AuthenticationDetails} authDetails - the user sign in data\n   * @return - A promise resolves the CognitoUser object if success or mfa required\n   */\n\n\n  AuthClass.prototype.signInWithoutPassword = function (authDetails) {\n    var _this = this;\n\n    var user = this.createCognitoUser(authDetails.getUsername());\n    user.setAuthenticationFlowType('CUSTOM_AUTH');\n    return new Promise(function (resolve, reject) {\n      user.initiateAuth(authDetails, _this.authCallbacks(user, resolve, reject));\n    });\n  };\n  /**\n   * get user current preferred mfa option\n   * this method doesn't work with totp, we need to deprecate it.\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves the current preferred mfa option if success\n   */\n\n\n  AuthClass.prototype.getMFAOptions = function (user) {\n    return new Promise(function (res, rej) {\n      user.getMFAOptions(function (err, mfaOptions) {\n        if (err) {\n          logger.debug('get MFA Options failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('get MFA options success', mfaOptions);\n        res(mfaOptions);\n        return;\n      });\n    });\n  };\n  /**\n   * get preferred mfa method\n   * @param {CognitoUser} user - the current cognito user\n   * @param {GetPreferredMFAOpts} params - options for getting the current user preferred MFA\n   */\n\n\n  AuthClass.prototype.getPreferredMFA = function (user, params) {\n    var that = this;\n    return new Promise(function (res, rej) {\n      var bypassCache = params ? params.bypassCache : false;\n      user.getUserData(function (err, data) {\n        if (err) {\n          logger.debug('getting preferred mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        var mfaType = that._getMfaTypeFromUserData(data);\n\n        if (!mfaType) {\n          rej('invalid MFA Type');\n          return;\n        } else {\n          res(mfaType);\n          return;\n        }\n      }, {\n        bypassCache: bypassCache\n      });\n    });\n  };\n\n  AuthClass.prototype._getMfaTypeFromUserData = function (data) {\n    var ret = null;\n    var preferredMFA = data.PreferredMfaSetting; // if the user has used Auth.setPreferredMFA() to setup the mfa type\n    // then the \"PreferredMfaSetting\" would exist in the response\n\n    if (preferredMFA) {\n      ret = preferredMFA;\n    } else {\n      // if mfaList exists but empty, then its noMFA\n      var mfaList = data.UserMFASettingList;\n\n      if (!mfaList) {\n        // if SMS was enabled by using Auth.enableSMS(),\n        // the response would contain MFAOptions\n        // as for now Cognito only supports for SMS, so we will say it is 'SMS_MFA'\n        // if it does not exist, then it should be NOMFA\n        var MFAOptions = data.MFAOptions;\n\n        if (MFAOptions) {\n          ret = 'SMS_MFA';\n        } else {\n          ret = 'NOMFA';\n        }\n      } else if (mfaList.length === 0) {\n        ret = 'NOMFA';\n      } else {\n        logger.debug('invalid case for getPreferredMFA', data);\n      }\n    }\n\n    return ret;\n  };\n\n  AuthClass.prototype._getUserData = function (user, params) {\n    return new Promise(function (res, rej) {\n      user.getUserData(function (err, data) {\n        if (err) {\n          logger.debug('getting user data failed', err);\n          rej(err);\n          return;\n        } else {\n          res(data);\n          return;\n        }\n      }, params);\n    });\n  };\n  /**\n   * set preferred MFA method\n   * @param {CognitoUser} user - the current Cognito user\n   * @param {string} mfaMethod - preferred mfa method\n   * @return - A promise resolve if success\n   */\n\n\n  AuthClass.prototype.setPreferredMFA = function (user, mfaMethod) {\n    return __awaiter(this, void 0, void 0, function () {\n      var userData, smsMfaSettings, totpMfaSettings, _a, mfaList, currentMFAType, that;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._getUserData(user, {\n              bypassCache: true\n            })];\n\n          case 1:\n            userData = _b.sent();\n            smsMfaSettings = null;\n            totpMfaSettings = null;\n            _a = mfaMethod;\n\n            switch (_a) {\n              case 'TOTP' || 'SOFTWARE_TOKEN_MFA':\n                return [3\n                /*break*/\n                , 2];\n\n              case 'SMS' || 'SMS_MFA':\n                return [3\n                /*break*/\n                , 3];\n\n              case 'NOMFA':\n                return [3\n                /*break*/\n                , 4];\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 2:\n            totpMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 3:\n            smsMfaSettings = {\n              PreferredMfa: true,\n              Enabled: true\n            };\n            return [3\n            /*break*/\n            , 7];\n\n          case 4:\n            mfaList = userData['UserMFASettingList'];\n            return [4\n            /*yield*/\n            , this._getMfaTypeFromUserData(userData)];\n\n          case 5:\n            currentMFAType = _b.sent();\n\n            if (currentMFAType === 'NOMFA') {\n              return [2\n              /*return*/\n              , Promise.resolve('No change for mfa type')];\n            } else if (currentMFAType === 'SMS_MFA') {\n              smsMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else if (currentMFAType === 'SOFTWARE_TOKEN_MFA') {\n              totpMfaSettings = {\n                PreferredMfa: false,\n                Enabled: false\n              };\n            } else {\n              return [2\n              /*return*/\n              , this.rejectAuthError(AuthErrorTypes.InvalidMFA)];\n            } // if there is a UserMFASettingList in the response\n            // we need to disable every mfa type in that list\n\n\n            if (mfaList && mfaList.length !== 0) {\n              // to disable SMS or TOTP if exists in that list\n              mfaList.forEach(function (mfaType) {\n                if (mfaType === 'SMS_MFA') {\n                  smsMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                } else if (mfaType === 'SOFTWARE_TOKEN_MFA') {\n                  totpMfaSettings = {\n                    PreferredMfa: false,\n                    Enabled: false\n                  };\n                }\n              });\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            logger.debug('no validmfa method provided');\n            return [2\n            /*return*/\n            , this.rejectAuthError(AuthErrorTypes.NoMFA)];\n\n          case 7:\n            that = this;\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              user.setUserMfaPreference(smsMfaSettings, totpMfaSettings, function (err, result) {\n                if (err) {\n                  logger.debug('Set user mfa preference error', err);\n                  return rej(err);\n                }\n\n                logger.debug('Set user mfa success', result);\n                logger.debug('Caching the latest user data into local'); // cache the latest result into user data\n\n                user.getUserData(function (err, data) {\n                  if (err) {\n                    logger.debug('getting user data failed', err);\n                    return rej(err);\n                  } else {\n                    return res(result);\n                  }\n                }, {\n                  bypassCache: true\n                });\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * diable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.disableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.disableMFA(function (err, data) {\n        if (err) {\n          logger.debug('disable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('disable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * enable SMS\n   * @deprecated\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.enableSMS = function (user) {\n    return new Promise(function (res, rej) {\n      user.enableMFA(function (err, data) {\n        if (err) {\n          logger.debug('enable mfa failed', err);\n          rej(err);\n          return;\n        }\n\n        logger.debug('enable mfa succeed', data);\n        res(data);\n        return;\n      });\n    });\n  };\n  /**\n   * Setup TOTP\n   * @param {CognitoUser} user - the current user\n   * @return - A promise resolves with the secret code if success\n   */\n\n\n  AuthClass.prototype.setupTOTP = function (user) {\n    return new Promise(function (res, rej) {\n      user.associateSoftwareToken({\n        onFailure: function onFailure(err) {\n          logger.debug('associateSoftwareToken failed', err);\n          rej(err);\n          return;\n        },\n        associateSecretCode: function associateSecretCode(secretCode) {\n          logger.debug('associateSoftwareToken sucess', secretCode);\n          res(secretCode);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * verify TOTP setup\n   * @param {CognitoUser} user - the current user\n   * @param {string} challengeAnswer - challenge answer\n   * @return - A promise resolves is success\n   */\n\n\n  AuthClass.prototype.verifyTotpToken = function (user, challengeAnswer) {\n    logger.debug('verfication totp token', user, challengeAnswer);\n    return new Promise(function (res, rej) {\n      user.verifySoftwareToken(challengeAnswer, 'My TOTP device', {\n        onFailure: function onFailure(err) {\n          logger.debug('verifyTotpToken failed', err);\n          rej(err);\n          return;\n        },\n        onSuccess: function onSuccess(data) {\n          logger.debug('verifyTotpToken success', data);\n          res(data);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * Send MFA code to confirm sign in\n   * @param {Object} user - The CognitoUser object\n   * @param {String} code - The confirmation code\n   */\n\n\n  AuthClass.prototype.confirmSignIn = function (user, code, mfaType, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendMFACode(code, {\n        onSuccess: function onSuccess(session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_3;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_3 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_3);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, user + \" has signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function onFailure(err) {\n          logger.debug('confirm signIn failure', err);\n          reject(err);\n        }\n      }, mfaType, clientMetadata);\n    });\n  };\n\n  AuthClass.prototype.completeNewPassword = function (user, password, requiredAttributes, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.completeNewPasswordChallenge(password, requiredAttributes, {\n        onSuccess: function onSuccess(session) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var cred, e_4;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  logger.debug(session);\n                  _a.label = 1;\n\n                case 1:\n                  _a.trys.push([1, 4, 5, 6]);\n\n                  return [4\n                  /*yield*/\n                  , Credentials.clear()];\n\n                case 2:\n                  _a.sent();\n\n                  return [4\n                  /*yield*/\n                  , Credentials.set(session, 'session')];\n\n                case 3:\n                  cred = _a.sent();\n                  logger.debug('succeed to get cognito credentials', cred);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 4:\n                  e_4 = _a.sent();\n                  logger.debug('cannot get cognito credentials', e_4);\n                  return [3\n                  /*break*/\n                  , 6];\n\n                case 5:\n                  that.user = user;\n                  dispatchAuthEvent('signIn', user, user + \" has signed in\");\n                  resolve(user);\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 6:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        },\n        onFailure: function onFailure(err) {\n          logger.debug('completeNewPassword failure', err);\n          dispatchAuthEvent('completeNewPassword_failure', err, _this.user + \" failed to complete the new password flow\");\n          reject(err);\n        },\n        mfaRequired: function mfaRequired(challengeName, challengeParam) {\n          logger.debug('signIn MFA required');\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        },\n        mfaSetup: function mfaSetup(challengeName, challengeParam) {\n          logger.debug('signIn mfa setup', challengeName);\n          user['challengeName'] = challengeName;\n          user['challengeParam'] = challengeParam;\n          resolve(user);\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Send the answer to a custom challenge\n   * @param {CognitoUser} user - The CognitoUser object\n   * @param {String} challengeResponses - The confirmation code\n   */\n\n\n  AuthClass.prototype.sendCustomChallengeAnswer = function (user, challengeResponses, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!challengeResponses) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyChallengeResponse);\n    }\n\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      user.sendCustomChallengeAnswer(challengeResponses, _this.authCallbacks(user, resolve, reject), clientMetadata);\n    });\n  };\n  /**\n   * Update an authenticated users' attributes\n   * @param {CognitoUser} - The currently logged in user object\n   * @return {Promise}\n   **/\n\n\n  AuthClass.prototype.updateUserAttributes = function (user, attributes, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    var attributeList = [];\n    var that = this;\n    return new Promise(function (resolve, reject) {\n      that.userSession(user).then(function (session) {\n        for (var key in attributes) {\n          if (key !== 'sub' && key.indexOf('_verified') < 0) {\n            var attr = {\n              Name: key,\n              Value: attributes[key]\n            };\n            attributeList.push(attr);\n          }\n        }\n\n        user.updateAttributes(attributeList, function (err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Return user attributes\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to user attributes if success\n   */\n\n\n  AuthClass.prototype.userAttributes = function (user) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.getUserAttributes(function (err, attributes) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(attributes);\n          }\n        });\n      });\n    });\n  };\n\n  AuthClass.prototype.verifiedContact = function (user) {\n    var that = this;\n    return this.userAttributes(user).then(function (attributes) {\n      var attrs = that.attributesToObject(attributes);\n      var unverified = {};\n      var verified = {};\n\n      if (attrs['email']) {\n        if (attrs['email_verified']) {\n          verified['email'] = attrs['email'];\n        } else {\n          unverified['email'] = attrs['email'];\n        }\n      }\n\n      if (attrs['phone_number']) {\n        if (attrs['phone_number_verified']) {\n          verified['phone_number'] = attrs['phone_number'];\n        } else {\n          unverified['phone_number'] = attrs['phone_number'];\n        }\n      }\n\n      return {\n        verified: verified,\n        unverified: unverified\n      };\n    });\n  };\n  /**\n   * Get current authenticated user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentUserPoolUser = function (params) {\n    var _this = this;\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    var that = this;\n    return new Promise(function (res, rej) {\n      _this._storageSync.then(function () {\n        var user = that.userPool.getCurrentUser();\n\n        if (!user) {\n          logger.debug('Failed to get user from user pool');\n          rej('No current user');\n          return;\n        } // refresh the session if the session expired.\n\n\n        user.getSession(function (err, session) {\n          if (err) {\n            logger.debug('Failed to get the user session', err);\n            rej(err);\n            return;\n          } // get user data from Cognito\n\n\n          var bypassCache = params ? params.bypassCache : false; // validate the token's scope fisrt before calling this function\n\n          var _a = session.getAccessToken().decodePayload().scope,\n              scope = _a === void 0 ? '' : _a;\n\n          if (scope.split(' ').includes(USER_ADMIN_SCOPE)) {\n            user.getUserData(function (err, data) {\n              if (err) {\n                logger.debug('getting user data failed', err); // Make sure the user is still valid\n\n                if (err.message === 'User is disabled' || err.message === 'User does not exist.') {\n                  rej(err);\n                } else {\n                  // the error may also be thrown when lack of permissions to get user info etc\n                  // in that case we just bypass the error\n                  res(user);\n                }\n\n                return;\n              }\n\n              var preferredMFA = data.PreferredMfaSetting || 'NOMFA';\n              var attributeList = [];\n\n              for (var i = 0; i < data.UserAttributes.length; i++) {\n                var attribute = {\n                  Name: data.UserAttributes[i].Name,\n                  Value: data.UserAttributes[i].Value\n                };\n                var userAttribute = new CognitoUserAttribute(attribute);\n                attributeList.push(userAttribute);\n              }\n\n              var attributes = that.attributesToObject(attributeList);\n              Object.assign(user, {\n                attributes: attributes,\n                preferredMFA: preferredMFA\n              });\n              return res(user);\n            }, {\n              bypassCache: bypassCache\n            });\n          } else {\n            logger.debug(\"Unable to get the user data because the \" + USER_ADMIN_SCOPE + \" \" + \"is not in the scopes of the access token\");\n            return res(user);\n          }\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to sync cache info into memory', e);\n        return rej(e);\n      });\n    });\n  };\n  /**\n   * Get current authenticated user\n   * @param {CurrentUserOpts} - options for getting the current user\n   * @return - A promise resolves to current authenticated CognitoUser if success\n   */\n\n\n  AuthClass.prototype.currentAuthenticatedUser = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var federatedUser, e_5, user, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            logger.debug('getting current authenticated user');\n            federatedUser = null;\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_5 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_5);\n            throw e_5;\n\n          case 4:\n            try {\n              federatedUser = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user;\n            } catch (e) {\n              logger.debug('cannot load federated user from auth storage');\n            }\n\n            if (!federatedUser) return [3\n            /*break*/\n            , 5];\n            this.user = federatedUser;\n            logger.debug('get current authenticated federated user', this.user);\n            return [2\n            /*return*/\n            , this.user];\n\n          case 5:\n            logger.debug('get current authenticated userpool user');\n            user = null;\n            _a.label = 6;\n\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser(params)];\n\n          case 7:\n            user = _a.sent();\n            return [3\n            /*break*/\n            , 9];\n\n          case 8:\n            e_6 = _a.sent();\n\n            if (e_6 === 'No userPool') {\n              logger.error('Cannot get the current user because the user pool is missing. ' + 'Please make sure the Auth module is configured with a valid Cognito User Pool ID');\n            }\n\n            logger.debug('The user is not authenticated by the error', e_6);\n            throw 'not authenticated';\n\n          case 9:\n            this.user = user;\n            return [2\n            /*return*/\n            , this.user];\n        }\n      });\n    });\n  };\n  /**\n   * Get current user's session\n   * @return - A promise resolves to session object if success\n   */\n\n\n  AuthClass.prototype.currentSession = function () {\n    var that = this;\n    logger.debug('Getting current session'); // Purposely not calling the reject method here because we don't need a console error\n\n    if (!this.userPool) {\n      return Promise.reject();\n    }\n\n    return new Promise(function (res, rej) {\n      that.currentUserPoolUser().then(function (user) {\n        that.userSession(user).then(function (session) {\n          res(session);\n          return;\n        }).catch(function (e) {\n          logger.debug('Failed to get the current session', e);\n          rej(e);\n          return;\n        });\n      }).catch(function (e) {\n        logger.debug('Failed to get the current user', e);\n        rej(e);\n        return;\n      });\n    });\n  };\n  /**\n   * Get the corresponding user session\n   * @param {Object} user - The CognitoUser object\n   * @return - A promise resolves to the session\n   */\n\n\n  AuthClass.prototype.userSession = function (user) {\n    if (!user) {\n      logger.debug('the user is null');\n      return this.rejectAuthError(AuthErrorTypes.NoUserSession);\n    }\n\n    return new Promise(function (resolve, reject) {\n      logger.debug('Getting the session from this user:', user);\n      user.getSession(function (err, session) {\n        if (err) {\n          logger.debug('Failed to get the session from user', user);\n          reject(err);\n          return;\n        } else {\n          logger.debug('Succeed to get the user session', session);\n          resolve(session);\n          return;\n        }\n      });\n    });\n  };\n  /**\n   * Get  authenticated credentials of current user.\n   * @return - A promise resolves to be current user's credentials\n   */\n\n\n  AuthClass.prototype.currentUserCredentials = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var that, e_7, federatedInfo;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            that = this;\n            logger.debug('Getting current user credentials');\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_7 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_7);\n            throw e_7;\n\n          case 4:\n            federatedInfo = null;\n\n            try {\n              federatedInfo = JSON.parse(this._storage.getItem('aws-amplify-federatedInfo'));\n            } catch (e) {\n              logger.debug('failed to get or parse item aws-amplify-federatedInfo', e);\n            }\n\n            if (federatedInfo) {\n              // refresh the jwt token here if necessary\n              return [2\n              /*return*/\n              , Credentials.refreshFederatedToken(federatedInfo)];\n            } else {\n              return [2\n              /*return*/\n              , this.currentSession().then(function (session) {\n                logger.debug('getting session success', session);\n                return Credentials.set(session, 'session');\n              }).catch(function (error) {\n                logger.debug('getting session failed', error);\n                return Credentials.set(null, 'guest');\n              })];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.currentCredentials = function () {\n    logger.debug('getting current credntials');\n    return Credentials.get();\n  };\n  /**\n   * Initiate an attribute confirmation request\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attributes to be verified\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttribute = function (user, attr, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.getAttributeVerificationCode(attr, {\n        onSuccess: function onSuccess() {\n          return resolve();\n        },\n        onFailure: function onFailure(err) {\n          return reject(err);\n        },\n        clientMetadata: clientMetadata\n      });\n    });\n  };\n  /**\n   * Confirm an attribute using a confirmation code\n   * @param {Object} user - The CognitoUser\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyUserAttributeSubmit = function (user, attr, code) {\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    return new Promise(function (resolve, reject) {\n      user.verifyAttribute(attr, code, {\n        onSuccess: function onSuccess(data) {\n          resolve(data);\n          return;\n        },\n        onFailure: function onFailure(err) {\n          reject(err);\n          return;\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.verifyCurrentUserAttribute = function (attr) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttribute(user, attr);\n    });\n  };\n  /**\n   * Confirm current user's attribute using a confirmation code\n   * @param {Object} attr - The attribute to be verified\n   * @param {String} code - The confirmation code\n   * @return - A promise resolves to callback data if success\n   */\n\n\n  AuthClass.prototype.verifyCurrentUserAttributeSubmit = function (attr, code) {\n    var that = this;\n    return that.currentUserPoolUser().then(function (user) {\n      return that.verifyUserAttributeSubmit(user, attr, code);\n    });\n  };\n\n  AuthClass.prototype.cognitoIdentitySignOut = function (opts, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_8, isSignedInHostedUI;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this._storageSync];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_8 = _a.sent();\n            logger.debug('Failed to sync cache info into memory', e_8);\n            throw e_8;\n\n          case 3:\n            isSignedInHostedUI = this._oAuthHandler && this._storage.getItem('amplify-signin-with-hostedUI') === 'true';\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              if (opts && opts.global) {\n                logger.debug('user global sign out', user); // in order to use global signout\n                // we must validate the user as an authenticated user by using getSession\n\n                user.getSession(function (err, result) {\n                  if (err) {\n                    logger.debug('failed to get the user session', err);\n                    return rej(err);\n                  }\n\n                  user.globalSignOut({\n                    onSuccess: function onSuccess(data) {\n                      logger.debug('global sign out success');\n\n                      if (isSignedInHostedUI) {\n                        return res(_this._oAuthHandler.signOut());\n                      } else {\n                        return res();\n                      }\n                    },\n                    onFailure: function onFailure(err) {\n                      logger.debug('global sign out failed', err);\n                      return rej(err);\n                    }\n                  });\n                });\n              } else {\n                logger.debug('user sign out', user);\n                user.signOut();\n\n                if (isSignedInHostedUI) {\n                  return res(_this._oAuthHandler.signOut());\n                } else {\n                  return res();\n                }\n              }\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Sign out method\n   * @\n   * @return - A promise resolved if success\n   */\n\n\n  AuthClass.prototype.signOut = function (opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var e_9, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.cleanCachedItems()];\n\n          case 1:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            e_9 = _a.sent();\n            logger.debug('failed to clear cached items');\n            return [3\n            /*break*/\n            , 3];\n\n          case 3:\n            if (!this.userPool) return [3\n            /*break*/\n            , 7];\n            user = this.userPool.getCurrentUser();\n            if (!user) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this.cognitoIdentitySignOut(opts, user)];\n\n          case 4:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            logger.debug('no current Cognito user');\n            _a.label = 6;\n\n          case 6:\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            logger.debug('no Congito User pool');\n            _a.label = 8;\n\n          case 8:\n            /**\n             * Note for future refactor - no reliable way to get username with\n             * Cognito User Pools vs Identity when federating with Social Providers\n             * This is why we need a well structured session object that can be inspected\n             * and information passed back in the message below for Hub dispatch\n             */\n            dispatchAuthEvent('signOut', this.user, \"A user has been signed out\");\n            this.user = null;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.cleanCachedItems = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // clear cognito cached item\n            return [4\n            /*yield*/\n            , Credentials.clear()];\n\n          case 1:\n            // clear cognito cached item\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Change a password for an authenticated user\n   * @param {Object} user - The CognitoUser object\n   * @param {String} oldPassword - the current password\n   * @param {String} newPassword - the requested new password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.changePassword = function (user, oldPassword, newPassword, clientMetadata) {\n    var _this = this;\n\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    return new Promise(function (resolve, reject) {\n      _this.userSession(user).then(function (session) {\n        user.changePassword(oldPassword, newPassword, function (err, data) {\n          if (err) {\n            logger.debug('change password failure', err);\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        }, clientMetadata);\n      });\n    });\n  };\n  /**\n   * Initiate a forgot password request\n   * @param {String} username - the username to change password\n   * @return - A promise resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPassword = function (username, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.forgotPassword({\n        onSuccess: function onSuccess() {\n          resolve();\n          return;\n        },\n        onFailure: function onFailure(err) {\n          logger.debug('forgot password failure', err);\n          dispatchAuthEvent('forgotPassword_failure', err, username + \" forgotPassword failed\");\n          reject(err);\n          return;\n        },\n        inputVerificationCode: function inputVerificationCode(data) {\n          dispatchAuthEvent('forgotPassword', user, username + \" has initiated forgot password flow\");\n          resolve(data);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Confirm a new password using a confirmation Code\n   * @param {String} username - The username\n   * @param {String} code - The confirmation code\n   * @param {String} password - The new password\n   * @return - A promise that resolves if success\n   */\n\n\n  AuthClass.prototype.forgotPasswordSubmit = function (username, code, password, clientMetadata) {\n    if (clientMetadata === void 0) {\n      clientMetadata = this._config.clientMetadata;\n    }\n\n    if (!this.userPool) {\n      return this.rejectNoUserPool();\n    }\n\n    if (!username) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyUsername);\n    }\n\n    if (!code) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyCode);\n    }\n\n    if (!password) {\n      return this.rejectAuthError(AuthErrorTypes.EmptyPassword);\n    }\n\n    var user = this.createCognitoUser(username);\n    return new Promise(function (resolve, reject) {\n      user.confirmPassword(code, password, {\n        onSuccess: function onSuccess() {\n          dispatchAuthEvent('forgotPasswordSubmit', user, username + \" forgotPasswordSubmit successful\");\n          resolve();\n          return;\n        },\n        onFailure: function onFailure(err) {\n          dispatchAuthEvent('forgotPasswordSubmit_failure', err, username + \" forgotPasswordSubmit failed\");\n          reject(err);\n          return;\n        }\n      }, clientMetadata);\n    });\n  };\n  /**\n   * Get user information\n   * @async\n   * @return {Object }- current User's information\n   */\n\n\n  AuthClass.prototype.currentUserInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var source, user, attributes, userAttrs, credentials, e_10, info, err_1, user;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            source = Credentials.getCredSource();\n            if (!(!source || source === 'aws' || source === 'userPool')) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , this.currentUserPoolUser().catch(function (err) {\n              return logger.debug(err);\n            })];\n\n          case 1:\n            user = _a.sent();\n\n            if (!user) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 8,, 9]);\n\n            return [4\n            /*yield*/\n            , this.userAttributes(user)];\n\n          case 3:\n            attributes = _a.sent();\n            userAttrs = this.attributesToObject(attributes);\n            credentials = null;\n            _a.label = 4;\n\n          case 4:\n            _a.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this.currentCredentials()];\n\n          case 5:\n            credentials = _a.sent();\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            e_10 = _a.sent();\n            logger.debug('Failed to retrieve credentials while getting current user info', e_10);\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            info = {\n              id: credentials ? credentials.identityId : undefined,\n              username: user.getUsername(),\n              attributes: userAttrs\n            };\n            return [2\n            /*return*/\n            , info];\n\n          case 8:\n            err_1 = _a.sent();\n            logger.debug('currentUserInfo error', err_1);\n            return [2\n            /*return*/\n            , {}];\n\n          case 9:\n            if (source === 'federated') {\n              user = this.user;\n              return [2\n              /*return*/\n              , user ? user : {}];\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AuthClass.prototype.federatedSignIn = function (providerOrOptions, response, user) {\n    return __awaiter(this, void 0, void 0, function () {\n      var options, provider, customState, client_id, redirect_uri, provider, loggedInUser, token, identity_id, expires_at, credentials, currentUser;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._config.identityPoolId && !this._config.userPoolId) {\n              throw new Error(\"Federation requires either a User Pool or Identity Pool in config\");\n            } // Ensure backwards compatability\n\n\n            if (typeof providerOrOptions === 'undefined') {\n              if (this._config.identityPoolId && !this._config.userPoolId) {\n                throw new Error(\"Federation with Identity Pools requires tokens passed as arguments\");\n              }\n            }\n\n            if (!(isFederatedSignInOptions(providerOrOptions) || isFederatedSignInOptionsCustom(providerOrOptions) || typeof providerOrOptions === 'undefined')) return [3\n            /*break*/\n            , 1];\n            options = providerOrOptions || {\n              provider: CognitoHostedUIIdentityProvider.Cognito\n            };\n            provider = isFederatedSignInOptions(options) ? options.provider : options.customProvider;\n            customState = isFederatedSignInOptions(options) ? options.customState : options.customState;\n\n            if (this._config.userPoolId) {\n              client_id = isCognitoHostedOpts(this._config.oauth) ? this._config.userPoolWebClientId : this._config.oauth.clientID;\n              redirect_uri = isCognitoHostedOpts(this._config.oauth) ? this._config.oauth.redirectSignIn : this._config.oauth.redirectUri;\n\n              this._oAuthHandler.oauthSignIn(this._config.oauth.responseType, this._config.oauth.domain, redirect_uri, client_id, provider, customState);\n            }\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 1:\n            provider = providerOrOptions; // To check if the user is already logged in\n\n            try {\n              loggedInUser = JSON.stringify(JSON.parse(this._storage.getItem('aws-amplify-federatedInfo')).user);\n\n              if (loggedInUser) {\n                logger.warn(\"There is already a signed in user: \" + loggedInUser + \" in your app.\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tYou should not call Auth.federatedSignIn method again as it may cause unexpected behavior.\");\n              }\n            } catch (e) {}\n\n            token = response.token, identity_id = response.identity_id, expires_at = response.expires_at;\n            return [4\n            /*yield*/\n            , Credentials.set({\n              provider: provider,\n              token: token,\n              identity_id: identity_id,\n              user: user,\n              expires_at: expires_at\n            }, 'federation')];\n\n          case 2:\n            credentials = _a.sent();\n            return [4\n            /*yield*/\n            , this.currentAuthenticatedUser()];\n\n          case 3:\n            currentUser = _a.sent();\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.username + \" has been signed in\");\n            logger.debug('federated sign in credentials', credentials);\n            return [2\n            /*return*/\n            , credentials];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Used to complete the OAuth flow with or without the Cognito Hosted UI\n   * @param {String} URL - optional parameter for customers to pass in the response URL\n   */\n\n\n  AuthClass.prototype._handleAuthResponse = function (URL) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentUrl, hasCodeOrError, hasTokenOrError, _a, accessToken, idToken, refreshToken, state, session, credentials, isCustomStateIncluded, currentUser, _b, customState, err_2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!this._config.userPoolId) {\n              throw new Error(\"OAuth responses require a User Pool defined in config\");\n            }\n\n            dispatchAuthEvent('parsingCallbackUrl', {\n              url: URL\n            }, \"The callback url is being parsed\");\n            currentUrl = URL || (JS.browserOrNode().isBrowser ? window.location.href : '');\n            hasCodeOrError = !!(parse(currentUrl).query || '').split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var k = _a[0];\n              return k === 'code' || k === 'error';\n            });\n            hasTokenOrError = !!(parse(currentUrl).hash || '#').substr(1).split('&').map(function (entry) {\n              return entry.split('=');\n            }).find(function (_a) {\n              var k = _a[0];\n              return k === 'access_token' || k === 'error';\n            });\n            if (!(hasCodeOrError || hasTokenOrError)) return [3\n            /*break*/\n            , 6];\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , this._oAuthHandler.handleAuthResponse(currentUrl)];\n\n          case 2:\n            _a = _c.sent(), accessToken = _a.accessToken, idToken = _a.idToken, refreshToken = _a.refreshToken, state = _a.state;\n            session = new CognitoUserSession({\n              IdToken: new CognitoIdToken({\n                IdToken: idToken\n              }),\n              RefreshToken: new CognitoRefreshToken({\n                RefreshToken: refreshToken\n              }),\n              AccessToken: new CognitoAccessToken({\n                AccessToken: accessToken\n              })\n            });\n            credentials = void 0;\n            if (!this._config.identityPoolId) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , Credentials.set(session, 'session')];\n\n          case 3:\n            credentials = _c.sent();\n            logger.debug('AWS credentials', credentials);\n            _c.label = 4;\n\n          case 4:\n            isCustomStateIncluded = /-/.test(state);\n            currentUser = this.createCognitoUser(session.getIdToken().decodePayload()['cognito:username']);\n            dispatchAuthEvent('signIn', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in\");\n            dispatchAuthEvent('cognitoHostedUI', currentUser, \"A user \" + currentUser.getUsername() + \" has been signed in via Cognito Hosted UI\");\n\n            if (isCustomStateIncluded) {\n              _b = state.split('-'), customState = _b[1];\n              dispatchAuthEvent('customOAuthState', customState, \"State for user \" + currentUser.getUsername());\n            } // This calls cacheTokens() in Cognito SDK\n\n\n            currentUser.setSignInUserSession(session); //#endregion\n\n            if (window && typeof window.history !== 'undefined') {\n              window.history.replaceState({}, null, this._config.oauth.redirectSignIn);\n            }\n\n            return [2\n            /*return*/\n            , credentials];\n\n          case 5:\n            err_2 = _c.sent();\n            logger.debug('Error in cognito hosted auth response', err_2);\n            dispatchAuthEvent('signIn_failure', err_2, \"The OAuth response flow failed\");\n            dispatchAuthEvent('cognitoHostedUI_failure', err_2, \"A failure occurred when returning to the Cognito Hosted UI\");\n            dispatchAuthEvent('customState_failure', err_2, \"A failure occurred when returning state\");\n            throw err_2;\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Compact version of credentials\n   * @param {Object} credentials\n   * @return {Object} - Credentials\n   */\n\n\n  AuthClass.prototype.essentialCredentials = function (credentials) {\n    return {\n      accessKeyId: credentials.accessKeyId,\n      sessionToken: credentials.sessionToken,\n      secretAccessKey: credentials.secretAccessKey,\n      identityId: credentials.identityId,\n      authenticated: credentials.authenticated\n    };\n  };\n\n  AuthClass.prototype.attributesToObject = function (attributes) {\n    var obj = {};\n\n    if (attributes) {\n      attributes.map(function (attribute) {\n        if (attribute.Value === 'true') {\n          obj[attribute.Name] = true;\n        } else if (attribute.Value === 'false') {\n          obj[attribute.Name] = false;\n        } else {\n          obj[attribute.Name] = attribute.Value;\n        }\n      });\n    }\n\n    return obj;\n  };\n\n  AuthClass.prototype.createCognitoUser = function (username) {\n    var userData = {\n      Username: username,\n      Pool: this.userPool\n    };\n    userData.Storage = this._storage;\n    var authenticationFlowType = this._config.authenticationFlowType;\n    var user = new CognitoUser(userData);\n\n    if (authenticationFlowType) {\n      user.setAuthenticationFlowType(authenticationFlowType);\n    }\n\n    return user;\n  };\n\n  AuthClass.prototype._isValidAuthStorage = function (obj) {\n    // We need to check if the obj has the functions of Storage\n    return !!obj && typeof obj.getItem === 'function' && typeof obj.setItem === 'function' && typeof obj.removeItem === 'function' && typeof obj.clear === 'function';\n  };\n\n  AuthClass.prototype.noUserPoolErrorHandler = function (config) {\n    if (config) {\n      if (!config.userPoolId || !config.identityPoolId) {\n        return AuthErrorTypes.MissingAuthConfig;\n      }\n    }\n\n    return AuthErrorTypes.NoConfig;\n  };\n\n  AuthClass.prototype.rejectAuthError = function (type) {\n    return Promise.reject(new AuthError(type));\n  };\n\n  AuthClass.prototype.rejectNoUserPool = function () {\n    var type = this.noUserPoolErrorHandler(this._config);\n    return Promise.reject(new NoUserPoolError(type));\n  };\n\n  return AuthClass;\n}();\n\nexport default AuthClass;","map":{"version":3,"mappings":"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","names":["isUsernamePasswordOpts","isCognitoHostedOpts","isFederatedSignInOptions","isFederatedSignInOptionsCustom","AWS","ConsoleLogger","Logger","Constants","Hub","JS","Parser","Credentials","StorageHelper","CookieStorage","CognitoUserPool","AuthenticationDetails","CognitoUser","CognitoUserSession","CognitoUserAttribute","CognitoIdToken","CognitoRefreshToken","CognitoAccessToken","parse","OAuth","default","urlListener","AuthError","NoUserPoolError","AuthErrorTypes","logger","USER_ADMIN_SCOPE","AMPLIFY_SYMBOL","Symbol","for","dispatchAuthEvent","event","data","message","dispatch","CognitoHostedUIIdentityProvider","config","configure","currentUserCredentials","bind","update","customUserAgent","userAgent","warn","listen","_a","payload","_this","_storage","setItem","removeItem","AuthClass","_config","debug","conf","Object","assign","parseMobilehubConfig","Auth","userPoolId","userPoolWebClientId","cookieStorage","oauth","region","identityPoolId","mandatorySignIn","refreshHandlers","identityPoolRegion","clientMetadata","storage","getStorage","_isValidAuthStorage","error","Error","_storageSync","Promise","resolve","userPoolData","UserPoolId","ClientId","Storage","userPool","cognitoHostedUIConfig","awsCognito","undefined","cognitoAuthParams","cognitoClientId","domain","scopes","redirectSignIn","redirectSignOut","responseType","urlOpener","_oAuthHandler","url","_handleAuthResponse","params","restOfAttrs","rejectNoUserPool","username","password","attributes","validationData","email","phone_number","push","Name","Value","attrs_1","keys","map","ele","key","rejectAuthError","SignUpError","EmptyUsername","EmptyPassword","reject","signUp","err","code","options","EmptyCode","user","createCognitoUser","forceAliasCreation","confirmRegistration","resendConfirmationCode","usernameOrSignInOpts","pw","InvalidUsername","authDetails","Username","Password","ValidationData","ClientMetadata","signInWithPassword","signInWithoutPassword","that","onSuccess","session","clear","set","cred","e_1","currentUserPoolUser","currentUser","getUsername","e_2","onFailure","customChallenge","challengeParam","mfaRequired","challengeName","mfaSetup","newPasswordRequired","userAttributes","requiredAttributes","totpRequired","selectMFAType","authenticateUser","authCallbacks","setAuthenticationFlowType","initiateAuth","res","rej","getMFAOptions","mfaOptions","bypassCache","getUserData","mfaType","_getMfaTypeFromUserData","ret","preferredMFA","PreferredMfaSetting","mfaList","UserMFASettingList","MFAOptions","length","mfaMethod","_getUserData","userData","_b","smsMfaSettings","totpMfaSettings","PreferredMfa","Enabled","currentMFAType","InvalidMFA","forEach","NoMFA","setUserMfaPreference","result","disableMFA","enableMFA","associateSoftwareToken","associateSecretCode","secretCode","challengeAnswer","verifySoftwareToken","sendMFACode","e_3","completeNewPasswordChallenge","e_4","challengeResponses","EmptyChallengeResponse","sendCustomChallengeAnswer","attributeList","userSession","then","indexOf","attr","updateAttributes","getUserAttributes","attrs","attributesToObject","unverified","verified","getCurrentUser","getSession","scope","split","includes","i","UserAttributes","attribute","userAttribute","catch","e","federatedUser","e_5","JSON","getItem","e_6","NoUserSession","e_7","federatedInfo","refreshFederatedToken","currentSession","get","getAttributeVerificationCode","verifyAttribute","verifyUserAttribute","verifyUserAttributeSubmit","opts","e_8","isSignedInHostedUI","global","globalSignOut","signOut","cleanCachedItems","cognitoIdentitySignOut","oldPassword","newPassword","changePassword","forgotPassword","inputVerificationCode","confirmPassword","source","getCredSource","userAttrs","credentials","currentCredentials","e_10","info","id","identityId","err_1","providerOrOptions","response","provider","Cognito","customProvider","customState","client_id","clientID","redirect_uri","redirectUri","oauthSignIn","loggedInUser","stringify","token","identity_id","expires_at","currentAuthenticatedUser","URL","currentUrl","browserOrNode","isBrowser","window","location","href","hasCodeOrError","query","find","k","hasTokenOrError","hash","substr","handleAuthResponse","_c","accessToken","idToken","refreshToken","state","IdToken","RefreshToken","AccessToken","isCustomStateIncluded","test","getIdToken","decodePayload","setSignInUserSession","history","replaceState","err_2","accessKeyId","sessionToken","secretAccessKey","authenticated","obj","Pool","authenticationFlowType","MissingAuthConfig","NoConfig","type","noUserPoolErrorHandler"],"sourceRoot":"","sources":["../src/Auth.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}